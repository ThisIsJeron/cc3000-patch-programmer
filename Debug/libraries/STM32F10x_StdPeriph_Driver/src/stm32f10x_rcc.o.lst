   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RCC_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	RCC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	RCC_DeInit:
  25              	.LFB56:
  26              		.file 1 "../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c"
   1:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
   2:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @version V3.6.1
   6:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @date    05-March-2012
   7:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @attention
  10:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  11:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  13:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * You may not use this file except in compliance with the License.
  15:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * You may obtain a copy of the License at:
  16:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  17:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  19:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * See the License for the specific language governing permissions and
  23:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * limitations under the License.
  24:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  25:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
  26:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  27:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  28:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  29:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  30:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  31:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  32:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  33:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  34:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  35:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  36:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  37:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  38:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
  39:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  40:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  41:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  42:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  43:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  44:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
  45:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
  46:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  47:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  48:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  49:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  50:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  51:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  52:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  53:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  54:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  55:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  56:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  57:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  58:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  59:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  60:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  61:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  62:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  63:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  64:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  65:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  66:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  67:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  68:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  69:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  70:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  71:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  72:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  73:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  74:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  75:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  76:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  77:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  78:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  79:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  80:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  81:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  82:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  83:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  84:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  85:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  86:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  87:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  88:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
  89:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  90:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  91:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  92:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  93:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  94:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  95:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  96:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  97:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  98:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  99:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
 101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
 102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
 105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  27              		.loc 1 224 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  32              		.loc 1 226 0
  33 0000 0D4B     		ldr	r3, .L2
  34 0002 1A68     		ldr	r2, [r3, #0]
  35 0004 42F00100 		orr	r0, r2, #1
  36 0008 1860     		str	r0, [r3, #0]
 227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  37              		.loc 1 230 0
  38 000a 5968     		ldr	r1, [r3, #4]
  39 000c 0B4A     		ldr	r2, .L2+4
  40 000e 0A40     		ands	r2, r2, r1
  41 0010 5A60     		str	r2, [r3, #4]
 231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  42              		.loc 1 236 0
  43 0012 1868     		ldr	r0, [r3, #0]
  44 0014 20F08471 		bic	r1, r0, #17301504
  45 0018 21F48032 		bic	r2, r1, #65536
  46 001c 1A60     		str	r2, [r3, #0]
 237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  47              		.loc 1 239 0
  48 001e 1868     		ldr	r0, [r3, #0]
  49 0020 20F48021 		bic	r1, r0, #262144
  50 0024 1960     		str	r1, [r3, #0]
 240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  51              		.loc 1 242 0
  52 0026 5A68     		ldr	r2, [r3, #4]
 243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
  53              		.loc 1 261 0
  54 0028 4FF41F01 		mov	r1, #10420224
 242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  55              		.loc 1 242 0
  56 002c 22F4FE00 		bic	r0, r2, #8323072
  57 0030 5860     		str	r0, [r3, #4]
  58              		.loc 1 261 0
  59 0032 9960     		str	r1, [r3, #8]
  60 0034 7047     		bx	lr
  61              	.L3:
  62 0036 00BF     		.align	2
  63              	.L2:
  64 0038 00100240 		.word	1073876992
  65 003c 0000FFF8 		.word	-117506048
  66              		.cfi_endproc
  67              	.LFE56:
  69              		.section	.text.RCC_HSEConfig,"ax",%progbits
  70              		.align	1
  71              		.global	RCC_HSEConfig
  72              		.thumb
  73              		.thumb_func
  75              	RCC_HSEConfig:
  76              	.LFB57:
 262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  77              		.loc 1 277 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.LVL0:
 278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
  83              		.loc 1 282 0
  84 0000 0B4B     		ldr	r3, .L10
 283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
  85              		.loc 1 286 0
  86 0002 B0F5803F 		cmp	r0, #65536
 282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
  87              		.loc 1 282 0
  88 0006 1A68     		ldr	r2, [r3, #0]
  89 0008 22F48031 		bic	r1, r2, #65536
  90 000c 1960     		str	r1, [r3, #0]
 284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
  91              		.loc 1 284 0
  92 000e 1A68     		ldr	r2, [r3, #0]
  93 0010 22F48021 		bic	r1, r2, #262144
  94 0014 1960     		str	r1, [r3, #0]
  95              		.loc 1 286 0
  96 0016 06D0     		beq	.L6
  97 0018 B0F5802F 		cmp	r0, #262144
  98 001c 07D1     		bne	.L4
 287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
 291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
  99              		.loc 1 295 0
 100 001e 1868     		ldr	r0, [r3, #0]
 101              	.LVL1:
 102 0020 40F4A022 		orr	r2, r0, #327680
 103 0024 02E0     		b	.L8
 104              	.LVL2:
 105              	.L6:
 290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
 106              		.loc 1 290 0
 107 0026 1968     		ldr	r1, [r3, #0]
 108 0028 41F48032 		orr	r2, r1, #65536
 109              	.LVL3:
 110              	.L8:
 111              		.loc 1 295 0
 112 002c 1A60     		str	r2, [r3, #0]
 113              	.L4:
 114 002e 7047     		bx	lr
 115              	.L11:
 116              		.align	2
 117              	.L10:
 118 0030 00100240 		.word	1073876992
 119              		.cfi_endproc
 120              	.LFE57:
 122              		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 123              		.align	1
 124              		.global	RCC_AdjustHSICalibrationValue
 125              		.thumb
 126              		.thumb_func
 128              	RCC_AdjustHSICalibrationValue:
 129              	.LFB59:
 296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 300:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 301:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 302:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 303:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 304:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 305:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 306:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 307:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 308:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 309:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 310:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 311:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 312:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 313:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 314:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 315:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 317:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   do
 318:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 319:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 320:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 321:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 322:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 323:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 324:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 325:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 326:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 327:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 328:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 329:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = ERROR;
 330:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }  
 331:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return (status);
 332:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 333:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 334:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 335:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 336:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 337:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 338:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 339:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 340:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 341:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 130              		.loc 1 341 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135              	.LVL4:
 342:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 343:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 344:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 345:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 136              		.loc 1 345 0
 137 0000 034B     		ldr	r3, .L13
 138 0002 1A68     		ldr	r2, [r3, #0]
 139              	.LVL5:
 346:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 347:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 140              		.loc 1 347 0
 141 0004 22F0F801 		bic	r1, r2, #248
 142              	.LVL6:
 348:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 349:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 143              		.loc 1 349 0
 144 0008 41EAC000 		orr	r0, r1, r0, lsl #3
 145              	.LVL7:
 350:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 351:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 146              		.loc 1 351 0
 147 000c 1860     		str	r0, [r3, #0]
 148 000e 7047     		bx	lr
 149              	.L14:
 150              		.align	2
 151              	.L13:
 152 0010 00100240 		.word	1073876992
 153              		.cfi_endproc
 154              	.LFE59:
 156              		.section	.text.RCC_HSICmd,"ax",%progbits
 157              		.align	1
 158              		.global	RCC_HSICmd
 159              		.thumb
 160              		.thumb_func
 162              	RCC_HSICmd:
 163              	.LFB60:
 352:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 353:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 354:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 355:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 356:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 357:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 358:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 359:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 360:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 361:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 164              		.loc 1 361 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169              	.LVL8:
 362:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 363:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 364:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 170              		.loc 1 364 0
 171 0000 014B     		ldr	r3, .L16
 172 0002 1860     		str	r0, [r3, #0]
 173 0004 7047     		bx	lr
 174              	.L17:
 175 0006 00BF     		.align	2
 176              	.L16:
 177 0008 00004242 		.word	1111621632
 178              		.cfi_endproc
 179              	.LFE60:
 181              		.section	.text.RCC_PLLConfig,"ax",%progbits
 182              		.align	1
 183              		.global	RCC_PLLConfig
 184              		.thumb
 185              		.thumb_func
 187              	RCC_PLLConfig:
 188              	.LFB61:
 365:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 366:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 367:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 368:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 369:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 370:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 371:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 372:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 373:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 374:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 375:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 376:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 377:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 378:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 379:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 380:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 381:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 382:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 383:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 384:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 385:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 189              		.loc 1 385 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LVL9:
 386:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 387:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 388:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 389:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 390:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 391:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 392:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 195              		.loc 1 392 0
 196 0000 034B     		ldr	r3, .L19
 197 0002 5A68     		ldr	r2, [r3, #4]
 198              	.LVL10:
 393:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 394:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 199              		.loc 1 394 0
 200 0004 22F47C12 		bic	r2, r2, #4128768
 201              	.LVL11:
 395:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 396:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 202              		.loc 1 396 0
 203 0008 1043     		orrs	r0, r0, r2
 204              	.LVL12:
 205 000a 0143     		orrs	r1, r1, r0
 206              	.LVL13:
 397:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 398:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 207              		.loc 1 398 0
 208 000c 5960     		str	r1, [r3, #4]
 209 000e 7047     		bx	lr
 210              	.L20:
 211              		.align	2
 212              	.L19:
 213 0010 00100240 		.word	1073876992
 214              		.cfi_endproc
 215              	.LFE61:
 217              		.section	.text.RCC_PLLCmd,"ax",%progbits
 218              		.align	1
 219              		.global	RCC_PLLCmd
 220              		.thumb
 221              		.thumb_func
 223              	RCC_PLLCmd:
 224              	.LFB62:
 399:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 400:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 401:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 402:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 403:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 404:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 405:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 406:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 407:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 408:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 225              		.loc 1 408 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL14:
 409:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 410:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 411:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 412:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 231              		.loc 1 412 0
 232 0000 014B     		ldr	r3, .L22
 233 0002 1860     		str	r0, [r3, #0]
 234 0004 7047     		bx	lr
 235              	.L23:
 236 0006 00BF     		.align	2
 237              	.L22:
 238 0008 60004242 		.word	1111621728
 239              		.cfi_endproc
 240              	.LFE62:
 242              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 243              		.align	1
 244              		.global	RCC_SYSCLKConfig
 245              		.thumb
 246              		.thumb_func
 248              	RCC_SYSCLKConfig:
 249              	.LFB63:
 413:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 414:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 415:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 416:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 417:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 418:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 419:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 420:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 421:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     devices.
 422:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 423:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 424:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 425:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 426:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 427:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 428:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 429:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 430:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 431:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 432:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 433:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 434:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 435:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 436:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 437:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 438:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 439:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 440:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 441:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 442:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 443:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 444:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 445:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 446:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 447:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 448:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 449:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 450:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 451:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 452:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 453:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 454:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 455:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 456:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 457:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 458:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 459:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 460:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 461:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 462:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 463:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 464:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 465:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 466:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 467:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 468:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 469:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 470:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 471:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 472:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 473:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 474:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 475:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 476:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 477:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 478:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 479:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 480:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 481:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 482:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 483:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 484:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 485:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 486:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 487:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 488:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 489:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 490:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 491:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 492:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 493:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 494:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 495:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 496:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 497:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 498:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 499:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 500:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 501:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 502:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 503:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 504:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 505:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 506:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 507:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 508:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 509:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 510:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 511:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 512:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 513:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 514:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 515:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 516:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 517:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 518:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 519:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 520:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 521:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 522:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 523:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 524:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 525:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 526:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 527:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 528:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 529:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 530:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 531:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 532:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 533:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 534:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 535:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 536:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 537:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 538:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 539:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 540:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 541:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 542:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 543:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 544:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 545:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 546:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 547:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 548:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 549:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 550:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 551:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 552:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 553:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 554:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 555:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 556:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 557:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 558:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 559:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 560:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 561:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 562:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 563:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 564:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 565:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 566:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 567:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 568:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 569:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 570:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 571:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 250              		.loc 1 571 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255              	.LVL15:
 572:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 573:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 574:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 575:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 256              		.loc 1 575 0
 257 0000 034B     		ldr	r3, .L25
 258 0002 5A68     		ldr	r2, [r3, #4]
 259              	.LVL16:
 576:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 577:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 260              		.loc 1 577 0
 261 0004 22F00301 		bic	r1, r2, #3
 262              	.LVL17:
 578:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 579:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 263              		.loc 1 579 0
 264 0008 0843     		orrs	r0, r0, r1
 265              	.LVL18:
 580:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 581:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 266              		.loc 1 581 0
 267 000a 5860     		str	r0, [r3, #4]
 268 000c 7047     		bx	lr
 269              	.L26:
 270 000e 00BF     		.align	2
 271              	.L25:
 272 0010 00100240 		.word	1073876992
 273              		.cfi_endproc
 274              	.LFE63:
 276              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 277              		.align	1
 278              		.global	RCC_GetSYSCLKSource
 279              		.thumb
 280              		.thumb_func
 282              	RCC_GetSYSCLKSource:
 283              	.LFB64:
 582:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 583:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 584:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 585:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 586:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 587:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 588:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   be one of the following:
 589:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 590:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 591:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 592:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 593:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 594:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 284              		.loc 1 594 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 595:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 289              		.loc 1 595 0
 290 0000 024B     		ldr	r3, .L28
 291 0002 5868     		ldr	r0, [r3, #4]
 596:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 292              		.loc 1 596 0
 293 0004 00F00C00 		and	r0, r0, #12
 294 0008 7047     		bx	lr
 295              	.L29:
 296 000a 00BF     		.align	2
 297              	.L28:
 298 000c 00100240 		.word	1073876992
 299              		.cfi_endproc
 300              	.LFE64:
 302              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 303              		.align	1
 304              		.global	RCC_HCLKConfig
 305              		.thumb
 306              		.thumb_func
 308              	RCC_HCLKConfig:
 309              	.LFB65:
 597:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 598:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 599:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 600:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 601:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 602:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 603:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 604:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 605:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 606:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 607:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 608:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 609:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 610:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 611:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 612:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 613:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 614:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 615:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 310              		.loc 1 615 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL19:
 616:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 617:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 618:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 619:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 316              		.loc 1 619 0
 317 0000 034B     		ldr	r3, .L31
 318 0002 5A68     		ldr	r2, [r3, #4]
 319              	.LVL20:
 620:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 621:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 320              		.loc 1 621 0
 321 0004 22F0F001 		bic	r1, r2, #240
 322              	.LVL21:
 622:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 623:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 323              		.loc 1 623 0
 324 0008 0843     		orrs	r0, r0, r1
 325              	.LVL22:
 624:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 625:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 326              		.loc 1 625 0
 327 000a 5860     		str	r0, [r3, #4]
 328 000c 7047     		bx	lr
 329              	.L32:
 330 000e 00BF     		.align	2
 331              	.L31:
 332 0010 00100240 		.word	1073876992
 333              		.cfi_endproc
 334              	.LFE65:
 336              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 337              		.align	1
 338              		.global	RCC_PCLK1Config
 339              		.thumb
 340              		.thumb_func
 342              	RCC_PCLK1Config:
 343              	.LFB66:
 626:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 627:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 628:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 629:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 630:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 631:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 632:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 633:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 634:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 635:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 636:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 637:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 638:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 639:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 640:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 641:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 344              		.loc 1 641 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349              	.LVL23:
 642:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 643:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 644:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 645:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 350              		.loc 1 645 0
 351 0000 034B     		ldr	r3, .L34
 352 0002 5A68     		ldr	r2, [r3, #4]
 353              	.LVL24:
 646:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 647:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 354              		.loc 1 647 0
 355 0004 22F4E061 		bic	r1, r2, #1792
 356              	.LVL25:
 648:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 649:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 357              		.loc 1 649 0
 358 0008 0843     		orrs	r0, r0, r1
 359              	.LVL26:
 650:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 651:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 360              		.loc 1 651 0
 361 000a 5860     		str	r0, [r3, #4]
 362 000c 7047     		bx	lr
 363              	.L35:
 364 000e 00BF     		.align	2
 365              	.L34:
 366 0010 00100240 		.word	1073876992
 367              		.cfi_endproc
 368              	.LFE66:
 370              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 371              		.align	1
 372              		.global	RCC_PCLK2Config
 373              		.thumb
 374              		.thumb_func
 376              	RCC_PCLK2Config:
 377              	.LFB67:
 652:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 653:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 654:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 655:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 656:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 657:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 658:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 659:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 660:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 661:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 662:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 663:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 664:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 665:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 666:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 667:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 378              		.loc 1 667 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383              	.LVL27:
 668:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 669:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 670:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 671:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 384              		.loc 1 671 0
 385 0000 034B     		ldr	r3, .L37
 386 0002 5A68     		ldr	r2, [r3, #4]
 387              	.LVL28:
 672:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 673:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 388              		.loc 1 673 0
 389 0004 22F46051 		bic	r1, r2, #14336
 390              	.LVL29:
 674:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 675:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 391              		.loc 1 675 0
 392 0008 41EAC000 		orr	r0, r1, r0, lsl #3
 393              	.LVL30:
 676:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 677:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 394              		.loc 1 677 0
 395 000c 5860     		str	r0, [r3, #4]
 396 000e 7047     		bx	lr
 397              	.L38:
 398              		.align	2
 399              	.L37:
 400 0010 00100240 		.word	1073876992
 401              		.cfi_endproc
 402              	.LFE67:
 404              		.section	.text.RCC_ITConfig,"ax",%progbits
 405              		.align	1
 406              		.global	RCC_ITConfig
 407              		.thumb
 408              		.thumb_func
 410              	RCC_ITConfig:
 411              	.LFB68:
 678:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 679:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 680:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 681:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 682:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 683:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 684:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 685:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values        
 686:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 687:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 688:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 689:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 690:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 691:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 692:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 693:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 694:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 695:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values        
 696:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 697:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 698:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 699:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 700:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 701:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *       
 702:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 703:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 704:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 705:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 706:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 707:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 412              		.loc 1 707 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417              	.LVL31:
 418 0000 044B     		ldr	r3, .L43
 708:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 709:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 710:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 711:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 712:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 713:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 714:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 419              		.loc 1 714 0
 420 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 711:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 421              		.loc 1 711 0
 422 0004 09B1     		cbz	r1, .L40
 423              		.loc 1 714 0
 424 0006 1043     		orrs	r0, r0, r2
 425              	.LVL32:
 426 0008 01E0     		b	.L42
 427              	.LVL33:
 428              	.L40:
 715:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 716:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 717:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 718:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 719:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 429              		.loc 1 719 0
 430 000a 22EA0000 		bic	r0, r2, r0
 431              	.LVL34:
 432              	.L42:
 433 000e 1870     		strb	r0, [r3, #0]
 434 0010 7047     		bx	lr
 435              	.L44:
 436 0012 00BF     		.align	2
 437              	.L43:
 438 0014 09100240 		.word	1073877001
 439              		.cfi_endproc
 440              	.LFE68:
 442              		.section	.text.RCC_USBCLKConfig,"ax",%progbits
 443              		.align	1
 444              		.global	RCC_USBCLKConfig
 445              		.thumb
 446              		.thumb_func
 448              	RCC_USBCLKConfig:
 449              	.LFB69:
 720:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 721:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 722:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 723:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 724:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 725:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 726:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 727:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 728:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 729:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 730:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *                                     clock source
 731:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 732:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 733:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 734:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 735:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 450              		.loc 1 735 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455              	.LVL35:
 736:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 737:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 738:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 739:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 456              		.loc 1 739 0
 457 0000 014B     		ldr	r3, .L46
 458 0002 1860     		str	r0, [r3, #0]
 459 0004 7047     		bx	lr
 460              	.L47:
 461 0006 00BF     		.align	2
 462              	.L46:
 463 0008 D8004242 		.word	1111621848
 464              		.cfi_endproc
 465              	.LFE69:
 467              		.section	.text.RCC_ADCCLKConfig,"ax",%progbits
 468              		.align	1
 469              		.global	RCC_ADCCLKConfig
 470              		.thumb
 471              		.thumb_func
 473              	RCC_ADCCLKConfig:
 474              	.LFB70:
 740:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 741:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 742:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 743:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 744:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 745:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 746:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 747:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 748:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 749:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 750:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 751:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 752:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 753:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 754:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 755:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 756:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 757:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 758:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 759:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 760:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 761:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 762:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 763:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 764:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 765:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 766:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 767:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 768:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 769:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 770:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 771:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 772:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 773:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 475              		.loc 1 773 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480              	.LVL36:
 774:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 775:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 776:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 777:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 481              		.loc 1 777 0
 482 0000 034B     		ldr	r3, .L49
 483 0002 5A68     		ldr	r2, [r3, #4]
 484              	.LVL37:
 778:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 779:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 485              		.loc 1 779 0
 486 0004 22F44041 		bic	r1, r2, #49152
 487              	.LVL38:
 780:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 781:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 488              		.loc 1 781 0
 489 0008 0843     		orrs	r0, r0, r1
 490              	.LVL39:
 782:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 783:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 491              		.loc 1 783 0
 492 000a 5860     		str	r0, [r3, #4]
 493 000c 7047     		bx	lr
 494              	.L50:
 495 000e 00BF     		.align	2
 496              	.L49:
 497 0010 00100240 		.word	1073876992
 498              		.cfi_endproc
 499              	.LFE70:
 501              		.section	.text.RCC_LSEConfig,"ax",%progbits
 502              		.align	1
 503              		.global	RCC_LSEConfig
 504              		.thumb
 505              		.thumb_func
 507              	RCC_LSEConfig:
 508              	.LFB71:
 784:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 785:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 786:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 787:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 788:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 789:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 790:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 791:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 792:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 793:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 794:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 795:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 796:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 797:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 798:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 799:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 800:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 801:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 802:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 803:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 804:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 805:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 806:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 807:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 808:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 809:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 810:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 811:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 812:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 813:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 814:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 815:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 816:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 817:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 818:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 819:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 820:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 821:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 822:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 823:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 824:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 825:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 826:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 827:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 828:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 829:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 830:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 831:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 832:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 833:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 834:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 835:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 836:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 509              		.loc 1 836 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514              	.LVL40:
 837:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 838:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 839:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 840:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 841:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 515              		.loc 1 841 0
 516 0000 064B     		ldr	r3, .L55
 517 0002 0022     		movs	r2, #0
 842:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 843:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 844:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 845:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 518              		.loc 1 845 0
 519 0004 0128     		cmp	r0, #1
 841:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 520              		.loc 1 841 0
 521 0006 1A70     		strb	r2, [r3, #0]
 843:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 522              		.loc 1 843 0
 523 0008 1A70     		strb	r2, [r3, #0]
 524              		.loc 1 845 0
 525 000a 04D0     		beq	.L53
 526 000c 0428     		cmp	r0, #4
 527 000e 04D1     		bne	.L51
 846:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 847:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 848:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 849:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 850:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 851:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 852:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 853:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 854:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 528              		.loc 1 854 0
 529 0010 0520     		movs	r0, #5
 530              	.LVL41:
 531 0012 1870     		strb	r0, [r3, #0]
 855:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;            
 532              		.loc 1 855 0
 533 0014 01E0     		b	.L51
 534              	.LVL42:
 535              	.L53:
 849:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 536              		.loc 1 849 0
 537 0016 1870     		strb	r0, [r3, #0]
 850:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 538              		.loc 1 850 0
 539 0018 7047     		bx	lr
 540              	.LVL43:
 541              	.L51:
 542 001a 7047     		bx	lr
 543              	.L56:
 544              		.align	2
 545              	.L55:
 546 001c 20100240 		.word	1073877024
 547              		.cfi_endproc
 548              	.LFE71:
 550              		.section	.text.RCC_LSICmd,"ax",%progbits
 551              		.align	1
 552              		.global	RCC_LSICmd
 553              		.thumb
 554              		.thumb_func
 556              	RCC_LSICmd:
 557              	.LFB72:
 856:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 857:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 858:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;      
 859:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 860:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 861:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 862:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 863:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 864:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 865:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 866:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 867:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 868:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 869:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 558              		.loc 1 869 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563              	.LVL44:
 870:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 871:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 872:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 564              		.loc 1 872 0
 565 0000 014B     		ldr	r3, .L58
 566 0002 1860     		str	r0, [r3, #0]
 567 0004 7047     		bx	lr
 568              	.L59:
 569 0006 00BF     		.align	2
 570              	.L58:
 571 0008 80044242 		.word	1111622784
 572              		.cfi_endproc
 573              	.LFE72:
 575              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 576              		.align	1
 577              		.global	RCC_RTCCLKConfig
 578              		.thumb
 579              		.thumb_func
 581              	RCC_RTCCLKConfig:
 582              	.LFB73:
 873:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 874:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 875:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 876:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 877:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 878:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 879:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 880:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 881:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 882:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 883:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 884:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 885:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 886:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 583              		.loc 1 886 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 588              	.LVL45:
 887:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 888:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 889:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 890:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 589              		.loc 1 890 0
 590 0000 024B     		ldr	r3, .L61
 591 0002 1A6A     		ldr	r2, [r3, #32]
 592 0004 1043     		orrs	r0, r0, r2
 593              	.LVL46:
 594 0006 1862     		str	r0, [r3, #32]
 595 0008 7047     		bx	lr
 596              	.L62:
 597 000a 00BF     		.align	2
 598              	.L61:
 599 000c 00100240 		.word	1073876992
 600              		.cfi_endproc
 601              	.LFE73:
 603              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 604              		.align	1
 605              		.global	RCC_RTCCLKCmd
 606              		.thumb
 607              		.thumb_func
 609              	RCC_RTCCLKCmd:
 610              	.LFB74:
 891:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 892:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 893:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 894:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 895:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 896:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 897:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 898:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 899:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 900:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 611              		.loc 1 900 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL47:
 901:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 902:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 903:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 617              		.loc 1 903 0
 618 0000 014B     		ldr	r3, .L64
 619 0002 1860     		str	r0, [r3, #0]
 620 0004 7047     		bx	lr
 621              	.L65:
 622 0006 00BF     		.align	2
 623              	.L64:
 624 0008 3C044242 		.word	1111622716
 625              		.cfi_endproc
 626              	.LFE74:
 628              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 629              		.align	1
 630              		.global	RCC_GetClocksFreq
 631              		.thumb
 632              		.thumb_func
 634              	RCC_GetClocksFreq:
 635              	.LFB75:
 904:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 905:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 906:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 907:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 908:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 909:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 910:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 911:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 912:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 913:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 914:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 915:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 636              		.loc 1 915 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              	.LVL48:
 916:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 917:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 918:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 919:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 920:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 921:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 922:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 923:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 924:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 925:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     
 926:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 927:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 641              		.loc 1 927 0
 642 0000 1D4B     		ldr	r3, .L76
 915:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 643              		.loc 1 915 0
 644 0002 10B5     		push	{r4, lr}
 645              	.LCFI0:
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 4, -8
 648              		.cfi_offset 14, -4
 649              		.loc 1 927 0
 650 0004 5A68     		ldr	r2, [r3, #4]
 651              	.LVL49:
 652 0006 02F00C01 		and	r1, r2, #12
 653              	.LVL50:
 928:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 929:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch (tmp)
 654              		.loc 1 929 0
 655 000a 0429     		cmp	r1, #4
 656 000c 01D0     		beq	.L69
 657 000e 0829     		cmp	r1, #8
 658 0010 02D0     		beq	.L70
 659              	.L69:
 930:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 931:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 932:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 933:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 934:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 935:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 660              		.loc 1 935 0
 661 0012 1A4A     		ldr	r2, .L76+4
 662 0014 0260     		str	r2, [r0, #0]
 936:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 663              		.loc 1 936 0
 664 0016 0EE0     		b	.L71
 665              	.L70:
 937:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 938:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 939:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 940:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 666              		.loc 1 940 0
 667 0018 5C68     		ldr	r4, [r3, #4]
 668              	.LVL51:
 941:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 669              		.loc 1 941 0
 670 001a 5968     		ldr	r1, [r3, #4]
 671              	.LVL52:
 942:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 943:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 944:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 672              		.loc 1 944 0
 673 001c C4F38342 		ubfx	r2, r4, #18, #4
 674              	.LVL53:
 675 0020 941C     		adds	r4, r2, #2
 676              	.LVL54:
 945:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 946:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 677              		.loc 1 946 0
 678 0022 C903     		lsls	r1, r1, #15
 679              	.LVL55:
 680 0024 02D5     		bpl	.L75
 681              	.L72:
 947:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 948:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 949:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 950:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 951:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 952:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 953:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 954:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 955:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 956:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #else
 957:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 958:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 682              		.loc 1 958 0
 683 0026 5B68     		ldr	r3, [r3, #4]
 684 0028 9B03     		lsls	r3, r3, #14
 685 002a 01D5     		bpl	.L73
 686              	.L75:
 959:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 960:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 687              		.loc 1 960 0
 688 002c 1449     		ldr	r1, .L76+8
 689 002e 00E0     		b	.L74
 690              	.L73:
 961:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 962:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 963:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {
 964:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 691              		.loc 1 964 0
 692 0030 1249     		ldr	r1, .L76+4
 693              	.L74:
 694 0032 4C43     		muls	r4, r1, r4
 695              	.LVL56:
 696 0034 0460     		str	r4, [r0, #0]
 697              	.LVL57:
 698              	.L71:
 965:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 966:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #endif
 967:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 968:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 969:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 970:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 971:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 972:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 973:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****          pllmull += 2;
 974:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 975:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 976:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 977:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 978:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 979:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****             
 980:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 981:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 982:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 983:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 984:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 985:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 986:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 987:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 988:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 989:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 990:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 991:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 992:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 993:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 994:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 995:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 996:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 997:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           
 998:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 999:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
1000:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
1001:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
1002:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
1003:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
1004:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1005:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
1006:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1007:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
1008:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
1009:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
1010:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1011:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1012:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1013:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1014:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 699              		.loc 1 1014 0
 700 0036 104A     		ldr	r2, .L76
1015:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
1016:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 701              		.loc 1 1016 0
 702 0038 124B     		ldr	r3, .L76+12
1014:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 703              		.loc 1 1014 0
 704 003a 5468     		ldr	r4, [r2, #4]
 705              	.LVL58:
1015:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 706              		.loc 1 1015 0
 707 003c C4F30311 		ubfx	r1, r4, #4, #4
 708              	.LVL59:
 709              		.loc 1 1016 0
 710 0040 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 711              	.LVL60:
1017:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1018:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 712              		.loc 1 1018 0
 713 0042 0168     		ldr	r1, [r0, #0]
 714              	.LVL61:
 715 0044 21FA04F1 		lsr	r1, r1, r4
 716 0048 4160     		str	r1, [r0, #4]
1019:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1020:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 717              		.loc 1 1020 0
 718 004a 5468     		ldr	r4, [r2, #4]
 719              	.LVL62:
1021:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 720              		.loc 1 1021 0
 721 004c C4F30224 		ubfx	r4, r4, #8, #3
 722              	.LVL63:
1022:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 723              		.loc 1 1022 0
 724 0050 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
 725              	.LVL64:
1023:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1024:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 726              		.loc 1 1024 0
 727 0052 21FA04F4 		lsr	r4, r1, r4
 728              	.LVL65:
 729 0056 8460     		str	r4, [r0, #8]
1025:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1026:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 730              		.loc 1 1026 0
 731 0058 5468     		ldr	r4, [r2, #4]
 732              	.LVL66:
1027:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 733              		.loc 1 1027 0
 734 005a C4F3C224 		ubfx	r4, r4, #11, #3
 735              	.LVL67:
1028:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 736              		.loc 1 1028 0
 737 005e 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
 738              	.LVL68:
1029:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1030:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 739              		.loc 1 1030 0
 740 0060 21FA04F1 		lsr	r1, r1, r4
 741 0064 C160     		str	r1, [r0, #12]
1031:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1032:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 742              		.loc 1 1032 0
 743 0066 5268     		ldr	r2, [r2, #4]
 744              	.LVL69:
1033:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 745              		.loc 1 1033 0
 746 0068 C2F38132 		ubfx	r2, r2, #14, #2
 747              	.LVL70:
1034:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 748              		.loc 1 1034 0
 749 006c 9B18     		adds	r3, r3, r2
 750 006e 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 751              	.LVL71:
1035:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1036:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 752              		.loc 1 1036 0
 753 0070 B1FBF2F1 		udiv	r1, r1, r2
 754 0074 0161     		str	r1, [r0, #16]
 755 0076 10BD     		pop	{r4, pc}
 756              	.L77:
 757              		.align	2
 758              	.L76:
 759 0078 00100240 		.word	1073876992
 760 007c 00127A00 		.word	8000000
 761 0080 00093D00 		.word	4000000
 762 0084 00000000 		.word	.LANCHOR0
 763              		.cfi_endproc
 764              	.LFE75:
 766              		.section	.text.RCC_AHBPeriphClockCmd,"ax",%progbits
 767              		.align	1
 768              		.global	RCC_AHBPeriphClockCmd
 769              		.thumb
 770              		.thumb_func
 772              	RCC_AHBPeriphClockCmd:
 773              	.LFB76:
1037:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1038:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1039:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1040:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1041:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1042:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1043:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1044:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:        
1045:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1046:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1047:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1048:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1049:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1050:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1051:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1052:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1053:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1054:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1055:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1056:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1057:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1058:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1059:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1060:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1061:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1062:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1063:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1064:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1065:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1066:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1067:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1068:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1069:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1070:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1071:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 774              		.loc 1 1071 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779              	.LVL72:
 780 0000 044B     		ldr	r3, .L82
1072:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1073:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1074:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1075:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1076:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1077:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1078:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 781              		.loc 1 1078 0
 782 0002 5A69     		ldr	r2, [r3, #20]
1076:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 783              		.loc 1 1076 0
 784 0004 09B1     		cbz	r1, .L79
 785              		.loc 1 1078 0
 786 0006 1043     		orrs	r0, r0, r2
 787              	.LVL73:
 788 0008 01E0     		b	.L81
 789              	.LVL74:
 790              	.L79:
1079:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1080:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1081:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1082:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 791              		.loc 1 1082 0
 792 000a 22EA0000 		bic	r0, r2, r0
 793              	.LVL75:
 794              	.L81:
 795 000e 5861     		str	r0, [r3, #20]
 796 0010 7047     		bx	lr
 797              	.L83:
 798 0012 00BF     		.align	2
 799              	.L82:
 800 0014 00100240 		.word	1073876992
 801              		.cfi_endproc
 802              	.LFE76:
 804              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 805              		.align	1
 806              		.global	RCC_APB2PeriphClockCmd
 807              		.thumb
 808              		.thumb_func
 810              	RCC_APB2PeriphClockCmd:
 811              	.LFB77:
1083:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1084:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1085:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1086:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1087:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1088:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1089:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1090:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1091:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1092:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1093:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1094:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1095:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1096:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1097:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1098:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1099:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 812              		.loc 1 1102 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              		@ link register save eliminated.
 817              	.LVL76:
 818 0000 044B     		ldr	r3, .L88
1103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 819              		.loc 1 1108 0
 820 0002 9A69     		ldr	r2, [r3, #24]
1106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 821              		.loc 1 1106 0
 822 0004 09B1     		cbz	r1, .L85
 823              		.loc 1 1108 0
 824 0006 1043     		orrs	r0, r0, r2
 825              	.LVL77:
 826 0008 01E0     		b	.L87
 827              	.LVL78:
 828              	.L85:
1109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 829              		.loc 1 1112 0
 830 000a 22EA0000 		bic	r0, r2, r0
 831              	.LVL79:
 832              	.L87:
 833 000e 9861     		str	r0, [r3, #24]
 834 0010 7047     		bx	lr
 835              	.L89:
 836 0012 00BF     		.align	2
 837              	.L88:
 838 0014 00100240 		.word	1073876992
 839              		.cfi_endproc
 840              	.LFE77:
 842              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 843              		.align	1
 844              		.global	RCC_APB1PeriphClockCmd
 845              		.thumb
 846              		.thumb_func
 848              	RCC_APB1PeriphClockCmd:
 849              	.LFB78:
1113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 850              		.loc 1 1133 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL80:
 856 0000 044B     		ldr	r3, .L94
1134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 857              		.loc 1 1139 0
 858 0002 DA69     		ldr	r2, [r3, #28]
1137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 859              		.loc 1 1137 0
 860 0004 09B1     		cbz	r1, .L91
 861              		.loc 1 1139 0
 862 0006 1043     		orrs	r0, r0, r2
 863              	.LVL81:
 864 0008 01E0     		b	.L93
 865              	.LVL82:
 866              	.L91:
1140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 867              		.loc 1 1143 0
 868 000a 22EA0000 		bic	r0, r2, r0
 869              	.LVL83:
 870              	.L93:
 871 000e D861     		str	r0, [r3, #28]
 872 0010 7047     		bx	lr
 873              	.L95:
 874 0012 00BF     		.align	2
 875              	.L94:
 876 0014 00100240 		.word	1073876992
 877              		.cfi_endproc
 878              	.LFE78:
 880              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 881              		.align	1
 882              		.global	RCC_APB2PeriphResetCmd
 883              		.thumb
 884              		.thumb_func
 886              	RCC_APB2PeriphResetCmd:
 887              	.LFB79:
1144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
1161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 888              		.loc 1 1192 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              		@ link register save eliminated.
 893              	.LVL84:
 894 0000 044B     		ldr	r3, .L100
1193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 895              		.loc 1 1198 0
 896 0002 DA68     		ldr	r2, [r3, #12]
1196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 897              		.loc 1 1196 0
 898 0004 09B1     		cbz	r1, .L97
 899              		.loc 1 1198 0
 900 0006 1043     		orrs	r0, r0, r2
 901              	.LVL85:
 902 0008 01E0     		b	.L99
 903              	.LVL86:
 904              	.L97:
1199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 905              		.loc 1 1202 0
 906 000a 22EA0000 		bic	r0, r2, r0
 907              	.LVL87:
 908              	.L99:
 909 000e D860     		str	r0, [r3, #12]
 910 0010 7047     		bx	lr
 911              	.L101:
 912 0012 00BF     		.align	2
 913              	.L100:
 914 0014 00100240 		.word	1073876992
 915              		.cfi_endproc
 916              	.LFE79:
 918              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 919              		.align	1
 920              		.global	RCC_APB1PeriphResetCmd
 921              		.thumb
 922              		.thumb_func
 924              	RCC_APB1PeriphResetCmd:
 925              	.LFB80:
1203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 926              		.loc 1 1223 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931              	.LVL88:
 932 0000 044B     		ldr	r3, .L106
1224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 933              		.loc 1 1229 0
 934 0002 1A69     		ldr	r2, [r3, #16]
1227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 935              		.loc 1 1227 0
 936 0004 09B1     		cbz	r1, .L103
 937              		.loc 1 1229 0
 938 0006 1043     		orrs	r0, r0, r2
 939              	.LVL89:
 940 0008 01E0     		b	.L105
 941              	.LVL90:
 942              	.L103:
1230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 943              		.loc 1 1233 0
 944 000a 22EA0000 		bic	r0, r2, r0
 945              	.LVL91:
 946              	.L105:
 947 000e 1861     		str	r0, [r3, #16]
 948 0010 7047     		bx	lr
 949              	.L107:
 950 0012 00BF     		.align	2
 951              	.L106:
 952 0014 00100240 		.word	1073876992
 953              		.cfi_endproc
 954              	.LFE80:
 956              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 957              		.align	1
 958              		.global	RCC_BackupResetCmd
 959              		.thumb
 960              		.thumb_func
 962              	RCC_BackupResetCmd:
 963              	.LFB81:
1234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 964              		.loc 1 1244 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              		@ link register save eliminated.
 969              	.LVL92:
1245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 970              		.loc 1 1247 0
 971 0000 014B     		ldr	r3, .L109
 972 0002 1860     		str	r0, [r3, #0]
 973 0004 7047     		bx	lr
 974              	.L110:
 975 0006 00BF     		.align	2
 976              	.L109:
 977 0008 40044242 		.word	1111622720
 978              		.cfi_endproc
 979              	.LFE81:
 981              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 982              		.align	1
 983              		.global	RCC_ClockSecuritySystemCmd
 984              		.thumb
 985              		.thumb_func
 987              	RCC_ClockSecuritySystemCmd:
 988              	.LFB82:
1248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 989              		.loc 1 1257 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993              		@ link register save eliminated.
 994              	.LVL93:
1258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 995              		.loc 1 1260 0
 996 0000 014B     		ldr	r3, .L112
 997 0002 1860     		str	r0, [r3, #0]
 998 0004 7047     		bx	lr
 999              	.L113:
 1000 0006 00BF     		.align	2
 1001              	.L112:
 1002 0008 4C004242 		.word	1111621708
 1003              		.cfi_endproc
 1004              	.LFE82:
 1006              		.section	.text.RCC_MCOConfig,"ax",%progbits
 1007              		.align	1
 1008              		.global	RCC_MCOConfig
 1009              		.thumb
 1010              		.thumb_func
 1012              	RCC_MCOConfig:
 1013              	.LFB83:
1261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:       
1269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1014              		.loc 1 1289 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 0
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 1018              		@ link register save eliminated.
 1019              	.LVL94:
1290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1020              		.loc 1 1294 0
 1021 0000 014B     		ldr	r3, .L115
 1022 0002 1870     		strb	r0, [r3, #0]
 1023 0004 7047     		bx	lr
 1024              	.L116:
 1025 0006 00BF     		.align	2
 1026              	.L115:
 1027 0008 07100240 		.word	1073876999
 1028              		.cfi_endproc
 1029              	.LFE83:
 1031              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 1032              		.align	1
 1033              		.global	RCC_GetFlagStatus
 1034              		.thumb
 1035              		.thumb_func
 1037              	RCC_GetFlagStatus:
 1038              	.LFB84:
1295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1300:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1301:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1302:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1303:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1304:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1305:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1306:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1307:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1308:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1309:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1310:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1311:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1312:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1313:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1314:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1315:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1317:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1318:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1319:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1320:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1321:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1322:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1323:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1324:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1325:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1326:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1327:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1328:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1329:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1330:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1331:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1332:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1333:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1039              		.loc 1 1333 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044              	.LVL95:
1334:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
1335:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
1336:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
1337:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1338:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1339:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1340:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1341:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1045              		.loc 1 1341 0
 1046 0000 4309     		lsrs	r3, r0, #5
 1047              	.LVL96:
1342:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1048              		.loc 1 1342 0
 1049 0002 012B     		cmp	r3, #1
 1050 0004 074A     		ldr	r2, .L121
 1051 0006 01D1     		bne	.L118
1343:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1344:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 1052              		.loc 1 1344 0
 1053 0008 1368     		ldr	r3, [r2, #0]
 1054              	.LVL97:
 1055 000a 03E0     		b	.L119
 1056              	.LVL98:
 1057              	.L118:
1345:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1346:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1058              		.loc 1 1346 0
 1059 000c 022B     		cmp	r3, #2
1347:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1348:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1060              		.loc 1 1348 0
 1061 000e 0CBF     		ite	eq
 1062 0010 136A     		ldreq	r3, [r2, #32]
 1063              	.LVL99:
1349:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1350:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1351:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1352:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1064              		.loc 1 1352 0
 1065 0012 536A     		ldrne	r3, [r2, #36]
 1066              	.LVL100:
 1067              	.L119:
1353:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1354:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1355:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1356:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
1357:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1068              		.loc 1 1357 0
 1069 0014 00F01F00 		and	r0, r0, #31
 1070              	.LVL101:
 1071 0018 23FA00F1 		lsr	r1, r3, r0
1358:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1359:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
1360:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1361:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1362:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1363:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1364:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1365:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1366:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1367:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return bitstatus;
1368:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1072              		.loc 1 1368 0
 1073 001c 01F00100 		and	r0, r1, #1
 1074 0020 7047     		bx	lr
 1075              	.L122:
 1076 0022 00BF     		.align	2
 1077              	.L121:
 1078 0024 00100240 		.word	1073876992
 1079              		.cfi_endproc
 1080              	.LFE84:
 1082              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 1083              		.align	1
 1084              		.global	RCC_WaitForHSEStartUp
 1085              		.thumb
 1086              		.thumb_func
 1088              	RCC_WaitForHSEStartUp:
 1089              	.LFB58:
 311:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1090              		.loc 1 311 0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 8
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 1094 0000 07B5     		push	{r0, r1, r2, lr}
 1095              	.LCFI1:
 1096              		.cfi_def_cfa_offset 16
 1097              		.cfi_offset 0, -16
 1098              		.cfi_offset 1, -12
 1099              		.cfi_offset 2, -8
 1100              		.cfi_offset 14, -4
 312:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 1101              		.loc 1 312 0
 1102 0002 0023     		movs	r3, #0
 1103 0004 0193     		str	r3, [sp, #4]
 1104              	.LVL102:
 1105              	.L125:
 319:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 1106              		.loc 1 319 0 discriminator 1
 1107 0006 3120     		movs	r0, #49
 1108 0008 FFF7FEFF 		bl	RCC_GetFlagStatus
 1109              	.LVL103:
 320:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 1110              		.loc 1 320 0 discriminator 1
 1111 000c 0199     		ldr	r1, [sp, #4]
 1112 000e 4A1C     		adds	r2, r1, #1
 1113              	.LVL104:
 1114 0010 0192     		str	r2, [sp, #4]
 1115              	.LVL105:
 321:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 1116              		.loc 1 321 0 discriminator 1
 1117 0012 019B     		ldr	r3, [sp, #4]
 1118 0014 B3F5A06F 		cmp	r3, #1280
 1119 0018 01D0     		beq	.L124
 1120 001a 0028     		cmp	r0, #0
 1121 001c F3D0     		beq	.L125
 1122              	.L124:
 323:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 1123              		.loc 1 323 0
 1124 001e 3120     		movs	r0, #49
 1125              	.LVL106:
 1126 0020 FFF7FEFF 		bl	RCC_GetFlagStatus
 1127              	.LVL107:
 332:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1128              		.loc 1 332 0
 1129 0024 0030     		adds	r0, r0, #0
 1130              	.LVL108:
 1131 0026 18BF     		it	ne
 1132 0028 0120     		movne	r0, #1
 1133 002a 0EBD     		pop	{r1, r2, r3, pc}
 1134              		.cfi_endproc
 1135              	.LFE58:
 1137              		.section	.text.RCC_ClearFlag,"ax",%progbits
 1138              		.align	1
 1139              		.global	RCC_ClearFlag
 1140              		.thumb
 1141              		.thumb_func
 1143              	RCC_ClearFlag:
 1144              	.LFB85:
1369:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1370:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1371:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1372:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1373:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1374:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
1375:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1376:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1377:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1378:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1145              		.loc 1 1378 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 0
 1148              		@ frame_needed = 0, uses_anonymous_args = 0
 1149              		@ link register save eliminated.
1379:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1380:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1150              		.loc 1 1380 0
 1151 0000 024B     		ldr	r3, .L134
 1152 0002 5A6A     		ldr	r2, [r3, #36]
 1153 0004 42F08070 		orr	r0, r2, #16777216
 1154 0008 5862     		str	r0, [r3, #36]
 1155 000a 7047     		bx	lr
 1156              	.L135:
 1157              		.align	2
 1158              	.L134:
 1159 000c 00100240 		.word	1073876992
 1160              		.cfi_endproc
 1161              	.LFE85:
 1163              		.section	.text.RCC_GetITStatus,"ax",%progbits
 1164              		.align	1
 1165              		.global	RCC_GetITStatus
 1166              		.thumb
 1167              		.thumb_func
 1169              	RCC_GetITStatus:
 1170              	.LFB86:
1381:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1382:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1383:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1384:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1385:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1386:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1387:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1388:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1389:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1390:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1391:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1392:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1393:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1394:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1395:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1396:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1397:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1398:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1399:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1400:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1401:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1402:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1403:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1404:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1405:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1406:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1407:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1408:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1409:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1171              		.loc 1 1409 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              		@ link register save eliminated.
 1176              	.LVL109:
1410:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
1411:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1412:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1413:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1414:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1415:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 1177              		.loc 1 1415 0
 1178 0000 034B     		ldr	r3, .L137
 1179 0002 9968     		ldr	r1, [r3, #8]
 1180              	.LVL110:
 1181 0004 0842     		tst	r0, r1
1416:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1417:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
1418:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1419:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1420:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1421:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1422:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1423:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1424:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1425:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return  bitstatus;
1426:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1182              		.loc 1 1426 0
 1183 0006 0CBF     		ite	eq
 1184 0008 0020     		moveq	r0, #0
 1185 000a 0120     		movne	r0, #1
 1186              	.LVL111:
 1187 000c 7047     		bx	lr
 1188              	.L138:
 1189 000e 00BF     		.align	2
 1190              	.L137:
 1191 0010 00100240 		.word	1073876992
 1192              		.cfi_endproc
 1193              	.LFE86:
 1195              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 1196              		.align	1
 1197              		.global	RCC_ClearITPendingBit
 1198              		.thumb
 1199              		.thumb_func
 1201              	RCC_ClearITPendingBit:
 1202              	.LFB87:
1427:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1428:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1429:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1430:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1431:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1432:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1433:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:
1434:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1435:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1436:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1437:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1438:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1439:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1440:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1441:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1442:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1443:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1444:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1445:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1446:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1447:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1448:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1449:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1450:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1451:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1452:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1453:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1454:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1455:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1203              		.loc 1 1455 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207              		@ link register save eliminated.
 1208              	.LVL112:
1456:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1457:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1458:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1459:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1460:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****      pending bits */
1461:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1209              		.loc 1 1461 0
 1210 0000 014B     		ldr	r3, .L140
 1211 0002 1870     		strb	r0, [r3, #0]
 1212 0004 7047     		bx	lr
 1213              	.L141:
 1214 0006 00BF     		.align	2
 1215              	.L140:
 1216 0008 0A100240 		.word	1073877002
 1217              		.cfi_endproc
 1218              	.LFE87:
 1220              		.data
 1221              		.set	.LANCHOR0,. + 0
 1224              	APBAHBPrescTable:
 1225 0000 00       		.byte	0
 1226 0001 00       		.byte	0
 1227 0002 00       		.byte	0
 1228 0003 00       		.byte	0
 1229 0004 01       		.byte	1
 1230 0005 02       		.byte	2
 1231 0006 03       		.byte	3
 1232 0007 04       		.byte	4
 1233 0008 01       		.byte	1
 1234 0009 02       		.byte	2
 1235 000a 03       		.byte	3
 1236 000b 04       		.byte	4
 1237 000c 06       		.byte	6
 1238 000d 07       		.byte	7
 1239 000e 08       		.byte	8
 1240 000f 09       		.byte	9
 1243              	ADCPrescTable:
 1244 0010 02       		.byte	2
 1245 0011 04       		.byte	4
 1246 0012 06       		.byte	6
 1247 0013 08       		.byte	8
 1248              		.text
 1249              	.Letext0:
 1250              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 1251              		.file 3 "/Users/zac/code/spark/cc3000-patch-programmer/libraries/CMSIS/Device/ST/STM32F10x/Include
 1252              		.file 4 "/Users/zac/code/spark/cc3000-patch-programmer/libraries/STM32F10x_StdPeriph_Driver/inc/st
 1253              		.file 5 "/Users/zac/code/spark/cc3000-patch-programmer/libraries/CMSIS/Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rcc.c
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:19     .text.RCC_DeInit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:24     .text.RCC_DeInit:0000000000000000 RCC_DeInit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:64     .text.RCC_DeInit:0000000000000038 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:70     .text.RCC_HSEConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:75     .text.RCC_HSEConfig:0000000000000000 RCC_HSEConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:118    .text.RCC_HSEConfig:0000000000000030 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:123    .text.RCC_AdjustHSICalibrationValue:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:128    .text.RCC_AdjustHSICalibrationValue:0000000000000000 RCC_AdjustHSICalibrationValue
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:152    .text.RCC_AdjustHSICalibrationValue:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:157    .text.RCC_HSICmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:162    .text.RCC_HSICmd:0000000000000000 RCC_HSICmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:177    .text.RCC_HSICmd:0000000000000008 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:182    .text.RCC_PLLConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:187    .text.RCC_PLLConfig:0000000000000000 RCC_PLLConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:213    .text.RCC_PLLConfig:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:218    .text.RCC_PLLCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:223    .text.RCC_PLLCmd:0000000000000000 RCC_PLLCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:238    .text.RCC_PLLCmd:0000000000000008 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:243    .text.RCC_SYSCLKConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:248    .text.RCC_SYSCLKConfig:0000000000000000 RCC_SYSCLKConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:272    .text.RCC_SYSCLKConfig:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:277    .text.RCC_GetSYSCLKSource:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:282    .text.RCC_GetSYSCLKSource:0000000000000000 RCC_GetSYSCLKSource
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:298    .text.RCC_GetSYSCLKSource:000000000000000c $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:303    .text.RCC_HCLKConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:308    .text.RCC_HCLKConfig:0000000000000000 RCC_HCLKConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:332    .text.RCC_HCLKConfig:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:337    .text.RCC_PCLK1Config:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:342    .text.RCC_PCLK1Config:0000000000000000 RCC_PCLK1Config
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:366    .text.RCC_PCLK1Config:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:371    .text.RCC_PCLK2Config:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:376    .text.RCC_PCLK2Config:0000000000000000 RCC_PCLK2Config
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:400    .text.RCC_PCLK2Config:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:405    .text.RCC_ITConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:410    .text.RCC_ITConfig:0000000000000000 RCC_ITConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:438    .text.RCC_ITConfig:0000000000000014 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:443    .text.RCC_USBCLKConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:448    .text.RCC_USBCLKConfig:0000000000000000 RCC_USBCLKConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:463    .text.RCC_USBCLKConfig:0000000000000008 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:468    .text.RCC_ADCCLKConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:473    .text.RCC_ADCCLKConfig:0000000000000000 RCC_ADCCLKConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:497    .text.RCC_ADCCLKConfig:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:502    .text.RCC_LSEConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:507    .text.RCC_LSEConfig:0000000000000000 RCC_LSEConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:546    .text.RCC_LSEConfig:000000000000001c $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:551    .text.RCC_LSICmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:556    .text.RCC_LSICmd:0000000000000000 RCC_LSICmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:571    .text.RCC_LSICmd:0000000000000008 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:576    .text.RCC_RTCCLKConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:581    .text.RCC_RTCCLKConfig:0000000000000000 RCC_RTCCLKConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:599    .text.RCC_RTCCLKConfig:000000000000000c $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:604    .text.RCC_RTCCLKCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:609    .text.RCC_RTCCLKCmd:0000000000000000 RCC_RTCCLKCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:624    .text.RCC_RTCCLKCmd:0000000000000008 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:629    .text.RCC_GetClocksFreq:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:634    .text.RCC_GetClocksFreq:0000000000000000 RCC_GetClocksFreq
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:759    .text.RCC_GetClocksFreq:0000000000000078 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:767    .text.RCC_AHBPeriphClockCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:772    .text.RCC_AHBPeriphClockCmd:0000000000000000 RCC_AHBPeriphClockCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:800    .text.RCC_AHBPeriphClockCmd:0000000000000014 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:805    .text.RCC_APB2PeriphClockCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:810    .text.RCC_APB2PeriphClockCmd:0000000000000000 RCC_APB2PeriphClockCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:838    .text.RCC_APB2PeriphClockCmd:0000000000000014 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:843    .text.RCC_APB1PeriphClockCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:848    .text.RCC_APB1PeriphClockCmd:0000000000000000 RCC_APB1PeriphClockCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:876    .text.RCC_APB1PeriphClockCmd:0000000000000014 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:881    .text.RCC_APB2PeriphResetCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:886    .text.RCC_APB2PeriphResetCmd:0000000000000000 RCC_APB2PeriphResetCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:914    .text.RCC_APB2PeriphResetCmd:0000000000000014 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:919    .text.RCC_APB1PeriphResetCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:924    .text.RCC_APB1PeriphResetCmd:0000000000000000 RCC_APB1PeriphResetCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:952    .text.RCC_APB1PeriphResetCmd:0000000000000014 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:957    .text.RCC_BackupResetCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:962    .text.RCC_BackupResetCmd:0000000000000000 RCC_BackupResetCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:977    .text.RCC_BackupResetCmd:0000000000000008 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:982    .text.RCC_ClockSecuritySystemCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:987    .text.RCC_ClockSecuritySystemCmd:0000000000000000 RCC_ClockSecuritySystemCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1002   .text.RCC_ClockSecuritySystemCmd:0000000000000008 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1007   .text.RCC_MCOConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1012   .text.RCC_MCOConfig:0000000000000000 RCC_MCOConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1027   .text.RCC_MCOConfig:0000000000000008 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1032   .text.RCC_GetFlagStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1037   .text.RCC_GetFlagStatus:0000000000000000 RCC_GetFlagStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1078   .text.RCC_GetFlagStatus:0000000000000024 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1083   .text.RCC_WaitForHSEStartUp:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1088   .text.RCC_WaitForHSEStartUp:0000000000000000 RCC_WaitForHSEStartUp
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1138   .text.RCC_ClearFlag:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1143   .text.RCC_ClearFlag:0000000000000000 RCC_ClearFlag
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1159   .text.RCC_ClearFlag:000000000000000c $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1164   .text.RCC_GetITStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1169   .text.RCC_GetITStatus:0000000000000000 RCC_GetITStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1191   .text.RCC_GetITStatus:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1196   .text.RCC_ClearITPendingBit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1201   .text.RCC_ClearITPendingBit:0000000000000000 RCC_ClearITPendingBit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1216   .text.RCC_ClearITPendingBit:0000000000000008 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1224   .data:0000000000000000 APBAHBPrescTable
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc7bakZ.s:1243   .data:0000000000000010 ADCPrescTable
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.94ea818a60f77b04fe5add16507b1dca
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.64.07c104f22a887098a9ccb01471e84bcc
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.73.39d0bf38e72896b342f8df9bde23ca46

NO UNDEFINED SYMBOLS
