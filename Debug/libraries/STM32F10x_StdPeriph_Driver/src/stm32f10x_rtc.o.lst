   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rtc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RTC_ITConfig,"ax",%progbits
  19              		.align	1
  20              		.global	RTC_ITConfig
  21              		.thumb
  22              		.thumb_func
  24              	RTC_ITConfig:
  25              	.LFB56:
  26              		.file 1 "../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c"
   1:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
   2:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ******************************************************************************
   3:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @file    stm32f10x_rtc.c
   4:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @author  MCD Application Team
   5:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @version V3.6.1
   6:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @date    05-March-2012
   7:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief   This file provides all the RTC firmware functions.
   8:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ******************************************************************************
   9:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @attention
  10:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  11:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  13:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * You may not use this file except in compliance with the License.
  15:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * You may obtain a copy of the License at:
  16:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  17:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  19:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * See the License for the specific language governing permissions and
  23:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * limitations under the License.
  24:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  25:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ******************************************************************************
  26:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  27:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  28:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /* Includes ------------------------------------------------------------------*/
  29:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** #include "stm32f10x_rtc.h"
  30:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  31:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  32:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  33:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  34:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  35:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC 
  36:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief RTC driver modules
  37:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  38:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  39:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  40:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_TypesDefinitions
  41:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  42:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */ 
  43:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  44:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  45:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  46:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  47:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Defines
  48:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  49:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  50:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** #define RTC_LSB_MASK     ((uint32_t)0x0000FFFF)  /*!< RTC LSB Mask */
  51:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** #define PRLH_MSB_MASK    ((uint32_t)0x000F0000)  /*!< RTC Prescaler MSB Mask */
  52:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  53:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  54:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  55:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  56:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  57:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Macros
  58:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  59:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  60:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  61:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  62:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  63:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  64:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  65:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Variables
  66:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  67:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  68:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  69:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  70:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  71:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  72:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  73:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_FunctionPrototypes
  74:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  75:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  76:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  77:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  78:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  79:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  80:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  81:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Functions
  82:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  83:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  84:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  85:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  86:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
  87:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to be enabled or disabled.
  88:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
  89:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
  90:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
  91:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
  92:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
  93:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be: ENABLE or DISABLE.
  94:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
  95:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  96:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ITConfig(uint16_t RTC_IT, FunctionalState NewState)
  97:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
  27              		.loc 1 97 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 044B     		ldr	r3, .L6
  98:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
  99:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
 100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if (NewState != DISABLE)
 103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     RTC->CRH |= RTC_IT;
  34              		.loc 1 104 0
  35 0002 1A88     		ldrh	r2, [r3, #0]
  36 0004 92B2     		uxth	r2, r2
 102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if (NewState != DISABLE)
  37              		.loc 1 102 0
  38 0006 09B1     		cbz	r1, .L2
  39              		.loc 1 104 0
  40 0008 1043     		orrs	r0, r0, r2
  41              	.LVL1:
  42 000a 01E0     		b	.L4
  43              	.LVL2:
  44              	.L2:
 105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     RTC->CRH &= (uint16_t)~RTC_IT;
  45              		.loc 1 108 0
  46 000c 22EA0000 		bic	r0, r2, r0
  47              	.LVL3:
  48              	.L4:
  49 0010 1880     		strh	r0, [r3, #0]	@ movhi
  50 0012 7047     		bx	lr
  51              	.L7:
  52              		.align	2
  53              	.L6:
  54 0014 00280040 		.word	1073752064
  55              		.cfi_endproc
  56              	.LFE56:
  58              		.section	.text.RTC_EnterConfigMode,"ax",%progbits
  59              		.align	1
  60              		.global	RTC_EnterConfigMode
  61              		.thumb
  62              		.thumb_func
  64              	RTC_EnterConfigMode:
  65              	.LFB57:
 109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Enters the RTC configuration mode.
 114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_EnterConfigMode(void)
 118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
  66              		.loc 1 118 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
 119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set the CNF flag to enter in the Configuration Mode */
 120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL |= RTC_CRL_CNF;
  71              		.loc 1 120 0
  72 0000 034B     		ldr	r3, .L9
  73 0002 9A88     		ldrh	r2, [r3, #4]
  74 0004 90B2     		uxth	r0, r2
  75 0006 40F01001 		orr	r1, r0, #16
  76 000a 9980     		strh	r1, [r3, #4]	@ movhi
  77 000c 7047     		bx	lr
  78              	.L10:
  79 000e 00BF     		.align	2
  80              	.L9:
  81 0010 00280040 		.word	1073752064
  82              		.cfi_endproc
  83              	.LFE57:
  85              		.section	.text.RTC_ExitConfigMode,"ax",%progbits
  86              		.align	1
  87              		.global	RTC_ExitConfigMode
  88              		.thumb
  89              		.thumb_func
  91              	RTC_ExitConfigMode:
  92              	.LFB58:
 121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Exits from the RTC configuration mode.
 125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ExitConfigMode(void)
 129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
  93              		.loc 1 129 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Reset the CNF flag to exit from the Configuration Mode */
 131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~((uint16_t)RTC_CRL_CNF); 
  98              		.loc 1 131 0
  99 0000 034A     		ldr	r2, .L12
 100 0002 9388     		ldrh	r3, [r2, #4]
 101 0004 23F01000 		bic	r0, r3, #16
 102 0008 0104     		lsls	r1, r0, #16
 103 000a 0B0C     		lsrs	r3, r1, #16
 104 000c 9380     		strh	r3, [r2, #4]	@ movhi
 105 000e 7047     		bx	lr
 106              	.L13:
 107              		.align	2
 108              	.L12:
 109 0010 00280040 		.word	1073752064
 110              		.cfi_endproc
 111              	.LFE58:
 113              		.section	.text.RTC_GetCounter,"ax",%progbits
 114              		.align	1
 115              		.global	RTC_GetCounter
 116              		.thumb
 117              		.thumb_func
 119              	RTC_GetCounter:
 120              	.LFB59:
 132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC counter value.
 136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval RTC counter value.
 138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** uint32_t RTC_GetCounter(void)
 140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 121              		.loc 1 140 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.LVL4:
 141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   uint16_t high1 = 0, high2 = 0, low = 0;
 142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   high1 = RTC->CNTH;
 127              		.loc 1 143 0
 128 0000 084B     		ldr	r3, .L17
 129 0002 1A8B     		ldrh	r2, [r3, #24]
 144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   low   = RTC->CNTL;
 130              		.loc 1 144 0
 131 0004 988B     		ldrh	r0, [r3, #28]
 145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   high2 = RTC->CNTH;
 132              		.loc 1 145 0
 133 0006 198B     		ldrh	r1, [r3, #24]
 143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   high1 = RTC->CNTH;
 134              		.loc 1 143 0
 135 0008 92B2     		uxth	r2, r2
 136              	.LVL5:
 137              		.loc 1 145 0
 138 000a 89B2     		uxth	r1, r1
 146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if (high1 != high2)
 139              		.loc 1 147 0
 140 000c 8A42     		cmp	r2, r1
 144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   low   = RTC->CNTL;
 141              		.loc 1 144 0
 142 000e 80B2     		uxth	r0, r0
 143              	.LVL6:
 144              		.loc 1 147 0
 145 0010 04D0     		beq	.L15
 148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   { /* In this case the counter roll over during reading of CNTL and CNTH registers, 
 149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****        read again CNTL register then return the counter value */
 150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     return (((uint32_t) high2 << 16 ) | RTC->CNTL);
 146              		.loc 1 150 0
 147 0012 9B8B     		ldrh	r3, [r3, #28]
 148 0014 9AB2     		uxth	r2, r3
 149              	.LVL7:
 150 0016 42EA0140 		orr	r0, r2, r1, lsl #16
 151              	.LVL8:
 152 001a 7047     		bx	lr
 153              	.LVL9:
 154              	.L15:
 151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   { /* No counter roll over during reading of CNTL and CNTH registers, counter 
 154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****        value is equal to first value of CNTL and CNTH */
 155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     return (((uint32_t) high1 << 16 ) | low);
 155              		.loc 1 155 0
 156 001c 40EA0240 		orr	r0, r0, r2, lsl #16
 157              	.LVL10:
 156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 158              		.loc 1 157 0
 159 0020 7047     		bx	lr
 160              	.L18:
 161 0022 00BF     		.align	2
 162              	.L17:
 163 0024 00280040 		.word	1073752064
 164              		.cfi_endproc
 165              	.LFE59:
 167              		.section	.text.RTC_SetCounter,"ax",%progbits
 168              		.align	1
 169              		.global	RTC_SetCounter
 170              		.thumb
 171              		.thumb_func
 173              	RTC_SetCounter:
 174              	.LFB60:
 158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC counter value.
 161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  CounterValue: RTC counter new value.
 162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_SetCounter(uint32_t CounterValue)
 165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** { 
 175              		.loc 1 165 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              	.LVL11:
 180 0000 10B5     		push	{r4, lr}
 181              	.LCFI0:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 185              		.loc 1 165 0
 186 0002 0446     		mov	r4, r0
 166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 187              		.loc 1 166 0
 188 0004 FFF7FEFF 		bl	RTC_EnterConfigMode
 189              	.LVL12:
 167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER MSB word */
 168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CNTH = CounterValue >> 16;
 190              		.loc 1 168 0
 191 0008 044B     		ldr	r3, .L20
 192 000a 220C     		lsrs	r2, r4, #16
 169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER LSB word */
 170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CNTL = (CounterValue & RTC_LSB_MASK);
 193              		.loc 1 170 0
 194 000c A4B2     		uxth	r4, r4
 195              	.LVL13:
 168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CNTH = CounterValue >> 16;
 196              		.loc 1 168 0
 197 000e 1A83     		strh	r2, [r3, #24]	@ movhi
 198              		.loc 1 170 0
 199 0010 9C83     		strh	r4, [r3, #28]	@ movhi
 171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 200              		.loc 1 172 0
 201 0012 BDE81040 		pop	{r4, lr}
 171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 202              		.loc 1 171 0
 203 0016 FFF7FEBF 		b	RTC_ExitConfigMode
 204              	.LVL14:
 205              	.L21:
 206 001a 00BF     		.align	2
 207              	.L20:
 208 001c 00280040 		.word	1073752064
 209              		.cfi_endproc
 210              	.LFE60:
 212              		.section	.text.RTC_SetPrescaler,"ax",%progbits
 213              		.align	1
 214              		.global	RTC_SetPrescaler
 215              		.thumb
 216              		.thumb_func
 218              	RTC_SetPrescaler:
 219              	.LFB61:
 173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC prescaler value.
 176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  PrescalerValue: RTC prescaler new value.
 177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_SetPrescaler(uint32_t PrescalerValue)
 180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 220              		.loc 1 180 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              	.LVL15:
 225 0000 10B5     		push	{r4, lr}
 226              	.LCFI1:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 4, -8
 229              		.cfi_offset 14, -4
 230              		.loc 1 180 0
 231 0002 0446     		mov	r4, r0
 181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_PRESCALER(PrescalerValue));
 183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 232              		.loc 1 184 0
 233 0004 FFF7FEFF 		bl	RTC_EnterConfigMode
 234              	.LVL16:
 185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER MSB word */
 186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->PRLH = (PrescalerValue & PRLH_MSB_MASK) >> 16;
 235              		.loc 1 186 0
 236 0008 044B     		ldr	r3, .L23
 237 000a C4F30342 		ubfx	r2, r4, #16, #4
 187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER LSB word */
 188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->PRLL = (PrescalerValue & RTC_LSB_MASK);
 238              		.loc 1 188 0
 239 000e A4B2     		uxth	r4, r4
 240              	.LVL17:
 186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->PRLH = (PrescalerValue & PRLH_MSB_MASK) >> 16;
 241              		.loc 1 186 0
 242 0010 1A81     		strh	r2, [r3, #8]	@ movhi
 243              		.loc 1 188 0
 244 0012 9C81     		strh	r4, [r3, #12]	@ movhi
 189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 245              		.loc 1 190 0
 246 0014 BDE81040 		pop	{r4, lr}
 189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 247              		.loc 1 189 0
 248 0018 FFF7FEBF 		b	RTC_ExitConfigMode
 249              	.LVL18:
 250              	.L24:
 251              		.align	2
 252              	.L23:
 253 001c 00280040 		.word	1073752064
 254              		.cfi_endproc
 255              	.LFE61:
 257              		.section	.text.RTC_SetAlarm,"ax",%progbits
 258              		.align	1
 259              		.global	RTC_SetAlarm
 260              		.thumb
 261              		.thumb_func
 263              	RTC_SetAlarm:
 264              	.LFB62:
 191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC alarm value.
 194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  AlarmValue: RTC alarm new value.
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_SetAlarm(uint32_t AlarmValue)
 198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {  
 265              		.loc 1 198 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              	.LVL19:
 270 0000 10B5     		push	{r4, lr}
 271              	.LCFI2:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275              		.loc 1 198 0
 276 0002 0446     		mov	r4, r0
 199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 277              		.loc 1 199 0
 278 0004 FFF7FEFF 		bl	RTC_EnterConfigMode
 279              	.LVL20:
 200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set the ALARM MSB word */
 201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->ALRH = AlarmValue >> 16;
 280              		.loc 1 201 0
 281 0008 044B     		ldr	r3, .L26
 282 000a 220C     		lsrs	r2, r4, #16
 202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set the ALARM LSB word */
 203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->ALRL = (AlarmValue & RTC_LSB_MASK);
 283              		.loc 1 203 0
 284 000c A4B2     		uxth	r4, r4
 285              	.LVL21:
 201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->ALRH = AlarmValue >> 16;
 286              		.loc 1 201 0
 287 000e 1A84     		strh	r2, [r3, #32]	@ movhi
 288              		.loc 1 203 0
 289 0010 9C84     		strh	r4, [r3, #36]	@ movhi
 204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 290              		.loc 1 205 0
 291 0012 BDE81040 		pop	{r4, lr}
 204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 292              		.loc 1 204 0
 293 0016 FFF7FEBF 		b	RTC_ExitConfigMode
 294              	.LVL22:
 295              	.L27:
 296 001a 00BF     		.align	2
 297              	.L26:
 298 001c 00280040 		.word	1073752064
 299              		.cfi_endproc
 300              	.LFE62:
 302              		.section	.text.RTC_GetDivider,"ax",%progbits
 303              		.align	1
 304              		.global	RTC_GetDivider
 305              		.thumb
 306              		.thumb_func
 308              	RTC_GetDivider:
 309              	.LFB63:
 206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC divider value.
 209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval RTC Divider value.
 211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** uint32_t RTC_GetDivider(void)
 213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 310              		.loc 1 213 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL23:
 214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   uint32_t tmp = 0x00;
 215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   tmp = ((uint32_t)RTC->DIVH & (uint32_t)0x000F) << 16;
 316              		.loc 1 215 0
 317 0000 044B     		ldr	r3, .L29
 318 0002 188A     		ldrh	r0, [r3, #16]
 216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   tmp |= RTC->DIVL;
 319              		.loc 1 216 0
 320 0004 9A8A     		ldrh	r2, [r3, #20]
 215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   tmp = ((uint32_t)RTC->DIVH & (uint32_t)0x000F) << 16;
 321              		.loc 1 215 0
 322 0006 00F00F01 		and	r1, r0, #15
 323              	.LVL24:
 324              		.loc 1 216 0
 325 000a 93B2     		uxth	r3, r2
 326              	.LVL25:
 217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   return tmp;
 218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 327              		.loc 1 218 0
 328 000c 43EA0140 		orr	r0, r3, r1, lsl #16
 329 0010 7047     		bx	lr
 330              	.L30:
 331 0012 00BF     		.align	2
 332              	.L29:
 333 0014 00280040 		.word	1073752064
 334              		.cfi_endproc
 335              	.LFE63:
 337              		.section	.text.RTC_WaitForLastTask,"ax",%progbits
 338              		.align	1
 339              		.global	RTC_WaitForLastTask
 340              		.thumb
 341              		.thumb_func
 343              	RTC_WaitForLastTask:
 344              	.LFB64:
 219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Waits until last write operation on RTC registers has finished.
 222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @note   This function must be called before any write to RTC registers.
 223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_WaitForLastTask(void)
 227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 345              		.loc 1 227 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350              	.L32:
 228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Loop until RTOFF flag is set */
 229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RTOFF) == (uint16_t)RESET)
 351              		.loc 1 229 0 discriminator 1
 352 0000 034B     		ldr	r3, .L37
 353 0002 9888     		ldrh	r0, [r3, #4]
 354 0004 00F02001 		and	r1, r0, #32
 355 0008 8AB2     		uxth	r2, r1
 356 000a 002A     		cmp	r2, #0
 357 000c F8D0     		beq	.L32
 230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 358              		.loc 1 232 0
 359 000e 7047     		bx	lr
 360              	.L38:
 361              		.align	2
 362              	.L37:
 363 0010 00280040 		.word	1073752064
 364              		.cfi_endproc
 365              	.LFE64:
 367              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 368              		.align	1
 369              		.global	RTC_WaitForSynchro
 370              		.thumb
 371              		.thumb_func
 373              	RTC_WaitForSynchro:
 374              	.LFB65:
 233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL)
 236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   are synchronized with RTC APB clock.
 237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @note   This function must be called before any read operation after an APB reset
 238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   or an APB clock stop.
 239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_WaitForSynchro(void)
 243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 375              		.loc 1 243 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Clear RSF flag */
 245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG_RSF;
 380              		.loc 1 245 0
 381 0000 074A     		ldr	r2, .L45
 382 0002 9388     		ldrh	r3, [r2, #4]
 383 0004 23F00800 		bic	r0, r3, #8
 384 0008 0104     		lsls	r1, r0, #16
 385 000a 0B0C     		lsrs	r3, r1, #16
 386 000c 9380     		strh	r3, [r2, #4]	@ movhi
 387              	.L40:
 246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Loop until RSF flag is set */
 247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RSF) == (uint16_t)RESET)
 388              		.loc 1 247 0 discriminator 1
 389 000e 044A     		ldr	r2, .L45
 390 0010 9088     		ldrh	r0, [r2, #4]
 391 0012 00F00801 		and	r1, r0, #8
 392 0016 8BB2     		uxth	r3, r1
 393 0018 002B     		cmp	r3, #0
 394 001a F8D0     		beq	.L40
 248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 395              		.loc 1 250 0
 396 001c 7047     		bx	lr
 397              	.L46:
 398 001e 00BF     		.align	2
 399              	.L45:
 400 0020 00280040 		.word	1073752064
 401              		.cfi_endproc
 402              	.LFE65:
 404              		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 405              		.align	1
 406              		.global	RTC_GetFlagStatus
 407              		.thumb
 408              		.thumb_func
 410              	RTC_GetFlagStatus:
 411              	.LFB66:
 251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
 254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
 255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be one the following values:
 256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RTOFF: RTC Operation OFF flag
 257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag
 258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
 262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** FlagStatus RTC_GetFlagStatus(uint16_t RTC_FLAG)
 264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 412              		.loc 1 264 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417              	.LVL26:
 265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   FlagStatus bitstatus = RESET;
 266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG)); 
 269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if ((RTC->CRL & RTC_FLAG) != (uint16_t)RESET)
 418              		.loc 1 270 0
 419 0000 034B     		ldr	r3, .L48
 420 0002 9988     		ldrh	r1, [r3, #4]
 421              	.LVL27:
 422 0004 0842     		tst	r0, r1
 271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = SET;
 273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   return bitstatus;
 279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 423              		.loc 1 279 0
 424 0006 0CBF     		ite	eq
 425 0008 0020     		moveq	r0, #0
 426 000a 0120     		movne	r0, #1
 427              	.LVL28:
 428 000c 7047     		bx	lr
 429              	.L49:
 430 000e 00BF     		.align	2
 431              	.L48:
 432 0010 00280040 		.word	1073752064
 433              		.cfi_endproc
 434              	.LFE66:
 436              		.section	.text.RTC_ClearFlag,"ax",%progbits
 437              		.align	1
 438              		.global	RTC_ClearFlag
 439              		.thumb
 440              		.thumb_func
 442              	RTC_ClearFlag:
 443              	.LFB67:
 280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's pending flags.
 283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to clear.
 284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag. This flag is cleared only after
 286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *                        an APB reset or an APB Clock stop.
 287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ClearFlag(uint16_t RTC_FLAG)
 293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 444              		.loc 1 293 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449              	.LVL29:
 294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG)); 
 296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     
 297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC flag */
 298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG;
 450              		.loc 1 298 0
 451 0000 034B     		ldr	r3, .L51
 452 0002 9A88     		ldrh	r2, [r3, #4]
 453 0004 91B2     		uxth	r1, r2
 454 0006 21EA0000 		bic	r0, r1, r0
 455              	.LVL30:
 456 000a 9880     		strh	r0, [r3, #4]	@ movhi
 457 000c 7047     		bx	lr
 458              	.L52:
 459 000e 00BF     		.align	2
 460              	.L51:
 461 0010 00280040 		.word	1073752064
 462              		.cfi_endproc
 463              	.LFE67:
 465              		.section	.text.RTC_GetITStatus,"ax",%progbits
 466              		.align	1
 467              		.global	RTC_GetITStatus
 468              		.thumb
 469              		.thumb_func
 471              	RTC_GetITStatus:
 472              	.LFB68:
 299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 300:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 301:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 302:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
 303:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to check.
 304:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be one of the following values:
 305:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 306:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 307:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 308:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval The new state of the RTC_IT (SET or RESET).
 309:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 310:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** ITStatus RTC_GetITStatus(uint16_t RTC_IT)
 311:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 473              		.loc 1 311 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478              	.LVL31:
 312:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ITStatus bitstatus = RESET;
 313:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 314:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT)); 
 315:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   bitstatus = (ITStatus)(RTC->CRL & RTC_IT);
 479              		.loc 1 316 0
 480 0000 074B     		ldr	r3, .L56
 481 0002 9A88     		ldrh	r2, [r3, #4]
 317:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if (((RTC->CRH & RTC_IT) != (uint16_t)RESET) && (bitstatus != (uint16_t)RESET))
 482              		.loc 1 317 0
 483 0004 1B88     		ldrh	r3, [r3, #0]
 316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   bitstatus = (ITStatus)(RTC->CRL & RTC_IT);
 484              		.loc 1 316 0
 485 0006 91B2     		uxth	r1, r2
 486              	.LVL32:
 487              		.loc 1 317 0
 488 0008 10EA0302 		ands	r2, r0, r3
 489 000c 06D0     		beq	.L55
 316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   bitstatus = (ITStatus)(RTC->CRL & RTC_IT);
 490              		.loc 1 316 0 discriminator 1
 491 000e 0840     		ands	r0, r0, r1
 492              	.LVL33:
 493              		.loc 1 317 0 discriminator 1
 494 0010 10F0FF0F 		tst	r0, #255
 495 0014 0CBF     		ite	eq
 496 0016 0020     		moveq	r0, #0
 497 0018 0120     		movne	r0, #1
 498 001a 7047     		bx	lr
 499              	.LVL34:
 500              	.L55:
 318:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 319:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = SET;
 320:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 321:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 322:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 323:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 501              		.loc 1 323 0
 502 001c 1046     		mov	r0, r2
 503              	.LVL35:
 324:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 325:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   return bitstatus;
 326:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 504              		.loc 1 326 0
 505 001e 7047     		bx	lr
 506              	.L57:
 507              		.align	2
 508              	.L56:
 509 0020 00280040 		.word	1073752064
 510              		.cfi_endproc
 511              	.LFE68:
 513              		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 514              		.align	1
 515              		.global	RTC_ClearITPendingBit
 516              		.thumb
 517              		.thumb_func
 519              	RTC_ClearITPendingBit:
 520              	.LFB69:
 327:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 328:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 329:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
 330:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the interrupt pending bit to clear.
 331:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 332:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 333:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 334:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 335:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 336:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 337:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ClearITPendingBit(uint16_t RTC_IT)
 338:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 521              		.loc 1 338 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526              	.LVL36:
 339:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 340:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
 341:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 342:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC pending bit */
 343:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_IT;
 527              		.loc 1 343 0
 528 0000 034B     		ldr	r3, .L59
 529 0002 9A88     		ldrh	r2, [r3, #4]
 530 0004 91B2     		uxth	r1, r2
 531 0006 21EA0000 		bic	r0, r1, r0
 532              	.LVL37:
 533 000a 9880     		strh	r0, [r3, #4]	@ movhi
 534 000c 7047     		bx	lr
 535              	.L60:
 536 000e 00BF     		.align	2
 537              	.L59:
 538 0010 00280040 		.word	1073752064
 539              		.cfi_endproc
 540              	.LFE69:
 542              		.text
 543              	.Letext0:
 544              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 545              		.file 3 "/Users/zac/code/spark/cc3000-patch-programmer/libraries/CMSIS/Device/ST/STM32F10x/Include
 546              		.file 4 "/Users/zac/code/spark/cc3000-patch-programmer/libraries/CMSIS/Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rtc.c
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:19     .text.RTC_ITConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:24     .text.RTC_ITConfig:0000000000000000 RTC_ITConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:54     .text.RTC_ITConfig:0000000000000014 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:59     .text.RTC_EnterConfigMode:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:64     .text.RTC_EnterConfigMode:0000000000000000 RTC_EnterConfigMode
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:81     .text.RTC_EnterConfigMode:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:86     .text.RTC_ExitConfigMode:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:91     .text.RTC_ExitConfigMode:0000000000000000 RTC_ExitConfigMode
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:109    .text.RTC_ExitConfigMode:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:114    .text.RTC_GetCounter:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:119    .text.RTC_GetCounter:0000000000000000 RTC_GetCounter
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:163    .text.RTC_GetCounter:0000000000000024 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:168    .text.RTC_SetCounter:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:173    .text.RTC_SetCounter:0000000000000000 RTC_SetCounter
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:208    .text.RTC_SetCounter:000000000000001c $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:213    .text.RTC_SetPrescaler:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:218    .text.RTC_SetPrescaler:0000000000000000 RTC_SetPrescaler
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:253    .text.RTC_SetPrescaler:000000000000001c $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:258    .text.RTC_SetAlarm:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:263    .text.RTC_SetAlarm:0000000000000000 RTC_SetAlarm
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:298    .text.RTC_SetAlarm:000000000000001c $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:303    .text.RTC_GetDivider:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:308    .text.RTC_GetDivider:0000000000000000 RTC_GetDivider
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:333    .text.RTC_GetDivider:0000000000000014 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:338    .text.RTC_WaitForLastTask:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:343    .text.RTC_WaitForLastTask:0000000000000000 RTC_WaitForLastTask
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:363    .text.RTC_WaitForLastTask:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:368    .text.RTC_WaitForSynchro:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:373    .text.RTC_WaitForSynchro:0000000000000000 RTC_WaitForSynchro
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:400    .text.RTC_WaitForSynchro:0000000000000020 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:405    .text.RTC_GetFlagStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:410    .text.RTC_GetFlagStatus:0000000000000000 RTC_GetFlagStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:432    .text.RTC_GetFlagStatus:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:437    .text.RTC_ClearFlag:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:442    .text.RTC_ClearFlag:0000000000000000 RTC_ClearFlag
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:461    .text.RTC_ClearFlag:0000000000000010 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:466    .text.RTC_GetITStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:471    .text.RTC_GetITStatus:0000000000000000 RTC_GetITStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:509    .text.RTC_GetITStatus:0000000000000020 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:514    .text.RTC_ClearITPendingBit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:519    .text.RTC_ClearITPendingBit:0000000000000000 RTC_ClearITPendingBit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccWJJ84q.s:538    .text.RTC_ClearITPendingBit:0000000000000010 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.94ea818a60f77b04fe5add16507b1dca
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.64.07c104f22a887098a9ccb01471e84bcc
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.31.2ee3219a25ef4ced658f2fe9d8cd94aa
                           .group:0000000000000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.64.fb43f578fb8e8a986bfbace5bbe63174

NO UNDEFINED SYMBOLS
