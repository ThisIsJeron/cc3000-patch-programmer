   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	ADC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	ADC_DeInit:
  25              	.LFB56:
  26              		.file 1 "../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c"
   1:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
   2:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   3:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @file    stm32f10x_adc.c
   4:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @author  MCD Application Team
   5:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @version V3.6.1
   6:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @date    05-March-2012
   7:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief   This file provides all the ADC firmware functions.
   8:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   9:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @attention
  10:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  11:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  13:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * You may not use this file except in compliance with the License.
  15:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * You may obtain a copy of the License at:
  16:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  17:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  19:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * See the License for the specific language governing permissions and
  23:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * limitations under the License.
  24:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  25:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
  26:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  27:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  28:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* Includes ------------------------------------------------------------------*/
  29:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_adc.h"
  30:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_rcc.h"
  31:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  32:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  33:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  34:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  35:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  36:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC 
  37:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief ADC driver modules
  38:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  39:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  40:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  41:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_TypesDefinitions
  42:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  43:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  44:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  45:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
  46:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
  47:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  48:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  49:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Defines
  50:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  51:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  52:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  53:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCNUM mask */
  54:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCNUM_Reset           ((uint32_t)0xFFFF1FFF)
  55:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  56:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCEN mask */
  57:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Set              ((uint32_t)0x00000800)
  58:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Reset            ((uint32_t)0xFFFFF7FF)
  59:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  60:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JAUTO mask */
  61:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Set               ((uint32_t)0x00000400)
  62:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Reset             ((uint32_t)0xFFFFFBFF)
  63:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  64:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDISCEN mask */
  65:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Set             ((uint32_t)0x00001000)
  66:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Reset           ((uint32_t)0xFFFFEFFF)
  67:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  68:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC AWDCH mask */
  69:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDCH_Reset             ((uint32_t)0xFFFFFFE0)
  70:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  71:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Analog watchdog enable mode mask */
  72:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDMode_Reset           ((uint32_t)0xFF3FFDFF)
  73:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  74:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR1 register Mask */
  75:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_CLEAR_Mask              ((uint32_t)0xFFF0FEFF)
  76:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  77:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC ADON mask */
  78:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Set                ((uint32_t)0x00000001)
  79:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Reset              ((uint32_t)0xFFFFFFFE)
  80:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  81:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DMA mask */
  82:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Set                 ((uint32_t)0x00000100)
  83:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Reset               ((uint32_t)0xFFFFFEFF)
  84:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  85:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC RSTCAL mask */
  86:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_RSTCAL_Set              ((uint32_t)0x00000008)
  87:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  88:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC CAL mask */
  89:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CAL_Set                 ((uint32_t)0x00000004)
  90:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  91:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SWSTART mask */
  92:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_SWSTART_Set             ((uint32_t)0x00400000)
  93:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  94:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC EXTTRIG mask */
  95:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Set             ((uint32_t)0x00100000)
  96:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Reset           ((uint32_t)0xFFEFFFFF)
  97:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  98:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Software start mask */
  99:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Set     ((uint32_t)0x00500000)
 100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Reset   ((uint32_t)0xFFAFFFFF)
 101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTSEL mask */
 103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTSEL_Reset           ((uint32_t)0xFFFF8FFF)
 104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTTRIG mask */
 106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Set            ((uint32_t)0x00008000)
 107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Reset          ((uint32_t)0xFFFF7FFF)
 108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSWSTART mask */
 110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JSWSTART_Set            ((uint32_t)0x00200000)
 111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC injected software start mask */
 113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Set   ((uint32_t)0x00208000)
 114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Reset ((uint32_t)0xFFDF7FFF)
 115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC TSPD mask */
 117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Set             ((uint32_t)0x00800000)
 118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Reset           ((uint32_t)0xFF7FFFFF)
 119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR2 register Mask */
 121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CLEAR_Mask              ((uint32_t)0xFFF1F7FD)
 122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SQx mask */
 124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR3_SQ_Set                 ((uint32_t)0x0000001F)
 125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR2_SQ_Set                 ((uint32_t)0x0000001F)
 126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_SQ_Set                 ((uint32_t)0x0000001F)
 127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* SQR1 register Mask */
 129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_CLEAR_Mask             ((uint32_t)0xFF0FFFFF)
 130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSQx mask */
 132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JSQ_Set                ((uint32_t)0x0000001F)
 133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JL mask */
 135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Set                 ((uint32_t)0x00300000)
 136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Reset               ((uint32_t)0xFFCFFFFF)
 137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SMPx mask */
 139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR1_SMP_Set               ((uint32_t)0x00000007)
 140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR2_SMP_Set               ((uint32_t)0x00000007)
 141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDRx registers offset */
 143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JDR_Offset                  ((uint8_t)0x28)
 144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC1 DR register base address */
 146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define DR_ADDRESS                  ((uint32_t)0x4001244C)
 147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Macros
 153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Variables
 161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_FunctionPrototypes
 169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Functions
 177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values.
 182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DeInit(ADC_TypeDef* ADCx)
 186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
  27              		.loc 1 186 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
 190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADCx == ADC1)
  37              		.loc 1 190 0
  38 0002 134B     		ldr	r3, .L7
  39 0004 9842     		cmp	r0, r3
  40 0006 07D1     		bne	.L2
 191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC1 reset state */
 193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
  41              		.loc 1 193 0
  42 0008 4FF40070 		mov	r0, #512
  43              	.LVL1:
  44 000c 0121     		movs	r1, #1
  45 000e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  46              	.LVL2:
 194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC1 from reset state */
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
  47              		.loc 1 195 0
  48 0012 4FF40070 		mov	r0, #512
  49 0016 14E0     		b	.L5
  50              	.LVL3:
  51              	.L2:
 196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (ADCx == ADC2)
  52              		.loc 1 197 0
  53 0018 0E49     		ldr	r1, .L7+4
  54 001a 8842     		cmp	r0, r1
  55 001c 07D1     		bne	.L3
 198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC2 reset state */
 200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
  56              		.loc 1 200 0
  57 001e 4FF48060 		mov	r0, #1024
  58              	.LVL4:
  59 0022 0121     		movs	r1, #1
  60 0024 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  61              	.LVL5:
 201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC2 from reset state */
 202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
  62              		.loc 1 202 0
  63 0028 4FF48060 		mov	r0, #1024
  64 002c 09E0     		b	.L5
  65              	.LVL6:
  66              	.L3:
 203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     if (ADCx == ADC3)
  67              		.loc 1 206 0
  68 002e 0A4A     		ldr	r2, .L7+8
  69 0030 9042     		cmp	r0, r2
  70 0032 0BD1     		bne	.L1
 207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     {
 208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Enable ADC3 reset state */
 209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, ENABLE);
  71              		.loc 1 209 0
  72 0034 4FF40040 		mov	r0, #32768
  73              	.LVL7:
  74 0038 0121     		movs	r1, #1
  75 003a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  76              	.LVL8:
 210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Release ADC3 from reset state */
 211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, DISABLE);
  77              		.loc 1 211 0
  78 003e 4FF40040 		mov	r0, #32768
  79              	.L5:
  80 0042 0021     		movs	r1, #0
 212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     }
 213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
  81              		.loc 1 214 0
  82 0044 BDE80840 		pop	{r3, lr}
 211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, DISABLE);
  83              		.loc 1 211 0
  84 0048 FFF7FEBF 		b	RCC_APB2PeriphResetCmd
  85              	.LVL9:
  86              	.L1:
  87 004c 08BD     		pop	{r3, pc}
  88              	.L8:
  89 004e 00BF     		.align	2
  90              	.L7:
  91 0050 00240140 		.word	1073816576
  92 0054 00280140 		.word	1073817600
  93 0058 003C0140 		.word	1073822720
  94              		.cfi_endproc
  95              	.LFE56:
  97              		.section	.text.ADC_Init,"ax",%progbits
  98              		.align	1
  99              		.global	ADC_Init
 100              		.thumb
 101              		.thumb_func
 103              	ADC_Init:
 104              	.LFB57:
 215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters
 218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         in the ADC_InitStruct.
 219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         the configuration information for the specified ADC peripheral.
 222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 105              		.loc 1 225 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              	.LVL10:
 226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t tmpreg2 = 0;
 228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_MODE(ADC_InitStruct->ADC_Mode));
 231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode));
 233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));   
 234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfChannel));
 236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR1 value */
 239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 110              		.loc 1 239 0
 111 0000 4268     		ldr	r2, [r0, #4]
 112              	.LVL11:
 225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 113              		.loc 1 225 0
 114 0002 10B5     		push	{r4, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear DUALMOD and SCAN bits */
 241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_CLEAR_Mask;
 119              		.loc 1 241 0
 120 0004 22F47023 		bic	r3, r2, #983040
 242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: Dual mode and scan conversion mode */
 243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set DUALMOD bits according to ADC_Mode value */
 244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8
 121              		.loc 1 245 0
 122 0008 0A68     		ldr	r2, [r1, #0]
 123              	.LVL12:
 241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_CLEAR_Mask;
 124              		.loc 1 241 0
 125 000a 23F48074 		bic	r4, r3, #256
 126              		.loc 1 245 0
 127 000e 44EA0203 		orr	r3, r4, r2
 128 0012 0C79     		ldrb	r4, [r1, #4]	@ zero_extendqisi2
 129 0014 43EA0422 		orr	r2, r3, r4, lsl #8
 130              	.LVL13:
 246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR1 */
 247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 131              		.loc 1 247 0
 132 0018 4260     		str	r2, [r0, #4]
 248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR2 value */
 251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR2;
 252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear CONT, ALIGN and EXTSEL bits */
 253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR2_CLEAR_Mask;
 254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: external trigger event and continuous conversion mode */
 255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 133              		.loc 1 258 0
 134 001a CB68     		ldr	r3, [r1, #12]
 135 001c 8A68     		ldr	r2, [r1, #8]
 136              	.LVL14:
 251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR2;
 137              		.loc 1 251 0
 138 001e 8468     		ldr	r4, [r0, #8]
 139              	.LVL15:
 140              		.loc 1 258 0
 141 0020 1A43     		orrs	r2, r2, r3
 253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR2_CLEAR_Mask;
 142              		.loc 1 253 0
 143 0022 084B     		ldr	r3, .L10
 144 0024 2340     		ands	r3, r3, r4
 145              	.LVL16:
 146              		.loc 1 258 0
 147 0026 1343     		orrs	r3, r3, r2
 148              	.LVL17:
 259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 149              		.loc 1 259 0
 150 0028 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 151              		.loc 1 258 0
 152 002a 43EA4203 		orr	r3, r3, r2, lsl #1
 153              	.LVL18:
 260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR2 */
 261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg1;
 154              		.loc 1 261 0
 155 002e 8360     		str	r3, [r0, #8]
 262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx SQR1 value */
 265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->SQR1;
 266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear L bits */
 267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= SQR1_CLEAR_Mask;
 268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: regular channel sequence length */
 269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set L bits according to ADC_NbrOfChannel value */
 270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 |= (uint8_t) (ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
 156              		.loc 1 270 0
 157 0030 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
 158              	.LVL19:
 265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->SQR1;
 159              		.loc 1 265 0
 160 0032 C26A     		ldr	r2, [r0, #44]
 161              	.LVL20:
 162              		.loc 1 270 0
 163 0034 4B1E     		subs	r3, r1, #1
 267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= SQR1_CLEAR_Mask;
 164              		.loc 1 267 0
 165 0036 22F47002 		bic	r2, r2, #15728640
 166              	.LVL21:
 271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)tmpreg2 << 20;
 167              		.loc 1 271 0
 168 003a D9B2     		uxtb	r1, r3
 169 003c 42EA0152 		orr	r2, r2, r1, lsl #20
 170              	.LVL22:
 272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx SQR1 */
 273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SQR1 = tmpreg1;
 171              		.loc 1 273 0
 172 0040 C262     		str	r2, [r0, #44]
 173 0042 10BD     		pop	{r4, pc}
 174              	.L11:
 175              		.align	2
 176              	.L10:
 177 0044 FDF7F1FF 		.word	-919555
 178              		.cfi_endproc
 179              	.LFE57:
 181              		.section	.text.ADC_StructInit,"ax",%progbits
 182              		.align	1
 183              		.global	ADC_StructInit
 184              		.thumb
 185              		.thumb_func
 187              	ADC_StructInit:
 188              	.LFB58:
 274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct : pointer to an ADC_InitTypeDef structure which will be initialized.
 279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 189              		.loc 1 282 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LVL23:
 283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Reset ADC init structure parameters values */
 284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_Mode member */
 285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_Mode = ADC_Mode_Independent;
 195              		.loc 1 285 0
 196 0000 0023     		movs	r3, #0
 286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* initialize the ADC_ScanConvMode member */
 287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_DataAlign member */
 293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_NbrOfChannel member */
 295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_NbrOfChannel = 1;
 197              		.loc 1 295 0
 198 0002 0121     		movs	r1, #1
 285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_Mode = ADC_Mode_Independent;
 199              		.loc 1 285 0
 200 0004 0360     		str	r3, [r0, #0]
 287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 201              		.loc 1 287 0
 202 0006 0371     		strb	r3, [r0, #4]
 289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 203              		.loc 1 289 0
 204 0008 4371     		strb	r3, [r0, #5]
 291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 205              		.loc 1 291 0
 206 000a 8360     		str	r3, [r0, #8]
 293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 207              		.loc 1 293 0
 208 000c C360     		str	r3, [r0, #12]
 209              		.loc 1 295 0
 210 000e 0174     		strb	r1, [r0, #16]
 211 0010 7047     		bx	lr
 212              		.cfi_endproc
 213              	.LFE58:
 215              		.section	.text.ADC_Cmd,"ax",%progbits
 216              		.align	1
 217              		.global	ADC_Cmd
 218              		.thumb
 219              		.thumb_func
 221              	ADC_Cmd:
 222              	.LFB59:
 296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 300:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 301:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the ADCx peripheral.
 302:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 303:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 304:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 305:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 306:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 223              		.loc 1 306 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL24:
 307:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 308:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 309:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 310:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 311:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 312:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 313:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_ADON_Set;
 229              		.loc 1 313 0
 230 0000 8368     		ldr	r3, [r0, #8]
 310:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 231              		.loc 1 310 0
 232 0002 11B1     		cbz	r1, .L14
 233              		.loc 1 313 0
 234 0004 43F00101 		orr	r1, r3, #1
 235              	.LVL25:
 236 0008 01E0     		b	.L16
 237              	.LVL26:
 238              	.L14:
 314:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 315:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 317:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC peripheral */
 318:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_ADON_Reset;
 239              		.loc 1 318 0
 240 000a 23F00101 		bic	r1, r3, #1
 241              	.LVL27:
 242              	.L16:
 243 000e 8160     		str	r1, [r0, #8]
 244 0010 7047     		bx	lr
 245              		.cfi_endproc
 246              	.LFE59:
 248              		.section	.text.ADC_DMACmd,"ax",%progbits
 249              		.align	1
 250              		.global	ADC_DMACmd
 251              		.thumb
 252              		.thumb_func
 254              	ADC_DMACmd:
 255              	.LFB60:
 319:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 320:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 321:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 322:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 323:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
 324:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1 or 3 to select the ADC peripheral.
 325:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   Note: ADC2 hasn't a DMA capability.
 326:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
 327:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 328:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 329:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 330:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 331:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 256              		.loc 1 331 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL28:
 332:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 333:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DMA_PERIPH(ADCx));
 334:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 335:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 336:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 337:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC DMA request */
 338:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_DMA_Set;
 262              		.loc 1 338 0
 263 0000 8368     		ldr	r3, [r0, #8]
 335:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 264              		.loc 1 335 0
 265 0002 11B1     		cbz	r1, .L18
 266              		.loc 1 338 0
 267 0004 43F48071 		orr	r1, r3, #256
 268              	.LVL29:
 269 0008 01E0     		b	.L20
 270              	.LVL30:
 271              	.L18:
 339:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 340:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 341:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 342:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC DMA request */
 343:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_DMA_Reset;
 272              		.loc 1 343 0
 273 000a 23F48071 		bic	r1, r3, #256
 274              	.LVL31:
 275              	.L20:
 276 000e 8160     		str	r1, [r0, #8]
 277 0010 7047     		bx	lr
 278              		.cfi_endproc
 279              	.LFE60:
 281              		.section	.text.ADC_ITConfig,"ax",%progbits
 282              		.align	1
 283              		.global	ADC_ITConfig
 284              		.thumb
 285              		.thumb_func
 287              	ADC_ITConfig:
 288              	.LFB61:
 344:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 345:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 346:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 347:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 348:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
 349:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 350:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
 351:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
 352:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
 353:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
 354:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
 355:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
 356:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 357:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 358:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 359:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
 360:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 289              		.loc 1 360 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 294              	.LVL32:
 361:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 362:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 363:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 364:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 365:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 366:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
 367:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)ADC_IT;
 295              		.loc 1 367 0
 296 0000 C9B2     		uxtb	r1, r1
 297              	.LVL33:
 368:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 369:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 370:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC interrupts */
 371:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= itmask;
 298              		.loc 1 371 0
 299 0002 4368     		ldr	r3, [r0, #4]
 368:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 300              		.loc 1 368 0
 301 0004 0AB1     		cbz	r2, .L22
 302              		.loc 1 371 0
 303 0006 1943     		orrs	r1, r1, r3
 304              	.LVL34:
 305 0008 01E0     		b	.L24
 306              	.L22:
 372:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 373:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 374:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 375:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC interrupts */
 376:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 307              		.loc 1 376 0
 308 000a 23EA0101 		bic	r1, r3, r1
 309              	.L24:
 310 000e 4160     		str	r1, [r0, #4]
 311 0010 7047     		bx	lr
 312              		.cfi_endproc
 313              	.LFE61:
 315              		.section	.text.ADC_ResetCalibration,"ax",%progbits
 316              		.align	1
 317              		.global	ADC_ResetCalibration
 318              		.thumb
 319              		.thumb_func
 321              	ADC_ResetCalibration:
 322              	.LFB62:
 377:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 378:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 379:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 380:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 381:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Resets the selected ADC calibration registers.
 382:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 383:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 384:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 385:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ResetCalibration(ADC_TypeDef* ADCx)
 386:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 323              		.loc 1 386 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL35:
 387:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 388:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 389:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Resets the selected ADC calibration registers */  
 390:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_RSTCAL_Set;
 329              		.loc 1 390 0
 330 0000 8368     		ldr	r3, [r0, #8]
 331 0002 43F00801 		orr	r1, r3, #8
 332 0006 8160     		str	r1, [r0, #8]
 333 0008 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE62:
 337              		.section	.text.ADC_GetResetCalibrationStatus,"ax",%progbits
 338              		.align	1
 339              		.global	ADC_GetResetCalibrationStatus
 340              		.thumb
 341              		.thumb_func
 343              	ADC_GetResetCalibrationStatus:
 344              	.LFB63:
 391:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 392:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 393:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 394:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC reset calibration registers status.
 395:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 396:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC reset calibration registers (SET or RESET).
 397:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 398:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx)
 399:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 345              		.loc 1 399 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350              	.LVL36:
 400:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 401:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 402:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 403:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of RSTCAL bit */
 404:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_RSTCAL_Set) != (uint32_t)RESET)
 351              		.loc 1 404 0
 352 0000 8068     		ldr	r0, [r0, #8]
 353              	.LVL37:
 405:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 406:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is set */
 407:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 408:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 409:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 410:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 411:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is reset */
 412:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 413:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 414:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the RSTCAL bit status */
 415:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 416:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 354              		.loc 1 416 0
 355 0002 C0F3C000 		ubfx	r0, r0, #3, #1
 356              	.LVL38:
 357 0006 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE63:
 361              		.section	.text.ADC_StartCalibration,"ax",%progbits
 362              		.align	1
 363              		.global	ADC_StartCalibration
 364              		.thumb
 365              		.thumb_func
 367              	ADC_StartCalibration:
 368              	.LFB64:
 417:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 418:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 419:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Starts the selected ADC calibration process.
 420:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 421:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 422:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 423:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StartCalibration(ADC_TypeDef* ADCx)
 424:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 369              		.loc 1 424 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL39:
 425:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 426:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 427:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Enable the selected ADC calibration process */  
 428:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_CAL_Set;
 375              		.loc 1 428 0
 376 0000 8368     		ldr	r3, [r0, #8]
 377 0002 43F00401 		orr	r1, r3, #4
 378 0006 8160     		str	r1, [r0, #8]
 379 0008 7047     		bx	lr
 380              		.cfi_endproc
 381              	.LFE64:
 383              		.section	.text.ADC_GetCalibrationStatus,"ax",%progbits
 384              		.align	1
 385              		.global	ADC_GetCalibrationStatus
 386              		.thumb
 387              		.thumb_func
 389              	ADC_GetCalibrationStatus:
 390              	.LFB65:
 429:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 430:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 431:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 432:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC calibration status.
 433:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 434:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC calibration (SET or RESET).
 435:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 436:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx)
 437:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 391              		.loc 1 437 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396              	.LVL40:
 438:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 439:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 440:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 441:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of CAL bit */
 442:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_CAL_Set) != (uint32_t)RESET)
 397              		.loc 1 442 0
 398 0000 8068     		ldr	r0, [r0, #8]
 399              	.LVL41:
 443:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 444:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is set: calibration on going */
 445:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 446:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 447:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 448:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 449:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is reset: end of calibration */
 450:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 451:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 452:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the CAL bit status */
 453:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 454:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 400              		.loc 1 454 0
 401 0002 C0F38000 		ubfx	r0, r0, #2, #1
 402              	.LVL42:
 403 0006 7047     		bx	lr
 404              		.cfi_endproc
 405              	.LFE65:
 407              		.section	.text.ADC_SoftwareStartConvCmd,"ax",%progbits
 408              		.align	1
 409              		.global	ADC_SoftwareStartConvCmd
 410              		.thumb
 411              		.thumb_func
 413              	ADC_SoftwareStartConvCmd:
 414              	.LFB66:
 455:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 456:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 457:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC software start conversion .
 458:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 459:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start conversion.
 460:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 461:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 462:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 463:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 464:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 415              		.loc 1 464 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 420              	.LVL43:
 465:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 466:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 467:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 468:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 469:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 470:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event and start the selected
 471:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 472:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_SWSTART_Set;
 421              		.loc 1 472 0
 422 0000 8368     		ldr	r3, [r0, #8]
 468:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 423              		.loc 1 468 0
 424 0002 11B1     		cbz	r1, .L30
 425              		.loc 1 472 0
 426 0004 43F4A001 		orr	r1, r3, #5242880
 427              	.LVL44:
 428 0008 01E0     		b	.L32
 429              	.LVL45:
 430              	.L30:
 473:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 474:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 475:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 476:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event and stop the selected
 477:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 478:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_SWSTART_Reset;
 431              		.loc 1 478 0
 432 000a 23F4A001 		bic	r1, r3, #5242880
 433              	.LVL46:
 434              	.L32:
 435 000e 8160     		str	r1, [r0, #8]
 436 0010 7047     		bx	lr
 437              		.cfi_endproc
 438              	.LFE66:
 440              		.section	.text.ADC_GetSoftwareStartConvStatus,"ax",%progbits
 441              		.align	1
 442              		.global	ADC_GetSoftwareStartConvStatus
 443              		.thumb
 444              		.thumb_func
 446              	ADC_GetSoftwareStartConvStatus:
 447              	.LFB67:
 479:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 480:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 481:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 482:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 483:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start conversion Status.
 484:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 485:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 486:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 487:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 488:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 448              		.loc 1 488 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453              	.LVL47:
 489:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 490:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 491:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 492:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of SWSTART bit */
 493:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_SWSTART_Set) != (uint32_t)RESET)
 454              		.loc 1 493 0
 455 0000 8068     		ldr	r0, [r0, #8]
 456              	.LVL48:
 494:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 495:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is set */
 496:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 497:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 498:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 499:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 500:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is reset */
 501:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 502:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 503:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the SWSTART bit status */
 504:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 505:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 457              		.loc 1 505 0
 458 0002 C0F38050 		ubfx	r0, r0, #22, #1
 459              	.LVL49:
 460 0006 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE67:
 464              		.section	.text.ADC_DiscModeChannelCountConfig,"ax",%progbits
 465              		.align	1
 466              		.global	ADC_DiscModeChannelCountConfig
 467              		.thumb
 468              		.thumb_func
 470              	ADC_DiscModeChannelCountConfig:
 471              	.LFB68:
 506:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 507:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 508:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular
 509:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         group channel.
 510:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 511:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel
 512:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         count value. This number must be between 1 and 8.
 513:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 514:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 515:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 516:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 472              		.loc 1 516 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477              	.LVL50:
 517:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 518:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 519:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 520:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 521:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 522:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 523:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 478              		.loc 1 523 0
 479 0000 4368     		ldr	r3, [r0, #4]
 480              	.LVL51:
 524:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old discontinuous mode channel count */
 525:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_DISCNUM_Reset;
 526:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the discontinuous mode channel count */
 527:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Number - 1;
 481              		.loc 1 527 0
 482 0002 0139     		subs	r1, r1, #1
 483              	.LVL52:
 525:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_DISCNUM_Reset;
 484              		.loc 1 525 0
 485 0004 23F46042 		bic	r2, r3, #57344
 486              	.LVL53:
 528:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 487              		.loc 1 528 0
 488 0008 42EA4133 		orr	r3, r2, r1, lsl #13
 489              	.LVL54:
 529:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 530:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 490              		.loc 1 530 0
 491 000c 4360     		str	r3, [r0, #4]
 492 000e 7047     		bx	lr
 493              		.cfi_endproc
 494              	.LFE68:
 496              		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 497              		.align	1
 498              		.global	ADC_DiscModeCmd
 499              		.thumb
 500              		.thumb_func
 502              	ADC_DiscModeCmd:
 503              	.LFB69:
 531:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 532:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 533:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 534:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group
 535:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 536:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 537:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 538:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on regular group channel.
 539:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 540:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 541:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 542:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 543:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 504              		.loc 1 543 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL55:
 544:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 545:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 546:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 547:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 548:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 549:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 550:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_DISCEN_Set;
 510              		.loc 1 550 0
 511 0000 4368     		ldr	r3, [r0, #4]
 547:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 512              		.loc 1 547 0
 513 0002 11B1     		cbz	r1, .L36
 514              		.loc 1 550 0
 515 0004 43F40061 		orr	r1, r3, #2048
 516              	.LVL56:
 517 0008 01E0     		b	.L38
 518              	.LVL57:
 519              	.L36:
 551:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 552:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 553:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 554:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 555:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_DISCEN_Reset;
 520              		.loc 1 555 0
 521 000a 23F40061 		bic	r1, r3, #2048
 522              	.LVL58:
 523              	.L38:
 524 000e 4160     		str	r1, [r0, #4]
 525 0010 7047     		bx	lr
 526              		.cfi_endproc
 527              	.LFE69:
 529              		.section	.text.ADC_RegularChannelConfig,"ax",%progbits
 530              		.align	1
 531              		.global	ADC_RegularChannelConfig
 532              		.thumb
 533              		.thumb_func
 535              	ADC_RegularChannelConfig:
 536              	.LFB70:
 556:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 557:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 558:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 559:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 560:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 561:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 562:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 563:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 564:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 565:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 566:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 567:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 568:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 569:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 570:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 571:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 572:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 573:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 574:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 575:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 576:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 577:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 578:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 579:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 580:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 581:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 582:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 583:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the regular group sequencer. This parameter must be between 1 to 16.
 584:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 585:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 586:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 587:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 588:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 589:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 590:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 591:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 592:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 593:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 594:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 595:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 596:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 597:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 537              		.loc 1 597 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              	.LVL59:
 598:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 599:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 600:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 601:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 602:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 603:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 604:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 605:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 542              		.loc 1 605 0
 543 0000 0929     		cmp	r1, #9
 597:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 544              		.loc 1 597 0
 545 0002 70B5     		push	{r4, r5, r6, lr}
 546              	.LCFI2:
 547              		.cfi_def_cfa_offset 16
 548              		.cfi_offset 4, -16
 549              		.cfi_offset 5, -12
 550              		.cfi_offset 6, -8
 551              		.cfi_offset 14, -4
 552 0004 4FF00304 		mov	r4, #3
 553              		.loc 1 605 0
 554 0008 0CD9     		bls	.L40
 606:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 607:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 608:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 609:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 610:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3 * (ADC_Channel - 10));
 555              		.loc 1 610 0
 556 000a 4C43     		muls	r4, r1, r4
 557 000c 0725     		movs	r5, #7
 558 000e 1E3C     		subs	r4, r4, #30
 559 0010 05FA04F5 		lsl	r5, r5, r4
 611:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 612:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 613:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 614:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 560              		.loc 1 614 0
 561 0014 03FA04F3 		lsl	r3, r3, r4
 562              	.LVL60:
 608:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 563              		.loc 1 608 0
 564 0018 C668     		ldr	r6, [r0, #12]
 565              	.LVL61:
 612:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 566              		.loc 1 612 0
 567 001a 26EA0505 		bic	r5, r6, r5
 568              	.LVL62:
 615:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 616:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 569              		.loc 1 616 0
 570 001e 2B43     		orrs	r3, r3, r5
 571              	.LVL63:
 617:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 618:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 572              		.loc 1 618 0
 573 0020 C360     		str	r3, [r0, #12]
 574 0022 0BE0     		b	.L41
 575              	.LVL64:
 576              	.L40:
 619:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 620:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 621:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 622:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 623:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 624:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 625:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 577              		.loc 1 625 0
 578 0024 4C43     		muls	r4, r1, r4
 579 0026 0725     		movs	r5, #7
 580 0028 05FA04F5 		lsl	r5, r5, r4
 626:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 627:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 628:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 629:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 581              		.loc 1 629 0
 582 002c 03FA04F3 		lsl	r3, r3, r4
 583              	.LVL65:
 623:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 584              		.loc 1 623 0
 585 0030 0669     		ldr	r6, [r0, #16]
 586              	.LVL66:
 627:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 587              		.loc 1 627 0
 588 0032 26EA0505 		bic	r5, r6, r5
 589              	.LVL67:
 630:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 631:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 590              		.loc 1 631 0
 591 0036 45EA0304 		orr	r4, r5, r3
 592              	.LVL68:
 632:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 633:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 593              		.loc 1 633 0
 594 003a 0461     		str	r4, [r0, #16]
 595              	.LVL69:
 596              	.L41:
 634:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 635:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 1 to 6 */
 636:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (Rank < 7)
 597              		.loc 1 636 0
 598 003c 062A     		cmp	r2, #6
 599 003e 4FF00503 		mov	r3, #5
 600 0042 0DD8     		bhi	.L42
 637:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 638:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 639:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR3;
 640:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 641:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR3_SQ_Set << (5 * (Rank - 1));
 601              		.loc 1 641 0
 602 0044 013A     		subs	r2, r2, #1
 603              	.LVL70:
 604 0046 5343     		muls	r3, r2, r3
 605 0048 1F22     		movs	r2, #31
 606 004a 02FA03F2 		lsl	r2, r2, r3
 642:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 643:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 644:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 645:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 607              		.loc 1 645 0
 608 004e 01FA03F1 		lsl	r1, r1, r3
 609              	.LVL71:
 639:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR3;
 610              		.loc 1 639 0
 611 0052 446B     		ldr	r4, [r0, #52]
 612              	.LVL72:
 643:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 613              		.loc 1 643 0
 614 0054 24EA0202 		bic	r2, r4, r2
 615              	.LVL73:
 646:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 647:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 616              		.loc 1 647 0
 617 0058 42EA0103 		orr	r3, r2, r1
 618              	.LVL74:
 648:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 649:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR3 = tmpreg1;
 619              		.loc 1 649 0
 620 005c 4363     		str	r3, [r0, #52]
 621 005e 70BD     		pop	{r4, r5, r6, pc}
 622              	.LVL75:
 623              	.L42:
 650:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 651:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 7 to 12 */
 652:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (Rank < 13)
 624              		.loc 1 652 0
 625 0060 0C2A     		cmp	r2, #12
 626 0062 0DD8     		bhi	.L44
 653:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 654:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 655:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR2;
 656:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 657:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR2_SQ_Set << (5 * (Rank - 7));
 627              		.loc 1 657 0
 628 0064 5343     		muls	r3, r2, r3
 629 0066 1F22     		movs	r2, #31
 630              	.LVL76:
 631 0068 233B     		subs	r3, r3, #35
 632 006a 02FA03F2 		lsl	r2, r2, r3
 658:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 659:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 660:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 661:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 633              		.loc 1 661 0
 634 006e 01FA03F1 		lsl	r1, r1, r3
 635              	.LVL77:
 655:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR2;
 636              		.loc 1 655 0
 637 0072 046B     		ldr	r4, [r0, #48]
 638              	.LVL78:
 659:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 639              		.loc 1 659 0
 640 0074 24EA0202 		bic	r2, r4, r2
 641              	.LVL79:
 662:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 663:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 642              		.loc 1 663 0
 643 0078 42EA0103 		orr	r3, r2, r1
 644              	.LVL80:
 664:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 665:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR2 = tmpreg1;
 645              		.loc 1 665 0
 646 007c 0363     		str	r3, [r0, #48]
 647 007e 70BD     		pop	{r4, r5, r6, pc}
 648              	.LVL81:
 649              	.L44:
 666:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 667:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 13 to 16 */
 668:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 669:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 670:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 671:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR1;
 672:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 673:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR1_SQ_Set << (5 * (Rank - 13));
 650              		.loc 1 673 0
 651 0080 5343     		muls	r3, r2, r3
 652 0082 1F22     		movs	r2, #31
 653              	.LVL82:
 654 0084 413B     		subs	r3, r3, #65
 655 0086 02FA03F2 		lsl	r2, r2, r3
 674:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 675:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 676:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 677:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 656              		.loc 1 677 0
 657 008a 01FA03F1 		lsl	r1, r1, r3
 658              	.LVL83:
 671:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR1;
 659              		.loc 1 671 0
 660 008e C46A     		ldr	r4, [r0, #44]
 661              	.LVL84:
 675:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 662              		.loc 1 675 0
 663 0090 24EA0202 		bic	r2, r4, r2
 664              	.LVL85:
 678:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 679:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 665              		.loc 1 679 0
 666 0094 1143     		orrs	r1, r1, r2
 667              	.LVL86:
 680:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 681:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR1 = tmpreg1;
 668              		.loc 1 681 0
 669 0096 C162     		str	r1, [r0, #44]
 670 0098 70BD     		pop	{r4, r5, r6, pc}
 671              		.cfi_endproc
 672              	.LFE70:
 674              		.section	.text.ADC_ExternalTrigConvCmd,"ax",%progbits
 675              		.align	1
 676              		.global	ADC_ExternalTrigConvCmd
 677              		.thumb
 678              		.thumb_func
 680              	ADC_ExternalTrigConvCmd:
 681              	.LFB71:
 682:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 683:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 684:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 685:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 686:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx conversion through external trigger.
 687:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 688:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of conversion.
 689:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 690:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 691:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 692:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 693:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 682              		.loc 1 693 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687              	.LVL87:
 694:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 695:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 696:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 697:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 698:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 699:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event */
 700:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_Set;
 688              		.loc 1 700 0
 689 0000 8368     		ldr	r3, [r0, #8]
 697:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 690              		.loc 1 697 0
 691 0002 11B1     		cbz	r1, .L46
 692              		.loc 1 700 0
 693 0004 43F48011 		orr	r1, r3, #1048576
 694              	.LVL88:
 695 0008 01E0     		b	.L48
 696              	.LVL89:
 697              	.L46:
 701:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 702:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 703:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 704:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event */
 705:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_Reset;
 698              		.loc 1 705 0
 699 000a 23F48011 		bic	r1, r3, #1048576
 700              	.LVL90:
 701              	.L48:
 702 000e 8160     		str	r1, [r0, #8]
 703 0010 7047     		bx	lr
 704              		.cfi_endproc
 705              	.LFE71:
 707              		.section	.text.ADC_GetConversionValue,"ax",%progbits
 708              		.align	1
 709              		.global	ADC_GetConversionValue
 710              		.thumb
 711              		.thumb_func
 713              	ADC_GetConversionValue:
 714              	.LFB72:
 706:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 707:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 708:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 709:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 710:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 711:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 712:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 713:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 714:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 715:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 715              		.loc 1 715 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL91:
 716:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 717:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 718:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the selected ADC conversion value */
 719:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) ADCx->DR;
 721              		.loc 1 719 0
 722 0000 C06C     		ldr	r0, [r0, #76]
 723              	.LVL92:
 720:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 724              		.loc 1 720 0
 725 0002 80B2     		uxth	r0, r0
 726 0004 7047     		bx	lr
 727              		.cfi_endproc
 728              	.LFE72:
 730              		.section	.text.ADC_GetDualModeConversionValue,"ax",%progbits
 731              		.align	1
 732              		.global	ADC_GetDualModeConversionValue
 733              		.thumb
 734              		.thumb_func
 736              	ADC_GetDualModeConversionValue:
 737              	.LFB73:
 721:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 722:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 723:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADC1 and ADC2 conversion result data in dual mode.
 724:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 725:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 726:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint32_t ADC_GetDualModeConversionValue(void)
 727:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 738              		.loc 1 727 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 728:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the dual mode conversion value */
 729:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (*(__IO uint32_t *) DR_ADDRESS);
 743              		.loc 1 729 0
 744 0000 014B     		ldr	r3, .L51
 745 0002 1868     		ldr	r0, [r3, #0]
 730:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 746              		.loc 1 730 0
 747 0004 7047     		bx	lr
 748              	.L52:
 749 0006 00BF     		.align	2
 750              	.L51:
 751 0008 4C240140 		.word	1073816652
 752              		.cfi_endproc
 753              	.LFE73:
 755              		.section	.text.ADC_AutoInjectedConvCmd,"ax",%progbits
 756              		.align	1
 757              		.global	ADC_AutoInjectedConvCmd
 758              		.thumb
 759              		.thumb_func
 761              	ADC_AutoInjectedConvCmd:
 762              	.LFB74:
 731:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 732:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 733:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group
 734:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         conversion after regular one.
 735:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 736:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
 737:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 738:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 739:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 740:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 741:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 763              		.loc 1 741 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768              	.LVL93:
 742:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 743:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 744:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 745:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 746:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 747:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
 748:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JAUTO_Set;
 769              		.loc 1 748 0
 770 0000 4368     		ldr	r3, [r0, #4]
 745:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 771              		.loc 1 745 0
 772 0002 11B1     		cbz	r1, .L54
 773              		.loc 1 748 0
 774 0004 43F48061 		orr	r1, r3, #1024
 775              	.LVL94:
 776 0008 01E0     		b	.L56
 777              	.LVL95:
 778              	.L54:
 749:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 750:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 751:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 752:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
 753:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JAUTO_Reset;
 779              		.loc 1 753 0
 780 000a 23F48061 		bic	r1, r3, #1024
 781              	.LVL96:
 782              	.L56:
 783 000e 4160     		str	r1, [r0, #4]
 784 0010 7047     		bx	lr
 785              		.cfi_endproc
 786              	.LFE74:
 788              		.section	.text.ADC_InjectedDiscModeCmd,"ax",%progbits
 789              		.align	1
 790              		.global	ADC_InjectedDiscModeCmd
 791              		.thumb
 792              		.thumb_func
 794              	ADC_InjectedDiscModeCmd:
 795              	.LFB75:
 754:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 755:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 756:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 757:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 758:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group
 759:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 760:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 761:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 762:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on injected group channel.
 763:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 764:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 765:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 766:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 767:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 796              		.loc 1 767 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801              	.LVL97:
 768:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 769:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 770:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 771:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 772:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 773:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
 774:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JDISCEN_Set;
 802              		.loc 1 774 0
 803 0000 4368     		ldr	r3, [r0, #4]
 771:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 804              		.loc 1 771 0
 805 0002 11B1     		cbz	r1, .L58
 806              		.loc 1 774 0
 807 0004 43F48051 		orr	r1, r3, #4096
 808              	.LVL98:
 809 0008 01E0     		b	.L60
 810              	.LVL99:
 811              	.L58:
 775:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 776:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 777:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 778:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
 779:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JDISCEN_Reset;
 812              		.loc 1 779 0
 813 000a 23F48051 		bic	r1, r3, #4096
 814              	.LVL100:
 815              	.L60:
 816 000e 4160     		str	r1, [r0, #4]
 817 0010 7047     		bx	lr
 818              		.cfi_endproc
 819              	.LFE75:
 821              		.section	.text.ADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 822              		.align	1
 823              		.global	ADC_ExternalTrigInjectedConvConfig
 824              		.thumb
 825              		.thumb_func
 827              	ADC_ExternalTrigInjectedConvConfig:
 828              	.LFB76:
 780:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 781:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 782:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 783:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 784:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
 785:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 786:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion. 
 787:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 788:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected (for ADC1, ADC2 and ADC3
 789:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected (for ADC1, ADC2 and
 790:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected (for ADC1 and ADC2)
 791:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected (for ADC1 and ADC2)
 792:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected (for ADC1 and ADC2)
 793:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected (for ADC1 and ADC2)
 794:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4: External interrupt line 15 or Timer8
 795:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                                       capture compare4 event selected (for ADC1
 796:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected (for ADC3 only)
 797:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected (for ADC3 only)    
 798:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected (for ADC3 only)
 799:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected (for ADC3 only)         
 800:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected (for ADC3 only)    
 801:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_None: Injected conversion started by software and not
 802:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                          by external trigger (for ADC1, ADC2 and ADC3)
 803:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 804:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 805:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
 806:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 829              		.loc 1 806 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834              	.LVL101:
 807:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 808:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 809:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 810:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 811:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 812:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR2;
 835              		.loc 1 812 0
 836 0000 8368     		ldr	r3, [r0, #8]
 837              	.LVL102:
 813:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old external event selection for injected group */
 814:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR2_JEXTSEL_Reset;
 838              		.loc 1 814 0
 839 0002 23F4E042 		bic	r2, r3, #28672
 840              	.LVL103:
 815:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the external event selection for injected group */
 816:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 841              		.loc 1 816 0
 842 0006 1143     		orrs	r1, r1, r2
 843              	.LVL104:
 817:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 818:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg;
 844              		.loc 1 818 0
 845 0008 8160     		str	r1, [r0, #8]
 846 000a 7047     		bx	lr
 847              		.cfi_endproc
 848              	.LFE76:
 850              		.section	.text.ADC_ExternalTrigInjectedConvCmd,"ax",%progbits
 851              		.align	1
 852              		.global	ADC_ExternalTrigInjectedConvCmd
 853              		.thumb
 854              		.thumb_func
 856              	ADC_ExternalTrigInjectedConvCmd:
 857              	.LFB77:
 819:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 820:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 821:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 822:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx injected channels conversion through
 823:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         external trigger
 824:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 825:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of
 826:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         injected conversion.
 827:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 828:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 829:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 830:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 831:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 858              		.loc 1 831 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              		@ link register save eliminated.
 863              	.LVL105:
 832:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 833:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 834:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 835:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 836:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 837:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC external event selection for injected group */
 838:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_Set;
 864              		.loc 1 838 0
 865 0000 8368     		ldr	r3, [r0, #8]
 835:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 866              		.loc 1 835 0
 867 0002 11B1     		cbz	r1, .L63
 868              		.loc 1 838 0
 869 0004 43F40041 		orr	r1, r3, #32768
 870              	.LVL106:
 871 0008 01E0     		b	.L65
 872              	.LVL107:
 873              	.L63:
 839:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 840:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 841:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 842:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC external event selection for injected group */
 843:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_Reset;
 874              		.loc 1 843 0
 875 000a 23F40041 		bic	r1, r3, #32768
 876              	.LVL108:
 877              	.L65:
 878 000e 8160     		str	r1, [r0, #8]
 879 0010 7047     		bx	lr
 880              		.cfi_endproc
 881              	.LFE77:
 883              		.section	.text.ADC_SoftwareStartInjectedConvCmd,"ax",%progbits
 884              		.align	1
 885              		.global	ADC_SoftwareStartInjectedConvCmd
 886              		.thumb
 887              		.thumb_func
 889              	ADC_SoftwareStartInjectedConvCmd:
 890              	.LFB78:
 844:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 845:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 846:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 847:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 848:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC start of the injected 
 849:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channels conversion.
 850:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 851:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start injected conversion.
 852:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 853:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 854:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 855:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 856:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 891              		.loc 1 856 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              		@ link register save eliminated.
 896              	.LVL109:
 857:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 858:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 859:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 860:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 861:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 862:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion for injected group on external event and start the select
 863:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 864:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_JSWSTART_Set;
 897              		.loc 1 864 0
 898 0000 8368     		ldr	r3, [r0, #8]
 860:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 899              		.loc 1 860 0
 900 0002 11B1     		cbz	r1, .L67
 901              		.loc 1 864 0
 902 0004 43F40211 		orr	r1, r3, #2129920
 903              	.LVL110:
 904 0008 01E0     		b	.L69
 905              	.LVL111:
 906              	.L67:
 865:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 866:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 867:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 868:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event for injected group and stop the select
 869:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 870:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_JSWSTART_Reset;
 907              		.loc 1 870 0
 908 000a 23F40211 		bic	r1, r3, #2129920
 909              	.LVL112:
 910              	.L69:
 911 000e 8160     		str	r1, [r0, #8]
 912 0010 7047     		bx	lr
 913              		.cfi_endproc
 914              	.LFE78:
 916              		.section	.text.ADC_GetSoftwareStartInjectedConvCmdStatus,"ax",%progbits
 917              		.align	1
 918              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 919              		.thumb
 920              		.thumb_func
 922              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 923              	.LFB79:
 871:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 872:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 873:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 874:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 875:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
 876:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 877:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
 878:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 879:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
 880:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 924              		.loc 1 880 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              		@ link register save eliminated.
 929              	.LVL113:
 881:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 882:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 883:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 884:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of JSWSTART bit */
 885:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_JSWSTART_Set) != (uint32_t)RESET)
 930              		.loc 1 885 0
 931 0000 8068     		ldr	r0, [r0, #8]
 932              	.LVL114:
 886:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 887:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is set */
 888:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 889:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 890:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 891:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 892:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is reset */
 893:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 894:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 895:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the JSWSTART bit status */
 896:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 897:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 933              		.loc 1 897 0
 934 0002 C0F34050 		ubfx	r0, r0, #21, #1
 935              	.LVL115:
 936 0006 7047     		bx	lr
 937              		.cfi_endproc
 938              	.LFE79:
 940              		.section	.text.ADC_InjectedChannelConfig,"ax",%progbits
 941              		.align	1
 942              		.global	ADC_InjectedChannelConfig
 943              		.thumb
 944              		.thumb_func
 946              	ADC_InjectedChannelConfig:
 947              	.LFB80:
 898:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 899:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 900:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
 901:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 902:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 903:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 904:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 905:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 906:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 907:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 908:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 909:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 910:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 911:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 912:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 913:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 914:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 915:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 916:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 917:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 918:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 919:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 920:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 921:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 922:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 923:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the injected group sequencer. This parameter must be between 1 and 4.
 924:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 925:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 926:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 927:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 928:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 929:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 930:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 931:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 932:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 933:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 934:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 935:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 936:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
 937:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 948              		.loc 1 937 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952              	.LVL116:
 938:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 939:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 940:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 941:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 942:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 943:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 944:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 945:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 953              		.loc 1 945 0
 954 0000 0929     		cmp	r1, #9
 937:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 955              		.loc 1 937 0
 956 0002 70B5     		push	{r4, r5, r6, lr}
 957              	.LCFI3:
 958              		.cfi_def_cfa_offset 16
 959              		.cfi_offset 4, -16
 960              		.cfi_offset 5, -12
 961              		.cfi_offset 6, -8
 962              		.cfi_offset 14, -4
 963 0004 4FF00304 		mov	r4, #3
 964              		.loc 1 945 0
 965 0008 0CD9     		bls	.L72
 946:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 947:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 948:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 949:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 950:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3*(ADC_Channel - 10));
 966              		.loc 1 950 0
 967 000a 4C43     		muls	r4, r1, r4
 968 000c 0725     		movs	r5, #7
 969 000e 1E3C     		subs	r4, r4, #30
 970 0010 05FA04F5 		lsl	r5, r5, r4
 951:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 952:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 953:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 954:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 971              		.loc 1 954 0
 972 0014 03FA04F3 		lsl	r3, r3, r4
 973              	.LVL117:
 948:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 974              		.loc 1 948 0
 975 0018 C668     		ldr	r6, [r0, #12]
 976              	.LVL118:
 952:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 977              		.loc 1 952 0
 978 001a 26EA0505 		bic	r5, r6, r5
 979              	.LVL119:
 955:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 956:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 980              		.loc 1 956 0
 981 001e 2B43     		orrs	r3, r3, r5
 982              	.LVL120:
 957:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 958:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 983              		.loc 1 958 0
 984 0020 C360     		str	r3, [r0, #12]
 985 0022 0BE0     		b	.L73
 986              	.LVL121:
 987              	.L72:
 959:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 960:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 961:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 962:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 963:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 964:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 965:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 988              		.loc 1 965 0
 989 0024 4C43     		muls	r4, r1, r4
 990 0026 0725     		movs	r5, #7
 991 0028 05FA04F5 		lsl	r5, r5, r4
 966:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 967:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 968:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 969:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 992              		.loc 1 969 0
 993 002c 03FA04F3 		lsl	r3, r3, r4
 994              	.LVL122:
 963:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 995              		.loc 1 963 0
 996 0030 0669     		ldr	r6, [r0, #16]
 997              	.LVL123:
 967:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 998              		.loc 1 967 0
 999 0032 26EA0505 		bic	r5, r6, r5
 1000              	.LVL124:
 970:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 971:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1001              		.loc 1 971 0
 1002 0036 45EA0304 		orr	r4, r5, r3
 1003              	.LVL125:
 972:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 973:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 1004              		.loc 1 973 0
 1005 003a 0461     		str	r4, [r0, #16]
 1006              	.LVL126:
 1007              	.L73:
 974:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 975:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Rank configuration */
 976:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 977:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1008              		.loc 1 977 0
 1009 003c 846B     		ldr	r4, [r0, #56]
 1010              	.LVL127:
 978:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get JL value: Number = JL+1 */
 979:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_Set)>> 20;
 1011              		.loc 1 979 0
 1012 003e C4F30153 		ubfx	r3, r4, #20, #2
 980:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
 981:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = JSQR_JSQ_Set << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1013              		.loc 1 981 0
 1014 0042 D21A     		subs	r2, r2, r3
 1015              	.LVL128:
 1016 0044 931C     		adds	r3, r2, #2
 1017 0046 DBB2     		uxtb	r3, r3
 1018 0048 0522     		movs	r2, #5
 1019 004a 5343     		muls	r3, r2, r3
 1020              	.LVL129:
 1021 004c 1F22     		movs	r2, #31
 1022 004e 02FA03F2 		lsl	r2, r2, r3
 1023              	.LVL130:
 982:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old JSQx bits for the selected rank */
 983:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= ~tmpreg2;
 984:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
 985:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1024              		.loc 1 985 0
 1025 0052 01FA03F1 		lsl	r1, r1, r3
 1026              	.LVL131:
 983:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= ~tmpreg2;
 1027              		.loc 1 983 0
 1028 0056 24EA0204 		bic	r4, r4, r2
 1029              	.LVL132:
 986:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the JSQx bits for the selected rank */
 987:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2;
 1030              		.loc 1 987 0
 1031 005a 2143     		orrs	r1, r1, r4
 1032              	.LVL133:
 988:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 989:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1033              		.loc 1 989 0
 1034 005c 8163     		str	r1, [r0, #56]
 1035 005e 70BD     		pop	{r4, r5, r6, pc}
 1036              		.cfi_endproc
 1037              	.LFE80:
 1039              		.section	.text.ADC_InjectedSequencerLengthConfig,"ax",%progbits
 1040              		.align	1
 1041              		.global	ADC_InjectedSequencerLengthConfig
 1042              		.thumb
 1043              		.thumb_func
 1045              	ADC_InjectedSequencerLengthConfig:
 1046              	.LFB81:
 990:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 991:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 992:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 993:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the sequencer length for injected channels
 994:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 995:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Length: The sequencer length. 
 996:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a number between 1 to 4.
 997:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 998:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 999:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
1000:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1047              		.loc 1 1000 0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051              		@ link register save eliminated.
 1052              	.LVL134:
1001:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
1002:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
1003:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1004:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1005:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1006:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1007:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1008:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1053              		.loc 1 1008 0
 1054 0000 836B     		ldr	r3, [r0, #56]
 1055              	.LVL135:
1009:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old injected sequnence lenght JL bits */
1010:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= JSQR_JL_Reset;
1011:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the injected sequnence lenght JL bits */
1012:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Length - 1; 
 1056              		.loc 1 1012 0
 1057 0002 0139     		subs	r1, r1, #1
 1058              	.LVL136:
1010:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= JSQR_JL_Reset;
 1059              		.loc 1 1010 0
 1060 0004 23F44012 		bic	r2, r3, #3145728
 1061              	.LVL137:
1013:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1062              		.loc 1 1013 0
 1063 0008 42EA0153 		orr	r3, r2, r1, lsl #20
 1064              	.LVL138:
1014:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1015:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1065              		.loc 1 1015 0
 1066 000c 8363     		str	r3, [r0, #56]
 1067 000e 7047     		bx	lr
 1068              		.cfi_endproc
 1069              	.LFE81:
 1071              		.section	.text.ADC_SetInjectedOffset,"ax",%progbits
 1072              		.align	1
 1073              		.global	ADC_SetInjectedOffset
 1074              		.thumb
 1075              		.thumb_func
 1077              	ADC_SetInjectedOffset:
 1078              	.LFB82:
1016:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
1017:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1018:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1019:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Set the injected channels conversion value offset
1020:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1021:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1022:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1023:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1024:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1025:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1026:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1027:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1028:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1029:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1030:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1031:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1032:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1079              		.loc 1 1032 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 8
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 1084              	.LVL139:
 1085 0000 82B0     		sub	sp, sp, #8
 1086              	.LCFI4:
 1087              		.cfi_def_cfa_offset 8
1033:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1088              		.loc 1 1033 0
 1089 0002 0023     		movs	r3, #0
 1090 0004 0193     		str	r3, [sp, #4]
 1091              	.LVL140:
1034:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1035:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1036:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1037:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1038:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));  
1039:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1040:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1092              		.loc 1 1040 0
 1093 0006 0190     		str	r0, [sp, #4]
1041:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel;
 1094              		.loc 1 1041 0
 1095 0008 0198     		ldr	r0, [sp, #4]
 1096              	.LVL141:
 1097 000a 0918     		adds	r1, r1, r0
 1098              	.LVL142:
 1099 000c 0191     		str	r1, [sp, #4]
 1100              	.LVL143:
1042:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1043:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the selected injected channel data offset */
1044:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1101              		.loc 1 1044 0
 1102 000e 019B     		ldr	r3, [sp, #4]
 1103 0010 1A60     		str	r2, [r3, #0]
1045:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1104              		.loc 1 1045 0
 1105 0012 02B0     		add	sp, sp, #8
 1106 0014 7047     		bx	lr
 1107              		.cfi_endproc
 1108              	.LFE82:
 1110              		.section	.text.ADC_GetInjectedConversionValue,"ax",%progbits
 1111              		.align	1
 1112              		.global	ADC_GetInjectedConversionValue
 1113              		.thumb
 1114              		.thumb_func
 1116              	ADC_GetInjectedConversionValue:
 1117              	.LFB83:
1046:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1047:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1048:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1049:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1050:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1051:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1052:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1053:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1054:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1055:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1056:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
1057:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1058:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1059:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1118              		.loc 1 1059 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 8
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123              	.LVL144:
 1124 0000 82B0     		sub	sp, sp, #8
 1125              	.LCFI5:
 1126              		.cfi_def_cfa_offset 8
1060:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1127              		.loc 1 1060 0
 1128 0002 0023     		movs	r3, #0
 1129 0004 0193     		str	r3, [sp, #4]
 1130              	.LVL145:
1061:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1062:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1063:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1064:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1065:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1066:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1131              		.loc 1 1066 0
 1132 0006 0190     		str	r0, [sp, #4]
1067:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel + JDR_Offset;
 1133              		.loc 1 1067 0
 1134 0008 0198     		ldr	r0, [sp, #4]
 1135              	.LVL146:
 1136 000a 2830     		adds	r0, r0, #40
 1137 000c 4118     		adds	r1, r0, r1
 1138              	.LVL147:
 1139 000e 0191     		str	r1, [sp, #4]
 1140              	.LVL148:
1068:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1069:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Returns the selected injected channel conversion data value */
1070:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp);   
 1141              		.loc 1 1070 0
 1142 0010 019A     		ldr	r2, [sp, #4]
 1143 0012 1368     		ldr	r3, [r2, #0]
1071:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1144              		.loc 1 1071 0
 1145 0014 98B2     		uxth	r0, r3
 1146 0016 02B0     		add	sp, sp, #8
 1147 0018 7047     		bx	lr
 1148              		.cfi_endproc
 1149              	.LFE83:
 1151              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 1152              		.align	1
 1153              		.global	ADC_AnalogWatchdogCmd
 1154              		.thumb
 1155              		.thumb_func
 1157              	ADC_AnalogWatchdogCmd:
 1158              	.LFB84:
1072:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1073:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1074:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular
1075:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         or injected channels
1076:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1077:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
1078:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1079:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
1080:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected channel
1081:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular or inje
1082:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on  all regular channel
1083:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on  all injected channel
1084:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and injected c
1085:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
1086:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None	  
1087:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1088:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
1089:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1159              		.loc 1 1089 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 1163              		@ link register save eliminated.
 1164              	.LVL149:
1090:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
1091:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1092:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1093:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
1094:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1095:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1165              		.loc 1 1095 0
 1166 0000 4368     		ldr	r3, [r0, #4]
 1167              	.LVL150:
1096:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear AWDEN, AWDENJ and AWDSGL bits */
1097:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDMode_Reset;
 1168              		.loc 1 1097 0
 1169 0002 23F44002 		bic	r2, r3, #12582912
 1170 0006 22F40073 		bic	r3, r2, #512
 1171              	.LVL151:
1098:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the analog watchdog enable mode */
1099:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 1172              		.loc 1 1099 0
 1173 000a 1943     		orrs	r1, r1, r3
 1174              	.LVL152:
1100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1175              		.loc 1 1101 0
 1176 000c 4160     		str	r1, [r0, #4]
 1177 000e 7047     		bx	lr
 1178              		.cfi_endproc
 1179              	.LFE84:
 1181              		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 1182              		.align	1
 1183              		.global	ADC_AnalogWatchdogThresholdsConfig
 1184              		.thumb
 1185              		.thumb_func
 1187              	ADC_AnalogWatchdogThresholdsConfig:
 1188              	.LFB85:
1102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
1103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
1106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
1108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  LowThreshold: the ADC analog watchdog Low threshold value.
1110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
1114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****                                         uint16_t LowThreshold)
1115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1189              		.loc 1 1115 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
 1194              	.LVL153:
1116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
1119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
1120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx high threshold */
1121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->HTR = HighThreshold;
 1195              		.loc 1 1121 0
 1196 0000 4162     		str	r1, [r0, #36]
1122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx low threshold */
1123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->LTR = LowThreshold;
 1197              		.loc 1 1123 0
 1198 0002 8262     		str	r2, [r0, #40]
 1199 0004 7047     		bx	lr
 1200              		.cfi_endproc
 1201              	.LFE85:
 1203              		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 1204              		.align	1
 1205              		.global	ADC_AnalogWatchdogSingleChannelConfig
 1206              		.thumb
 1207              		.thumb_func
 1209              	ADC_AnalogWatchdogSingleChannelConfig:
 1210              	.LFB86:
1124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
1125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
1128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
1130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
1132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
1133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
1134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
1135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
1136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
1137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
1138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
1139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
1140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
1141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
1142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
1143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
1144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
1145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
1146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
1147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
1148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
1149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
1152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1211              		.loc 1 1152 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 1216              	.LVL154:
1153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
1154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1217              		.loc 1 1158 0
 1218 0000 4368     		ldr	r3, [r0, #4]
 1219              	.LVL155:
1159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the Analog watchdog channel select bits */
1160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDCH_Reset;
 1220              		.loc 1 1160 0
 1221 0002 23F01F02 		bic	r2, r3, #31
 1222              	.LVL156:
1161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the Analog watchdog channel */
1162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_Channel;
 1223              		.loc 1 1162 0
 1224 0006 1143     		orrs	r1, r1, r2
 1225              	.LVL157:
1163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1226              		.loc 1 1164 0
 1227 0008 4160     		str	r1, [r0, #4]
 1228 000a 7047     		bx	lr
 1229              		.cfi_endproc
 1230              	.LFE86:
 1232              		.section	.text.ADC_TempSensorVrefintCmd,"ax",%progbits
 1233              		.align	1
 1234              		.global	ADC_TempSensorVrefintCmd
 1235              		.thumb
 1236              		.thumb_func
 1238              	ADC_TempSensorVrefintCmd:
 1239              	.LFB87:
1165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
1166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channel.
1169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the temperature sensor.
1170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
1171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)
1174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1240              		.loc 1 1174 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 1244              		@ link register save eliminated.
 1245              	.LVL158:
 1246 0000 044B     		ldr	r3, .L84
1175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
1178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
1180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 |= CR2_TSVREFE_Set;
 1247              		.loc 1 1180 0
 1248 0002 9A68     		ldr	r2, [r3, #8]
1177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1249              		.loc 1 1177 0
 1250 0004 10B1     		cbz	r0, .L81
 1251              		.loc 1 1180 0
 1252 0006 42F40000 		orr	r0, r2, #8388608
 1253              	.LVL159:
 1254 000a 01E0     		b	.L83
 1255              	.LVL160:
 1256              	.L81:
1181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
1185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 &= CR2_TSVREFE_Reset;
 1257              		.loc 1 1185 0
 1258 000c 22F40000 		bic	r0, r2, #8388608
 1259              	.LVL161:
 1260              	.L83:
 1261 0010 9860     		str	r0, [r3, #8]
 1262 0012 7047     		bx	lr
 1263              	.L85:
 1264              		.align	2
 1265              	.L84:
 1266 0014 00240140 		.word	1073816576
 1267              		.cfi_endproc
 1268              	.LFE87:
 1270              		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 1271              		.align	1
 1272              		.global	ADC_GetFlagStatus
 1273              		.thumb
 1274              		.thumb_func
 1276              	ADC_GetFlagStatus:
 1277              	.LFB88:
1186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
1188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1278              		.loc 1 1202 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 0
 1281              		@ frame_needed = 0, uses_anonymous_args = 0
 1282              		@ link register save eliminated.
 1283              	.LVL162:
1203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
1204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC flag */
1208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 1284              		.loc 1 1208 0
 1285 0000 0368     		ldr	r3, [r0, #0]
 1286              	.LVL163:
 1287 0002 1942     		tst	r1, r3
1209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is set */
1211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
1212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is reset */
1216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
1217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_FLAG status */
1219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
1220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1288              		.loc 1 1220 0
 1289 0004 0CBF     		ite	eq
 1290 0006 0020     		moveq	r0, #0
 1291 0008 0120     		movne	r0, #1
 1292              	.LVL164:
 1293 000a 7047     		bx	lr
 1294              		.cfi_endproc
 1295              	.LFE88:
 1297              		.section	.text.ADC_ClearFlag,"ax",%progbits
 1298              		.align	1
 1299              		.global	ADC_ClearFlag
 1300              		.thumb
 1301              		.thumb_func
 1303              	ADC_ClearFlag:
 1304              	.LFB89:
1221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's pending flags.
1224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1305              		.loc 1 1235 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
 1310              	.LVL165:
1236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC flags */
1240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 1311              		.loc 1 1240 0
 1312 0000 C943     		mvns	r1, r1
 1313              	.LVL166:
 1314 0002 0160     		str	r1, [r0, #0]
 1315 0004 7047     		bx	lr
 1316              		.cfi_endproc
 1317              	.LFE89:
 1319              		.section	.text.ADC_GetITStatus,"ax",%progbits
 1320              		.align	1
 1321              		.global	ADC_GetITStatus
 1322              		.thumb
 1323              		.thumb_func
 1325              	ADC_GetITStatus:
 1326              	.LFB90:
1241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
1242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1327              		.loc 1 1254 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 1331              		@ link register save eliminated.
 1332              	.LVL167:
1255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ITStatus bitstatus = RESET;
1256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
1257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_IT(ADC_IT));
1260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = ADC_IT >> 8;
1262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC_IT enable bit status */
1263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   enablestatus = (ADCx->CR1 & (uint8_t)ADC_IT) ;
 1333              		.loc 1 1263 0
 1334 0000 4368     		ldr	r3, [r0, #4]
 1335              	.LVL168:
1264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC interrupt */
1265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 1336              		.loc 1 1265 0
 1337 0002 0068     		ldr	r0, [r0, #0]
 1338              	.LVL169:
 1339 0004 10EA1120 		ands	r0, r0, r1, lsr #8
 1340 0008 04D0     		beq	.L89
1263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   enablestatus = (ADCx->CR1 & (uint8_t)ADC_IT) ;
 1341              		.loc 1 1263 0 discriminator 1
 1342 000a C9B2     		uxtb	r1, r1
 1343              	.LVL170:
 1344              		.loc 1 1265 0 discriminator 1
 1345 000c 1942     		tst	r1, r3
1266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is set */
1268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 1346              		.loc 1 1268 0 discriminator 1
 1347 000e 0CBF     		ite	eq
 1348 0010 0020     		moveq	r0, #0
 1349 0012 0120     		movne	r0, #1
 1350              	.L89:
 1351              	.LVL171:
1269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is reset */
1273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
1274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_IT status */
1276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
1277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1352              		.loc 1 1277 0
 1353 0014 7047     		bx	lr
 1354              		.cfi_endproc
 1355              	.LFE90:
 1357              		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 1358              		.align	1
 1359              		.global	ADC_ClearITPendingBit
 1360              		.thumb
 1361              		.thumb_func
 1363              	ADC_ClearITPendingBit:
 1364              	.LFB91:
1278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1365              		.loc 1 1290 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 0
 1368              		@ frame_needed = 0, uses_anonymous_args = 0
 1369              		@ link register save eliminated.
 1370              	.LVL172:
1291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
1292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
1297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 1371              		.loc 1 1298 0
 1372 0000 6FEA1121 		mvn	r1, r1, lsr #8
 1373              	.LVL173:
 1374 0004 0160     		str	r1, [r0, #0]
 1375 0006 7047     		bx	lr
 1376              		.cfi_endproc
 1377              	.LFE91:
 1379              		.text
 1380              	.Letext0:
 1381              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 1382              		.file 3 "/Users/zac/code/spark/cc3000-patch-programmer/libraries/CMSIS/Device/ST/STM32F10x/Include
 1383              		.file 4 "/Users/zac/code/spark/cc3000-patch-programmer/libraries/STM32F10x_StdPeriph_Driver/inc/st
 1384              		.file 5 "/Users/zac/code/spark/cc3000-patch-programmer/libraries/CMSIS/Include/core_cm3.h"
 1385              		.file 6 "/Users/zac/code/spark/cc3000-patch-programmer/libraries/STM32F10x_StdPeriph_Driver/inc/st
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_adc.c
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:19     .text.ADC_DeInit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:24     .text.ADC_DeInit:0000000000000000 ADC_DeInit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:91     .text.ADC_DeInit:0000000000000050 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:98     .text.ADC_Init:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:103    .text.ADC_Init:0000000000000000 ADC_Init
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:177    .text.ADC_Init:0000000000000044 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:182    .text.ADC_StructInit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:187    .text.ADC_StructInit:0000000000000000 ADC_StructInit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:216    .text.ADC_Cmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:221    .text.ADC_Cmd:0000000000000000 ADC_Cmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:249    .text.ADC_DMACmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:254    .text.ADC_DMACmd:0000000000000000 ADC_DMACmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:282    .text.ADC_ITConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:287    .text.ADC_ITConfig:0000000000000000 ADC_ITConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:316    .text.ADC_ResetCalibration:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:321    .text.ADC_ResetCalibration:0000000000000000 ADC_ResetCalibration
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:338    .text.ADC_GetResetCalibrationStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:343    .text.ADC_GetResetCalibrationStatus:0000000000000000 ADC_GetResetCalibrationStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:362    .text.ADC_StartCalibration:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:367    .text.ADC_StartCalibration:0000000000000000 ADC_StartCalibration
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:384    .text.ADC_GetCalibrationStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:389    .text.ADC_GetCalibrationStatus:0000000000000000 ADC_GetCalibrationStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:408    .text.ADC_SoftwareStartConvCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:413    .text.ADC_SoftwareStartConvCmd:0000000000000000 ADC_SoftwareStartConvCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:441    .text.ADC_GetSoftwareStartConvStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:446    .text.ADC_GetSoftwareStartConvStatus:0000000000000000 ADC_GetSoftwareStartConvStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:465    .text.ADC_DiscModeChannelCountConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:470    .text.ADC_DiscModeChannelCountConfig:0000000000000000 ADC_DiscModeChannelCountConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:497    .text.ADC_DiscModeCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:502    .text.ADC_DiscModeCmd:0000000000000000 ADC_DiscModeCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:530    .text.ADC_RegularChannelConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:535    .text.ADC_RegularChannelConfig:0000000000000000 ADC_RegularChannelConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:675    .text.ADC_ExternalTrigConvCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:680    .text.ADC_ExternalTrigConvCmd:0000000000000000 ADC_ExternalTrigConvCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:708    .text.ADC_GetConversionValue:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:713    .text.ADC_GetConversionValue:0000000000000000 ADC_GetConversionValue
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:731    .text.ADC_GetDualModeConversionValue:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:736    .text.ADC_GetDualModeConversionValue:0000000000000000 ADC_GetDualModeConversionValue
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:751    .text.ADC_GetDualModeConversionValue:0000000000000008 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:756    .text.ADC_AutoInjectedConvCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:761    .text.ADC_AutoInjectedConvCmd:0000000000000000 ADC_AutoInjectedConvCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:789    .text.ADC_InjectedDiscModeCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:794    .text.ADC_InjectedDiscModeCmd:0000000000000000 ADC_InjectedDiscModeCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:822    .text.ADC_ExternalTrigInjectedConvConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:827    .text.ADC_ExternalTrigInjectedConvConfig:0000000000000000 ADC_ExternalTrigInjectedConvConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:851    .text.ADC_ExternalTrigInjectedConvCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:856    .text.ADC_ExternalTrigInjectedConvCmd:0000000000000000 ADC_ExternalTrigInjectedConvCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:884    .text.ADC_SoftwareStartInjectedConvCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:889    .text.ADC_SoftwareStartInjectedConvCmd:0000000000000000 ADC_SoftwareStartInjectedConvCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:917    .text.ADC_GetSoftwareStartInjectedConvCmdStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:922    .text.ADC_GetSoftwareStartInjectedConvCmdStatus:0000000000000000 ADC_GetSoftwareStartInjectedConvCmdStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:941    .text.ADC_InjectedChannelConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:946    .text.ADC_InjectedChannelConfig:0000000000000000 ADC_InjectedChannelConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1040   .text.ADC_InjectedSequencerLengthConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1045   .text.ADC_InjectedSequencerLengthConfig:0000000000000000 ADC_InjectedSequencerLengthConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1072   .text.ADC_SetInjectedOffset:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1077   .text.ADC_SetInjectedOffset:0000000000000000 ADC_SetInjectedOffset
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1111   .text.ADC_GetInjectedConversionValue:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1116   .text.ADC_GetInjectedConversionValue:0000000000000000 ADC_GetInjectedConversionValue
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1152   .text.ADC_AnalogWatchdogCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1157   .text.ADC_AnalogWatchdogCmd:0000000000000000 ADC_AnalogWatchdogCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1182   .text.ADC_AnalogWatchdogThresholdsConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1187   .text.ADC_AnalogWatchdogThresholdsConfig:0000000000000000 ADC_AnalogWatchdogThresholdsConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1204   .text.ADC_AnalogWatchdogSingleChannelConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1209   .text.ADC_AnalogWatchdogSingleChannelConfig:0000000000000000 ADC_AnalogWatchdogSingleChannelConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1233   .text.ADC_TempSensorVrefintCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1238   .text.ADC_TempSensorVrefintCmd:0000000000000000 ADC_TempSensorVrefintCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1266   .text.ADC_TempSensorVrefintCmd:0000000000000014 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1271   .text.ADC_GetFlagStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1276   .text.ADC_GetFlagStatus:0000000000000000 ADC_GetFlagStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1298   .text.ADC_ClearFlag:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1303   .text.ADC_ClearFlag:0000000000000000 ADC_ClearFlag
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1320   .text.ADC_GetITStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1325   .text.ADC_GetITStatus:0000000000000000 ADC_GetITStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1358   .text.ADC_ClearITPendingBit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7QdmsN.s:1363   .text.ADC_ClearITPendingBit:0000000000000000 ADC_ClearITPendingBit
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.94ea818a60f77b04fe5add16507b1dca
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.64.07c104f22a887098a9ccb01471e84bcc
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.31.2ee3219a25ef4ced658f2fe9d8cd94aa
                           .group:0000000000000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
