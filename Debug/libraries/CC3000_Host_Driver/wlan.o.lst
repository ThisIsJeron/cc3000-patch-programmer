   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"wlan.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SpiReceiveHandler,"ax",%progbits
  19              		.align	1
  20              		.global	SpiReceiveHandler
  21              		.thumb
  22              		.thumb_func
  24              	SpiReceiveHandler:
  25              	.LFB58:
  26              		.file 1 "../libraries/CC3000_Host_Driver/wlan.c"
   1:../libraries/CC3000_Host_Driver/wlan.c **** /*****************************************************************************
   2:../libraries/CC3000_Host_Driver/wlan.c **** *
   3:../libraries/CC3000_Host_Driver/wlan.c **** *  wlan.c  - CC3000 Host Driver Implementation.
   4:../libraries/CC3000_Host_Driver/wlan.c **** *  Copyright (C) 2011 Texas Instruments Incorporated - http://www.ti.com/
   5:../libraries/CC3000_Host_Driver/wlan.c **** *
   6:../libraries/CC3000_Host_Driver/wlan.c **** *  Redistribution and use in source and binary forms, with or without
   7:../libraries/CC3000_Host_Driver/wlan.c **** *  modification, are permitted provided that the following conditions
   8:../libraries/CC3000_Host_Driver/wlan.c **** *  are met:
   9:../libraries/CC3000_Host_Driver/wlan.c **** *
  10:../libraries/CC3000_Host_Driver/wlan.c **** *    Redistributions of source code must retain the above copyright
  11:../libraries/CC3000_Host_Driver/wlan.c **** *    notice, this list of conditions and the following disclaimer.
  12:../libraries/CC3000_Host_Driver/wlan.c **** *
  13:../libraries/CC3000_Host_Driver/wlan.c **** *    Redistributions in binary form must reproduce the above copyright
  14:../libraries/CC3000_Host_Driver/wlan.c **** *    notice, this list of conditions and the following disclaimer in the
  15:../libraries/CC3000_Host_Driver/wlan.c **** *    documentation and/or other materials provided with the   
  16:../libraries/CC3000_Host_Driver/wlan.c **** *    distribution.
  17:../libraries/CC3000_Host_Driver/wlan.c **** *
  18:../libraries/CC3000_Host_Driver/wlan.c **** *    Neither the name of Texas Instruments Incorporated nor the names of
  19:../libraries/CC3000_Host_Driver/wlan.c **** *    its contributors may be used to endorse or promote products derived
  20:../libraries/CC3000_Host_Driver/wlan.c **** *    from this software without specific prior written permission.
  21:../libraries/CC3000_Host_Driver/wlan.c **** *
  22:../libraries/CC3000_Host_Driver/wlan.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
  23:../libraries/CC3000_Host_Driver/wlan.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
  24:../libraries/CC3000_Host_Driver/wlan.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  25:../libraries/CC3000_Host_Driver/wlan.c **** *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
  26:../libraries/CC3000_Host_Driver/wlan.c **** *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  27:../libraries/CC3000_Host_Driver/wlan.c **** *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
  28:../libraries/CC3000_Host_Driver/wlan.c **** *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  29:../libraries/CC3000_Host_Driver/wlan.c **** *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  30:../libraries/CC3000_Host_Driver/wlan.c **** *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
  31:../libraries/CC3000_Host_Driver/wlan.c **** *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
  32:../libraries/CC3000_Host_Driver/wlan.c **** *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:../libraries/CC3000_Host_Driver/wlan.c **** *
  34:../libraries/CC3000_Host_Driver/wlan.c **** *****************************************************************************/
  35:../libraries/CC3000_Host_Driver/wlan.c **** 
  36:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
  37:../libraries/CC3000_Host_Driver/wlan.c **** //
  38:../libraries/CC3000_Host_Driver/wlan.c **** //! \addtogroup wlan_api
  39:../libraries/CC3000_Host_Driver/wlan.c **** //! @{
  40:../libraries/CC3000_Host_Driver/wlan.c **** //
  41:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
  42:../libraries/CC3000_Host_Driver/wlan.c **** #include <string.h>
  43:../libraries/CC3000_Host_Driver/wlan.c **** #include "wlan.h"
  44:../libraries/CC3000_Host_Driver/wlan.c **** #include "hci.h"
  45:../libraries/CC3000_Host_Driver/wlan.c **** #include "spi.h"
  46:../libraries/CC3000_Host_Driver/wlan.c **** #include "socket.h"
  47:../libraries/CC3000_Host_Driver/wlan.c **** #include "nvmem.h"
  48:../libraries/CC3000_Host_Driver/wlan.c **** #include "security.h"
  49:../libraries/CC3000_Host_Driver/wlan.c **** #include "evnt_handler.h"
  50:../libraries/CC3000_Host_Driver/wlan.c **** 
  51:../libraries/CC3000_Host_Driver/wlan.c **** 
  52:../libraries/CC3000_Host_Driver/wlan.c **** volatile sSimplLinkInformation tSLInformation;
  53:../libraries/CC3000_Host_Driver/wlan.c **** 
  54:../libraries/CC3000_Host_Driver/wlan.c **** #define SMART_CONFIG_PROFILE_SIZE		67		// 67 = 32 (max ssid) + 32 (max key) + 1 (SSID length) + 1 (
  55:../libraries/CC3000_Host_Driver/wlan.c **** 
  56:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_UNENCRYPTED_SMART_CONFIG
  57:../libraries/CC3000_Host_Driver/wlan.c **** unsigned char key[AES128_KEY_SIZE];	
  58:../libraries/CC3000_Host_Driver/wlan.c **** unsigned char profileArray[SMART_CONFIG_PROFILE_SIZE];
  59:../libraries/CC3000_Host_Driver/wlan.c **** #endif //CC3000_UNENCRYPTED_SMART_CONFIG
  60:../libraries/CC3000_Host_Driver/wlan.c **** 
  61:../libraries/CC3000_Host_Driver/wlan.c **** /* patches type */
  62:../libraries/CC3000_Host_Driver/wlan.c **** #define PATCHES_HOST_TYPE_WLAN_DRIVER   0x01
  63:../libraries/CC3000_Host_Driver/wlan.c **** #define PATCHES_HOST_TYPE_WLAN_FW       0x02
  64:../libraries/CC3000_Host_Driver/wlan.c **** #define PATCHES_HOST_TYPE_BOOTLOADER    0x03
  65:../libraries/CC3000_Host_Driver/wlan.c **** 
  66:../libraries/CC3000_Host_Driver/wlan.c **** #define SL_SET_SCAN_PARAMS_INTERVAL_LIST_SIZE	(16)
  67:../libraries/CC3000_Host_Driver/wlan.c **** #define SL_SIMPLE_CONFIG_PREFIX_LENGTH (3)
  68:../libraries/CC3000_Host_Driver/wlan.c **** #define ETH_ALEN								(6)
  69:../libraries/CC3000_Host_Driver/wlan.c **** #define MAXIMAL_SSID_LENGTH						(32)
  70:../libraries/CC3000_Host_Driver/wlan.c **** 
  71:../libraries/CC3000_Host_Driver/wlan.c **** #define SL_PATCHES_REQUEST_DEFAULT		(0)
  72:../libraries/CC3000_Host_Driver/wlan.c **** #define SL_PATCHES_REQUEST_FORCE_HOST	(1)
  73:../libraries/CC3000_Host_Driver/wlan.c **** #define SL_PATCHES_REQUEST_FORCE_NONE	(2)
  74:../libraries/CC3000_Host_Driver/wlan.c **** 
  75:../libraries/CC3000_Host_Driver/wlan.c **** 
  76:../libraries/CC3000_Host_Driver/wlan.c **** #define      WLAN_SEC_UNSEC (0)
  77:../libraries/CC3000_Host_Driver/wlan.c **** #define      WLAN_SEC_WEP	(1)
  78:../libraries/CC3000_Host_Driver/wlan.c **** #define      WLAN_SEC_WPA	(2)
  79:../libraries/CC3000_Host_Driver/wlan.c **** #define      WLAN_SEC_WPA2	(3)
  80:../libraries/CC3000_Host_Driver/wlan.c **** 
  81:../libraries/CC3000_Host_Driver/wlan.c **** 
  82:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_SL_INIT_START_PARAMS_LEN			(1)
  83:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_PATCH_PARAMS_LENGTH				(8)
  84:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_SET_CONNECTION_POLICY_PARAMS_LEN	(12)
  85:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_DEL_PROFILE_PARAMS_LEN				(4)
  86:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_SET_MASK_PARAMS_LEN				(4)
  87:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_SET_SCAN_PARAMS_LEN				(100)
  88:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_GET_SCAN_RESULTS_PARAMS_LEN		(4)
  89:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_ADD_PROFILE_NOSEC_PARAM_LEN		(24)			
  90:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_ADD_PROFILE_WEP_PARAM_LEN			(36)
  91:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_ADD_PROFILE_WPA_PARAM_LEN			(44)
  92:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_CONNECT_PARAM_LEN					(29)
  93:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_SMART_CONFIG_START_PARAMS_LEN		(4)
  94:../libraries/CC3000_Host_Driver/wlan.c **** 
  95:../libraries/CC3000_Host_Driver/wlan.c **** 
  96:../libraries/CC3000_Host_Driver/wlan.c **** 
  97:../libraries/CC3000_Host_Driver/wlan.c **** 
  98:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
  99:../libraries/CC3000_Host_Driver/wlan.c **** //
 100:../libraries/CC3000_Host_Driver/wlan.c **** //!  SimpleLink_Init_Start
 101:../libraries/CC3000_Host_Driver/wlan.c **** //!
 102:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param  usPatchesAvailableAtHost  flag to indicate if patches available
 103:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    from host or from EEPROM. Due to the 
 104:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    fact the patches are burn to the EEPROM
 105:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    using the patch programmer utility, the 
 106:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    patches will be available from the EEPROM
 107:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    and not from the host.
 108:../libraries/CC3000_Host_Driver/wlan.c **** //!
 109:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   none
 110:../libraries/CC3000_Host_Driver/wlan.c **** //!
 111:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    Send HCI_CMND_SIMPLE_LINK_START to CC3000
 112:../libraries/CC3000_Host_Driver/wlan.c **** //
 113:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 114:../libraries/CC3000_Host_Driver/wlan.c **** static void SimpleLink_Init_Start(unsigned short usPatchesAvailableAtHost)
 115:../libraries/CC3000_Host_Driver/wlan.c **** {
 116:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 117:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 118:../libraries/CC3000_Host_Driver/wlan.c **** 	
 119:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 120:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (unsigned char *)(ptr + HEADERS_SIZE_CMD);
 121:../libraries/CC3000_Host_Driver/wlan.c **** 	
 122:../libraries/CC3000_Host_Driver/wlan.c **** 	UINT8_TO_STREAM(args, ((usPatchesAvailableAtHost) ? SL_PATCHES_REQUEST_FORCE_HOST : SL_PATCHES_REQ
 123:../libraries/CC3000_Host_Driver/wlan.c **** 	
 124:../libraries/CC3000_Host_Driver/wlan.c **** 	// IRQ Line asserted - send HCI_CMND_SIMPLE_LINK_START to CC3000
 125:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_SIMPLE_LINK_START, ptr, WLAN_SL_INIT_START_PARAMS_LEN);
 126:../libraries/CC3000_Host_Driver/wlan.c **** 	
 127:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_SIMPLE_LINK_START, 0);
 128:../libraries/CC3000_Host_Driver/wlan.c **** }
 129:../libraries/CC3000_Host_Driver/wlan.c **** 
 130:../libraries/CC3000_Host_Driver/wlan.c **** 
 131:../libraries/CC3000_Host_Driver/wlan.c **** 
 132:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 133:../libraries/CC3000_Host_Driver/wlan.c **** //
 134:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_init
 135:../libraries/CC3000_Host_Driver/wlan.c **** //!
 136:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param  sWlanCB   Asynchronous events callback.  
 137:../libraries/CC3000_Host_Driver/wlan.c **** //!                    0 no event call back.
 138:../libraries/CC3000_Host_Driver/wlan.c **** //!                  -call back parameters:
 139:../libraries/CC3000_Host_Driver/wlan.c **** //!                   1) event_type: HCI_EVNT_WLAN_UNSOL_CONNECT connect event,
 140:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_UNSOL_DISCONNECT disconnect event,
 141:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_ASYNC_SIMPLE_CONFIG_DONE config done,
 142:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_UNSOL_DHCP dhcp report, 
 143:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_ASYNC_PING_REPORT ping report OR 
 144:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_KEEPALIVE keepalive.
 145:../libraries/CC3000_Host_Driver/wlan.c **** //!                   2) data: pointer to extra data that received by the event
 146:../libraries/CC3000_Host_Driver/wlan.c **** //!                     (NULL no data).
 147:../libraries/CC3000_Host_Driver/wlan.c **** //!                   3) length: data length.
 148:../libraries/CC3000_Host_Driver/wlan.c **** //!                  -Events with extra data:
 149:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_UNSOL_DHCP: 4 bytes IP, 4 bytes Mask, 
 150:../libraries/CC3000_Host_Driver/wlan.c **** //!                     4 bytes default gateway, 4 bytes DHCP server and 4 bytes
 151:../libraries/CC3000_Host_Driver/wlan.c **** //!                     for DNS server.
 152:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_ASYNC_PING_REPORT: 4 bytes Packets sent, 
 153:../libraries/CC3000_Host_Driver/wlan.c **** //!                     4 bytes Packets received, 4 bytes Min round time, 
 154:../libraries/CC3000_Host_Driver/wlan.c **** //!                     4 bytes Max round time and 4 bytes for Avg round time.
 155:../libraries/CC3000_Host_Driver/wlan.c **** //!
 156:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sFWPatches  0 no patch or pointer to FW patches 
 157:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sDriverPatches  0 no patch or pointer to driver patches
 158:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sBootLoaderPatches  0 no patch or pointer to bootloader patches
 159:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sReadWlanInterruptPin    init callback. the callback read wlan 
 160:../libraries/CC3000_Host_Driver/wlan.c **** //!            interrupt status.
 161:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sWlanInterruptEnable   init callback. the callback enable wlan 
 162:../libraries/CC3000_Host_Driver/wlan.c **** //!            interrupt.
 163:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sWlanInterruptDisable   init callback. the callback disable wlan
 164:../libraries/CC3000_Host_Driver/wlan.c **** //!            interrupt.
 165:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sWriteWlanPin      init callback. the callback write value 
 166:../libraries/CC3000_Host_Driver/wlan.c **** //!            to device pin.  
 167:../libraries/CC3000_Host_Driver/wlan.c **** //!
 168:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   none
 169:../libraries/CC3000_Host_Driver/wlan.c **** //!
 170:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa       wlan_set_event_mask , wlan_start , wlan_stop 
 171:../libraries/CC3000_Host_Driver/wlan.c **** //!
 172:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    Initialize wlan driver
 173:../libraries/CC3000_Host_Driver/wlan.c **** //!
 174:../libraries/CC3000_Host_Driver/wlan.c **** //!  @warning This function must be called before ANY other wlan driver function
 175:../libraries/CC3000_Host_Driver/wlan.c **** //
 176:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 177:../libraries/CC3000_Host_Driver/wlan.c **** 
 178:../libraries/CC3000_Host_Driver/wlan.c **** void wlan_init(		tWlanCB	 	sWlanCB,
 179:../libraries/CC3000_Host_Driver/wlan.c **** 							 tFWPatches sFWPatches,
 180:../libraries/CC3000_Host_Driver/wlan.c **** 							 tDriverPatches sDriverPatches,
 181:../libraries/CC3000_Host_Driver/wlan.c **** 							 tBootLoaderPatches sBootLoaderPatches,
 182:../libraries/CC3000_Host_Driver/wlan.c **** 							 tWlanReadInteruptPin  sReadWlanInterruptPin,
 183:../libraries/CC3000_Host_Driver/wlan.c **** 							 tWlanInterruptEnable  sWlanInterruptEnable,
 184:../libraries/CC3000_Host_Driver/wlan.c **** 							 tWlanInterruptDisable sWlanInterruptDisable,
 185:../libraries/CC3000_Host_Driver/wlan.c **** 							 tWriteWlanPin         sWriteWlanPin)
 186:../libraries/CC3000_Host_Driver/wlan.c **** {
 187:../libraries/CC3000_Host_Driver/wlan.c **** 	
 188:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sFWPatches = sFWPatches;
 189:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sDriverPatches = sDriverPatches;
 190:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sBootLoaderPatches = sBootLoaderPatches;
 191:../libraries/CC3000_Host_Driver/wlan.c **** 	
 192:../libraries/CC3000_Host_Driver/wlan.c **** 	// init io callback
 193:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.ReadWlanInterruptPin = sReadWlanInterruptPin;
 194:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WlanInterruptEnable  = sWlanInterruptEnable;
 195:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WlanInterruptDisable = sWlanInterruptDisable;
 196:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WriteWlanPin = sWriteWlanPin;
 197:../libraries/CC3000_Host_Driver/wlan.c **** 	
 198:../libraries/CC3000_Host_Driver/wlan.c **** 	//init asynchronous events callback
 199:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sWlanCB= sWlanCB;
 200:../libraries/CC3000_Host_Driver/wlan.c **** 	
 201:../libraries/CC3000_Host_Driver/wlan.c **** 	// By default TX Complete events are routed to host too
 202:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.InformHostOnTxComplete = 1;
 203:../libraries/CC3000_Host_Driver/wlan.c **** }
 204:../libraries/CC3000_Host_Driver/wlan.c **** 
 205:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 206:../libraries/CC3000_Host_Driver/wlan.c **** //
 207:../libraries/CC3000_Host_Driver/wlan.c **** //!  SpiReceiveHandler
 208:../libraries/CC3000_Host_Driver/wlan.c **** //!
 209:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param         pvBuffer - pointer to the received data buffer
 210:../libraries/CC3000_Host_Driver/wlan.c **** //!                      The function triggers Received event/data processing
 211:../libraries/CC3000_Host_Driver/wlan.c **** //!                 
 212:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param         Pointer to the received data
 213:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return        none
 214:../libraries/CC3000_Host_Driver/wlan.c **** //!
 215:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief         The function triggers Received event/data processing. It is 
 216:../libraries/CC3000_Host_Driver/wlan.c **** //! 			          called from the SPI library to receive the data
 217:../libraries/CC3000_Host_Driver/wlan.c **** //
 218:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 219:../libraries/CC3000_Host_Driver/wlan.c **** void SpiReceiveHandler(void *pvBuffer)
 220:../libraries/CC3000_Host_Driver/wlan.c **** {	
  27              		.loc 1 220 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 221:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usEventOrDataReceived = 1;
  33              		.loc 1 221 0
  34 0000 024B     		ldr	r3, .L2
  35 0002 0122     		movs	r2, #1
  36 0004 5A80     		strh	r2, [r3, #2]	@ movhi
 222:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.pucReceivedData = (unsigned char 	*)pvBuffer;
  37              		.loc 1 222 0
  38 0006 5860     		str	r0, [r3, #4]
 223:../libraries/CC3000_Host_Driver/wlan.c **** 	
 224:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_unsolicited_event_handler();
 225:../libraries/CC3000_Host_Driver/wlan.c **** }
  39              		.loc 1 225 0
 224:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_unsolicited_event_handler();
  40              		.loc 1 224 0
  41 0008 FFF7FEBF 		b	hci_unsolicited_event_handler
  42              	.LVL1:
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 000c 00000000 		.word	tSLInformation
  47              		.cfi_endproc
  48              	.LFE58:
  50              		.section	.text.wlan_init,"ax",%progbits
  51              		.align	1
  52              		.global	wlan_init
  53              		.thumb
  54              		.thumb_func
  56              	wlan_init:
  57              	.LFB57:
 186:../libraries/CC3000_Host_Driver/wlan.c **** {
  58              		.loc 1 186 0
  59              		.cfi_startproc
  60              		@ args = 16, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              	.LVL2:
  63 0000 10B5     		push	{r4, lr}
  64              	.LCFI0:
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 4, -8
  67              		.cfi_offset 14, -4
 188:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sFWPatches = sFWPatches;
  68              		.loc 1 188 0
  69 0002 084C     		ldr	r4, .L5
  70 0004 E160     		str	r1, [r4, #12]
 189:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sDriverPatches = sDriverPatches;
  71              		.loc 1 189 0
  72 0006 2261     		str	r2, [r4, #16]
 190:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sBootLoaderPatches = sBootLoaderPatches;
  73              		.loc 1 190 0
  74 0008 6361     		str	r3, [r4, #20]
 193:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.ReadWlanInterruptPin = sReadWlanInterruptPin;
  75              		.loc 1 193 0
  76 000a 029B     		ldr	r3, [sp, #8]
  77              	.LVL3:
 194:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WlanInterruptEnable  = sWlanInterruptEnable;
  78              		.loc 1 194 0
  79 000c 0399     		ldr	r1, [sp, #12]
  80              	.LVL4:
 193:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.ReadWlanInterruptPin = sReadWlanInterruptPin;
  81              		.loc 1 193 0
  82 000e E361     		str	r3, [r4, #28]
 195:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WlanInterruptDisable = sWlanInterruptDisable;
  83              		.loc 1 195 0
  84 0010 049A     		ldr	r2, [sp, #16]
  85              	.LVL5:
 196:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WriteWlanPin = sWriteWlanPin;
  86              		.loc 1 196 0
  87 0012 059B     		ldr	r3, [sp, #20]
 194:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WlanInterruptEnable  = sWlanInterruptEnable;
  88              		.loc 1 194 0
  89 0014 2162     		str	r1, [r4, #32]
 195:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WlanInterruptDisable = sWlanInterruptDisable;
  90              		.loc 1 195 0
  91 0016 6262     		str	r2, [r4, #36]
 196:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WriteWlanPin = sWriteWlanPin;
  92              		.loc 1 196 0
  93 0018 A362     		str	r3, [r4, #40]
 199:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sWlanCB= sWlanCB;
  94              		.loc 1 199 0
  95 001a A061     		str	r0, [r4, #24]
 202:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.InformHostOnTxComplete = 1;
  96              		.loc 1 202 0
  97 001c 0120     		movs	r0, #1
  98              	.LVL6:
  99 001e 84F84000 		strb	r0, [r4, #64]
 100 0022 10BD     		pop	{r4, pc}
 101              	.L6:
 102              		.align	2
 103              	.L5:
 104 0024 00000000 		.word	tSLInformation
 105              		.cfi_endproc
 106              	.LFE57:
 108              		.section	.text.wlan_start,"ax",%progbits
 109              		.align	1
 110              		.global	wlan_start
 111              		.thumb
 112              		.thumb_func
 114              	wlan_start:
 115              	.LFB59:
 226:../libraries/CC3000_Host_Driver/wlan.c **** 
 227:../libraries/CC3000_Host_Driver/wlan.c **** 
 228:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 229:../libraries/CC3000_Host_Driver/wlan.c **** //
 230:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_start
 231:../libraries/CC3000_Host_Driver/wlan.c **** //!
 232:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   usPatchesAvailableAtHost -  flag to indicate if patches available
 233:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    from host or from EEPROM. Due to the 
 234:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    fact the patches are burn to the EEPROM
 235:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    using the patch programmer utility, the 
 236:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    patches will be available from the EEPROM
 237:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    and not from the host.
 238:../libraries/CC3000_Host_Driver/wlan.c **** //!
 239:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return        none
 240:../libraries/CC3000_Host_Driver/wlan.c **** //!
 241:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief        Start WLAN device. This function asserts the enable pin of 
 242:../libraries/CC3000_Host_Driver/wlan.c **** //!                the device (WLAN_EN), starting the HW initialization process.
 243:../libraries/CC3000_Host_Driver/wlan.c **** //!                The function blocked until device Initialization is completed.
 244:../libraries/CC3000_Host_Driver/wlan.c **** //!                Function also configure patches (FW, driver or bootloader) 
 245:../libraries/CC3000_Host_Driver/wlan.c **** //!                and calls appropriate device callbacks.
 246:../libraries/CC3000_Host_Driver/wlan.c **** //!
 247:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note          Prior calling the function wlan_init shall be called.
 248:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Warning       This function must be called after wlan_init and before any 
 249:../libraries/CC3000_Host_Driver/wlan.c **** //!                 other wlan API
 250:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa            wlan_init , wlan_stop
 251:../libraries/CC3000_Host_Driver/wlan.c **** //!
 252:../libraries/CC3000_Host_Driver/wlan.c **** //
 253:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 254:../libraries/CC3000_Host_Driver/wlan.c **** 
 255:../libraries/CC3000_Host_Driver/wlan.c **** void
 256:../libraries/CC3000_Host_Driver/wlan.c **** wlan_start(unsigned short usPatchesAvailableAtHost)
 257:../libraries/CC3000_Host_Driver/wlan.c **** {
 116              		.loc 1 257 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              	.LVL7:
 121 0000 70B5     		push	{r4, r5, r6, lr}
 122              	.LCFI1:
 123              		.cfi_def_cfa_offset 16
 124              		.cfi_offset 4, -16
 125              		.cfi_offset 5, -12
 126              		.cfi_offset 6, -8
 127              		.cfi_offset 14, -4
 258:../libraries/CC3000_Host_Driver/wlan.c **** 	
 259:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned long ulSpiIRQState;
 260:../libraries/CC3000_Host_Driver/wlan.c **** 	
 261:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.NumberOfSentPackets = 0;
 128              		.loc 1 261 0
 129 0002 214C     		ldr	r4, .L25
 257:../libraries/CC3000_Host_Driver/wlan.c **** {
 130              		.loc 1 257 0
 131 0004 0546     		mov	r5, r0
 262:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.NumberOfReleasedPackets = 0;
 263:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usRxEventOpcode = 0;
 264:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usNumberOfFreeBuffers = 0;
 265:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usSlBufferLength = 0;
 266:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usBufferSize = 0;
 267:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usRxDataPending = 0;
 268:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.slTransmitDataError = 0;
 269:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usEventOrDataReceived = 0;
 270:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.pucReceivedData = 0;
 271:../libraries/CC3000_Host_Driver/wlan.c **** 	
 272:../libraries/CC3000_Host_Driver/wlan.c **** 	// Allocate the memory for the RX/TX data transactions
 273:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.pucTxCommandBuffer = (unsigned char *)wlan_tx_buffer;
 132              		.loc 1 273 0
 133 0006 2148     		ldr	r0, .L25+4
 134              	.LVL8:
 261:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.NumberOfSentPackets = 0;
 135              		.loc 1 261 0
 136 0008 0023     		movs	r3, #0
 137 000a A363     		str	r3, [r4, #56]
 262:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.NumberOfReleasedPackets = 0;
 138              		.loc 1 262 0
 139 000c E363     		str	r3, [r4, #60]
 263:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usRxEventOpcode = 0;
 140              		.loc 1 263 0
 141 000e 2380     		strh	r3, [r4, #0]	@ movhi
 264:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usNumberOfFreeBuffers = 0;
 142              		.loc 1 264 0
 143 0010 2386     		strh	r3, [r4, #48]	@ movhi
 265:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usSlBufferLength = 0;
 144              		.loc 1 265 0
 145 0012 6386     		strh	r3, [r4, #50]	@ movhi
 266:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usBufferSize = 0;
 146              		.loc 1 266 0
 147 0014 A386     		strh	r3, [r4, #52]	@ movhi
 267:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usRxDataPending = 0;
 148              		.loc 1 267 0
 149 0016 E386     		strh	r3, [r4, #54]	@ movhi
 268:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.slTransmitDataError = 0;
 150              		.loc 1 268 0
 151 0018 E362     		str	r3, [r4, #44]
 269:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usEventOrDataReceived = 0;
 152              		.loc 1 269 0
 153 001a 6380     		strh	r3, [r4, #2]	@ movhi
 270:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.pucReceivedData = 0;
 154              		.loc 1 270 0
 155 001c 6360     		str	r3, [r4, #4]
 156              		.loc 1 273 0
 157 001e A060     		str	r0, [r4, #8]
 274:../libraries/CC3000_Host_Driver/wlan.c **** 	
 275:../libraries/CC3000_Host_Driver/wlan.c **** 	// init spi
 276:../libraries/CC3000_Host_Driver/wlan.c **** 	SpiOpen(SpiReceiveHandler);
 158              		.loc 1 276 0
 159 0020 1B48     		ldr	r0, .L25+8
 160 0022 FFF7FEFF 		bl	SpiOpen
 161              	.LVL9:
 277:../libraries/CC3000_Host_Driver/wlan.c **** 	
 278:../libraries/CC3000_Host_Driver/wlan.c **** 	// Check the IRQ line
 279:../libraries/CC3000_Host_Driver/wlan.c **** 	ulSpiIRQState = tSLInformation.ReadWlanInterruptPin();
 162              		.loc 1 279 0
 163 0026 E169     		ldr	r1, [r4, #28]
 164 0028 8847     		blx	r1
 165              	.LVL10:
 280:../libraries/CC3000_Host_Driver/wlan.c **** 	
 281:../libraries/CC3000_Host_Driver/wlan.c **** 	// ASIC 1273 chip enable: toggle WLAN EN line
 282:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WriteWlanPin( WLAN_ENABLE );
 166              		.loc 1 282 0
 167 002a A26A     		ldr	r2, [r4, #40]
 279:../libraries/CC3000_Host_Driver/wlan.c **** 	ulSpiIRQState = tSLInformation.ReadWlanInterruptPin();
 168              		.loc 1 279 0
 169 002c 0646     		mov	r6, r0
 170              	.LVL11:
 171              		.loc 1 282 0
 172 002e 0120     		movs	r0, #1
 173              	.LVL12:
 174 0030 9047     		blx	r2
 175              	.LVL13:
 283:../libraries/CC3000_Host_Driver/wlan.c **** 	
 284:../libraries/CC3000_Host_Driver/wlan.c **** 	if (ulSpiIRQState)
 176              		.loc 1 284 0
 177 0032 06B3     		cbz	r6, .L18
 178              	.L16:
 285:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 286:../libraries/CC3000_Host_Driver/wlan.c **** 		// wait till the IRQ line goes low
 287:../libraries/CC3000_Host_Driver/wlan.c **** 		while(tSLInformation.ReadWlanInterruptPin() != 0)
 179              		.loc 1 287 0
 180 0034 E169     		ldr	r1, [r4, #28]
 181 0036 8847     		blx	r1
 182              	.LVL14:
 183 0038 0028     		cmp	r0, #0
 184 003a FBD1     		bne	.L16
 185              	.L11:
 186              	.LVL15:
 187              	.LBB4:
 188              	.LBB5:
 119:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 189              		.loc 1 119 0
 190 003c 124C     		ldr	r4, .L25
 122:../libraries/CC3000_Host_Driver/wlan.c **** 	UINT8_TO_STREAM(args, ((usPatchesAvailableAtHost) ? SL_PATCHES_REQUEST_FORCE_HOST : SL_PATCHES_REQ
 191              		.loc 1 122 0
 192 003e 0035     		adds	r5, r5, #0
 119:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 193              		.loc 1 119 0
 194 0040 A168     		ldr	r1, [r4, #8]
 195              	.LVL16:
 122:../libraries/CC3000_Host_Driver/wlan.c **** 	UINT8_TO_STREAM(args, ((usPatchesAvailableAtHost) ? SL_PATCHES_REQUEST_FORCE_HOST : SL_PATCHES_REQ
 196              		.loc 1 122 0
 197 0042 18BF     		it	ne
 198 0044 0125     		movne	r5, #1
 199              	.LVL17:
 200 0046 4D72     		strb	r5, [r1, #9]
 201              	.LVL18:
 125:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_SIMPLE_LINK_START, ptr, WLAN_SL_INIT_START_PARAMS_LEN);
 202              		.loc 1 125 0
 203 0048 0122     		movs	r2, #1
 204 004a 4FF48040 		mov	r0, #16384
 205 004e FFF7FEFF 		bl	hci_command_send
 206              	.LVL19:
 127:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_SIMPLE_LINK_START, 0);
 207              		.loc 1 127 0
 208 0052 0021     		movs	r1, #0
 209 0054 4FF48040 		mov	r0, #16384
 210 0058 FFF7FEFF 		bl	SimpleLinkWaitEvent
 211              	.LVL20:
 212              	.LBE5:
 213              	.LBE4:
 288:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 289:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 290:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 291:../libraries/CC3000_Host_Driver/wlan.c **** 	else
 292:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 293:../libraries/CC3000_Host_Driver/wlan.c **** 		// wait till the IRQ line goes high and than low
 294:../libraries/CC3000_Host_Driver/wlan.c **** 		while(tSLInformation.ReadWlanInterruptPin() == 0)
 295:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 296:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 297:../libraries/CC3000_Host_Driver/wlan.c **** 		
 298:../libraries/CC3000_Host_Driver/wlan.c **** 		while(tSLInformation.ReadWlanInterruptPin() != 0)
 299:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 300:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 301:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 302:../libraries/CC3000_Host_Driver/wlan.c **** 	
 303:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLink_Init_Start(usPatchesAvailableAtHost);
 304:../libraries/CC3000_Host_Driver/wlan.c **** 	
 305:../libraries/CC3000_Host_Driver/wlan.c **** 	// Read Buffer's size and finish
 306:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_READ_BUFFER_SIZE, tSLInformation.pucTxCommandBuffer, 0);
 214              		.loc 1 306 0
 215 005c A168     		ldr	r1, [r4, #8]
 216 005e 0022     		movs	r2, #0
 217 0060 44F20B00 		movw	r0, #16395
 218 0064 FFF7FEFF 		bl	hci_command_send
 219              	.LVL21:
 307:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_READ_BUFFER_SIZE, 0);
 220              		.loc 1 307 0
 221 0068 44F20B00 		movw	r0, #16395
 222 006c 0021     		movs	r1, #0
 308:../libraries/CC3000_Host_Driver/wlan.c **** }
 223              		.loc 1 308 0
 224 006e BDE87040 		pop	{r4, r5, r6, lr}
 307:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_READ_BUFFER_SIZE, 0);
 225              		.loc 1 307 0
 226 0072 FFF7FEBF 		b	SimpleLinkWaitEvent
 227              	.LVL22:
 228              	.L18:
 294:../libraries/CC3000_Host_Driver/wlan.c **** 		while(tSLInformation.ReadWlanInterruptPin() == 0)
 229              		.loc 1 294 0
 230 0076 E369     		ldr	r3, [r4, #28]
 231 0078 9847     		blx	r3
 232              	.LVL23:
 233 007a 0028     		cmp	r0, #0
 234 007c FBD0     		beq	.L18
 235              	.L17:
 298:../libraries/CC3000_Host_Driver/wlan.c **** 		while(tSLInformation.ReadWlanInterruptPin() != 0)
 236              		.loc 1 298 0
 237 007e E069     		ldr	r0, [r4, #28]
 238 0080 8047     		blx	r0
 239              	.LVL24:
 240 0082 0028     		cmp	r0, #0
 241 0084 FBD1     		bne	.L17
 242 0086 D9E7     		b	.L11
 243              	.L26:
 244              		.align	2
 245              	.L25:
 246 0088 00000000 		.word	tSLInformation
 247 008c 00000000 		.word	wlan_tx_buffer
 248 0090 00000000 		.word	SpiReceiveHandler
 249              		.cfi_endproc
 250              	.LFE59:
 252              		.section	.text.wlan_stop,"ax",%progbits
 253              		.align	1
 254              		.global	wlan_stop
 255              		.thumb
 256              		.thumb_func
 258              	wlan_stop:
 259              	.LFB60:
 309:../libraries/CC3000_Host_Driver/wlan.c **** 
 310:../libraries/CC3000_Host_Driver/wlan.c **** 
 311:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 312:../libraries/CC3000_Host_Driver/wlan.c **** //
 313:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_stop
 314:../libraries/CC3000_Host_Driver/wlan.c **** //!
 315:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param         none
 316:../libraries/CC3000_Host_Driver/wlan.c **** //!
 317:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return        none
 318:../libraries/CC3000_Host_Driver/wlan.c **** //!
 319:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief         Stop WLAN device by putting it into reset state.
 320:../libraries/CC3000_Host_Driver/wlan.c **** //!
 321:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa            wlan_start
 322:../libraries/CC3000_Host_Driver/wlan.c **** //
 323:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 324:../libraries/CC3000_Host_Driver/wlan.c **** 
 325:../libraries/CC3000_Host_Driver/wlan.c **** void
 326:../libraries/CC3000_Host_Driver/wlan.c **** wlan_stop(void)
 327:../libraries/CC3000_Host_Driver/wlan.c **** {
 260              		.loc 1 327 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 38B5     		push	{r3, r4, r5, lr}
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 16
 267              		.cfi_offset 3, -16
 268              		.cfi_offset 4, -12
 269              		.cfi_offset 5, -8
 270              		.cfi_offset 14, -4
 328:../libraries/CC3000_Host_Driver/wlan.c **** 	// ASIC 1273 chip disable
 329:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WriteWlanPin( WLAN_DISABLE );
 271              		.loc 1 329 0
 272 0002 094C     		ldr	r4, .L37
 273 0004 0020     		movs	r0, #0
 274 0006 A36A     		ldr	r3, [r4, #40]
 275 0008 9847     		blx	r3
 276              	.LVL25:
 277 000a 2546     		mov	r5, r4
 278              	.L28:
 330:../libraries/CC3000_Host_Driver/wlan.c **** 	
 331:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait till IRQ line goes high...
 332:../libraries/CC3000_Host_Driver/wlan.c **** 	while(tSLInformation.ReadWlanInterruptPin() == 0)
 279              		.loc 1 332 0 discriminator 1
 280 000c E869     		ldr	r0, [r5, #28]
 281 000e 064C     		ldr	r4, .L37
 282 0010 8047     		blx	r0
 283              	.LVL26:
 284 0012 0028     		cmp	r0, #0
 285 0014 FAD0     		beq	.L28
 333:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 334:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 335:../libraries/CC3000_Host_Driver/wlan.c **** 	
 336:../libraries/CC3000_Host_Driver/wlan.c **** 	// Free the used by WLAN Driver memory
 337:../libraries/CC3000_Host_Driver/wlan.c **** 	if (tSLInformation.pucTxCommandBuffer)
 286              		.loc 1 337 0
 287 0016 A168     		ldr	r1, [r4, #8]
 288 0018 09B1     		cbz	r1, .L29
 338:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 339:../libraries/CC3000_Host_Driver/wlan.c **** 		tSLInformation.pucTxCommandBuffer = 0;
 289              		.loc 1 339 0
 290 001a 0022     		movs	r2, #0
 291 001c A260     		str	r2, [r4, #8]
 292              	.L29:
 340:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 341:../libraries/CC3000_Host_Driver/wlan.c **** 	
 342:../libraries/CC3000_Host_Driver/wlan.c **** 	SpiClose();
 343:../libraries/CC3000_Host_Driver/wlan.c **** }
 293              		.loc 1 343 0
 294 001e BDE83840 		pop	{r3, r4, r5, lr}
 342:../libraries/CC3000_Host_Driver/wlan.c **** 	SpiClose();
 295              		.loc 1 342 0
 296 0022 FFF7FEBF 		b	SpiClose
 297              	.LVL27:
 298              	.L38:
 299 0026 00BF     		.align	2
 300              	.L37:
 301 0028 00000000 		.word	tSLInformation
 302              		.cfi_endproc
 303              	.LFE60:
 305              		.section	.text.wlan_connect,"ax",%progbits
 306              		.align	1
 307              		.global	wlan_connect
 308              		.thumb
 309              		.thumb_func
 311              	wlan_connect:
 312              	.LFB61:
 344:../libraries/CC3000_Host_Driver/wlan.c **** 
 345:../libraries/CC3000_Host_Driver/wlan.c **** 
 346:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 347:../libraries/CC3000_Host_Driver/wlan.c **** //
 348:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_connect
 349:../libraries/CC3000_Host_Driver/wlan.c **** //!
 350:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sec_type   security options:
 351:../libraries/CC3000_Host_Driver/wlan.c **** //!               WLAN_SEC_UNSEC, 
 352:../libraries/CC3000_Host_Driver/wlan.c **** //!               WLAN_SEC_WEP (ASCII support only),
 353:../libraries/CC3000_Host_Driver/wlan.c **** //!               WLAN_SEC_WPA or WLAN_SEC_WPA2
 354:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ssid       up to 32 bytes and is ASCII SSID of the AP
 355:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ssid_len   length of the SSID
 356:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    bssid      6 bytes specified the AP bssid
 357:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    key        up to 16 bytes specified the AP security key
 358:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    key_len    key length 
 359:../libraries/CC3000_Host_Driver/wlan.c **** //!
 360:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return     On success, zero is returned. On error, negative is returned. 
 361:../libraries/CC3000_Host_Driver/wlan.c **** //!              Note that even though a zero is returned on success to trigger
 362:../libraries/CC3000_Host_Driver/wlan.c **** //!              connection operation, it does not mean that CCC3000 is already
 363:../libraries/CC3000_Host_Driver/wlan.c **** //!              connected. An asynchronous "Connected" event is generated when 
 364:../libraries/CC3000_Host_Driver/wlan.c **** //!              actual association process finishes and CC3000 is connected to
 365:../libraries/CC3000_Host_Driver/wlan.c **** //!              the AP. If DHCP is set, An asynchronous "DHCP" event is 
 366:../libraries/CC3000_Host_Driver/wlan.c **** //!              generated when DHCP process is finish.
 367:../libraries/CC3000_Host_Driver/wlan.c **** //!              
 368:../libraries/CC3000_Host_Driver/wlan.c **** //!
 369:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief      Connect to AP
 370:../libraries/CC3000_Host_Driver/wlan.c **** //!  @warning    Please Note that when connection to AP configured with security
 371:../libraries/CC3000_Host_Driver/wlan.c **** //!              type WEP, please confirm that the key is set as ASCII and not
 372:../libraries/CC3000_Host_Driver/wlan.c **** //!              as HEX.
 373:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa         wlan_disconnect
 374:../libraries/CC3000_Host_Driver/wlan.c **** //
 375:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 376:../libraries/CC3000_Host_Driver/wlan.c ****   
 377:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_TINY_DRIVER
 378:../libraries/CC3000_Host_Driver/wlan.c **** long
 379:../libraries/CC3000_Host_Driver/wlan.c **** wlan_connect(unsigned long ulSecType, char *ssid, long ssid_len,
 380:../libraries/CC3000_Host_Driver/wlan.c ****              unsigned char *bssid, unsigned char *key, long key_len)
 381:../libraries/CC3000_Host_Driver/wlan.c **** {
 313              		.loc 1 381 0
 314              		.cfi_startproc
 315              		@ args = 8, pretend = 0, frame = 16
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              	.LVL28:
 318 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 319              	.LCFI3:
 320              		.cfi_def_cfa_offset 36
 321              		.cfi_offset 4, -36
 322              		.cfi_offset 5, -32
 323              		.cfi_offset 6, -28
 324              		.cfi_offset 7, -24
 325              		.cfi_offset 8, -20
 326              		.cfi_offset 9, -16
 327              		.cfi_offset 10, -12
 328              		.cfi_offset 11, -8
 329              		.cfi_offset 14, -4
 330 0004 8346     		mov	fp, r0
 382:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 383:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 384:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 385:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char bssid_zero[] = {0, 0, 0, 0, 0, 0};
 386:../libraries/CC3000_Host_Driver/wlan.c **** 	
 387:../libraries/CC3000_Host_Driver/wlan.c **** 	ret  	= EFAIL;
 388:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr  	= tSLInformation.pucTxCommandBuffer;
 331              		.loc 1 388 0
 332 0006 2F48     		ldr	r0, .L56
 333              	.LVL29:
 381:../libraries/CC3000_Host_Driver/wlan.c **** {
 334              		.loc 1 381 0
 335 0008 85B0     		sub	sp, sp, #20
 336              	.LCFI4:
 337              		.cfi_def_cfa_offset 56
 338              		.loc 1 388 0
 339 000a D0F80890 		ldr	r9, [r0, #8]
 340              	.LVL30:
 381:../libraries/CC3000_Host_Driver/wlan.c **** {
 341              		.loc 1 381 0
 342 000e 1446     		mov	r4, r2
 385:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char bssid_zero[] = {0, 0, 0, 0, 0, 0};
 343              		.loc 1 385 0
 344 0010 0025     		movs	r5, #0
 381:../libraries/CC3000_Host_Driver/wlan.c **** {
 345              		.loc 1 381 0
 346 0012 9A46     		mov	sl, r3
 347 0014 8846     		mov	r8, r1
 387:../libraries/CC3000_Host_Driver/wlan.c **** 	ret  	= EFAIL;
 348              		.loc 1 387 0
 349 0016 4FF0FF33 		mov	r3, #-1
 350              	.LVL31:
 389:../libraries/CC3000_Host_Driver/wlan.c **** 	args 	= (ptr + HEADERS_SIZE_CMD);
 390:../libraries/CC3000_Host_Driver/wlan.c **** 	
 391:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in command buffer
 392:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0x0000001c);
 351              		.loc 1 392 0
 352 001a 1C21     		movs	r1, #28
 353              	.LVL32:
 354 001c 09F10900 		add	r0, r9, #9
 355              	.LVL33:
 387:../libraries/CC3000_Host_Driver/wlan.c **** 	ret  	= EFAIL;
 356              		.loc 1 387 0
 357 0020 0193     		str	r3, [sp, #4]
 358              	.LVL34:
 381:../libraries/CC3000_Host_Driver/wlan.c **** {
 359              		.loc 1 381 0
 360 0022 0F9E     		ldr	r6, [sp, #60]
 361 0024 0E9F     		ldr	r7, [sp, #56]
 385:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char bssid_zero[] = {0, 0, 0, 0, 0, 0};
 362              		.loc 1 385 0
 363 0026 0295     		str	r5, [sp, #8]
 364 0028 ADF80C50 		strh	r5, [sp, #12]	@ movhi
 365              		.loc 1 392 0
 366 002c FFF7FEFF 		bl	UINT32_TO_STREAM_f
 367              	.LVL35:
 393:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ssid_len);
 368              		.loc 1 393 0
 369 0030 2146     		mov	r1, r4
 370 0032 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 371              	.LVL36:
 394:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulSecType);
 372              		.loc 1 394 0
 373 0036 5946     		mov	r1, fp
 374 0038 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 375              	.LVL37:
 395:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0x00000010 + ssid_len);
 376              		.loc 1 395 0
 377 003c 04F11001 		add	r1, r4, #16
 378 0040 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 379              	.LVL38:
 396:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, key_len);
 380              		.loc 1 396 0
 381 0044 3146     		mov	r1, r6
 382 0046 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 383              	.LVL39:
 397:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT16_TO_STREAM(args, 0);
 384              		.loc 1 397 0
 385 004a 2946     		mov	r1, r5
 386 004c FFF7FEFF 		bl	UINT16_TO_STREAM_f
 387              	.LVL40:
 398:../libraries/CC3000_Host_Driver/wlan.c **** 	
 399:../libraries/CC3000_Host_Driver/wlan.c **** 	// padding shall be zeroed
 400:../libraries/CC3000_Host_Driver/wlan.c **** 	if(bssid)
 388              		.loc 1 400 0
 389 0050 BAF1000F 		cmp	sl, #0
 390 0054 08D0     		beq	.L49
 391              	.LVL41:
 392              	.L41:
 393              	.LBB6:
 401:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 402:../libraries/CC3000_Host_Driver/wlan.c **** 		ARRAY_TO_STREAM(args, bssid, ETH_ALEN);
 394              		.loc 1 402 0 discriminator 2
 395 0056 1AF80520 		ldrb	r2, [sl, r5]	@ zero_extendqisi2
 396 005a 4255     		strb	r2, [r0, r5]
 397              	.LVL42:
 398 005c 0135     		adds	r5, r5, #1
 399 005e 062D     		cmp	r5, #6
 400 0060 F9D1     		bne	.L41
 401              	.L54:
 402 0062 0630     		adds	r0, r0, #6
 403              	.LBE6:
 400:../libraries/CC3000_Host_Driver/wlan.c **** 	if(bssid)
 404              		.loc 1 400 0
 405 0064 0022     		movs	r2, #0
 406 0066 07E0     		b	.L42
 407              	.LVL43:
 408              	.L49:
 409 0068 5346     		mov	r3, sl
 410              	.LVL44:
 411              	.L40:
 412              	.LBB7:
 403:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 404:../libraries/CC3000_Host_Driver/wlan.c **** 	else
 405:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 406:../libraries/CC3000_Host_Driver/wlan.c **** 		ARRAY_TO_STREAM(args, bssid_zero, ETH_ALEN);
 413              		.loc 1 406 0 discriminator 2
 414 006a 02AA     		add	r2, sp, #8
 415 006c 995C     		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 416 006e C154     		strb	r1, [r0, r3]
 417              	.LVL45:
 418 0070 0133     		adds	r3, r3, #1
 419 0072 062B     		cmp	r3, #6
 420 0074 F9D1     		bne	.L40
 421 0076 F4E7     		b	.L54
 422              	.L42:
 423              	.LBE7:
 424              	.LBB8:
 407:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 408:../libraries/CC3000_Host_Driver/wlan.c **** 	
 409:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, ssid, ssid_len);
 425              		.loc 1 409 0 discriminator 1
 426 0078 A242     		cmp	r2, r4
 427 007a 04DA     		bge	.L55
 428              	.L44:
 429              		.loc 1 409 0 is_stmt 0 discriminator 2
 430 007c 18F80210 		ldrb	r1, [r8, r2]	@ zero_extendqisi2
 431 0080 8154     		strb	r1, [r0, r2]
 432 0082 0132     		adds	r2, r2, #1
 433 0084 F8E7     		b	.L42
 434              	.L55:
 435 0086 002C     		cmp	r4, #0
 436 0088 A8BF     		it	ge
 437 008a 0019     		addge	r0, r0, r4
 438              	.LBE8:
 410:../libraries/CC3000_Host_Driver/wlan.c **** 	
 411:../libraries/CC3000_Host_Driver/wlan.c **** 	if(key_len && key)
 439              		.loc 1 411 0 is_stmt 1
 440 008c 3EB1     		cbz	r6, .L47
 441              		.loc 1 411 0 is_stmt 0 discriminator 1
 442 008e 0023     		movs	r3, #0
 443 0090 2FB1     		cbz	r7, .L47
 444              	.L46:
 445              	.LBB9:
 412:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 413:../libraries/CC3000_Host_Driver/wlan.c **** 		ARRAY_TO_STREAM(args, key, key_len);
 446              		.loc 1 413 0 is_stmt 1 discriminator 1
 447 0092 B342     		cmp	r3, r6
 448 0094 03DA     		bge	.L47
 449              	.L48:
 450              		.loc 1 413 0 is_stmt 0 discriminator 2
 451 0096 FA5C     		ldrb	r2, [r7, r3]	@ zero_extendqisi2
 452 0098 C254     		strb	r2, [r0, r3]
 453 009a 0133     		adds	r3, r3, #1
 454 009c F9E7     		b	.L46
 455              	.L47:
 456              	.LBE9:
 414:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 415:../libraries/CC3000_Host_Driver/wlan.c **** 	
 416:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 417:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_CONNECT, ptr, WLAN_CONNECT_PARAM_LEN + 
 457              		.loc 1 417 0 is_stmt 1
 458 009e 1C34     		adds	r4, r4, #28
 459              	.LVL46:
 460 00a0 A319     		adds	r3, r4, r6
 461 00a2 DAB2     		uxtb	r2, r3
 462 00a4 4946     		mov	r1, r9
 463 00a6 0120     		movs	r0, #1
 464 00a8 FFF7FEFF 		bl	hci_command_send
 465              	.LVL47:
 418:../libraries/CC3000_Host_Driver/wlan.c **** 									 ssid_len + key_len - 1);
 419:../libraries/CC3000_Host_Driver/wlan.c **** 	
 420:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 421:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_CONNECT, &ret);
 466              		.loc 1 421 0
 467 00ac 01A9     		add	r1, sp, #4
 468 00ae 0120     		movs	r0, #1
 469 00b0 FFF7FEFF 		bl	SimpleLinkWaitEvent
 470              	.LVL48:
 422:../libraries/CC3000_Host_Driver/wlan.c **** 	errno = ret;
 471              		.loc 1 422 0
 472 00b4 FFF7FEFF 		bl	__errno
 473              	.LVL49:
 474 00b8 0199     		ldr	r1, [sp, #4]
 475 00ba 0160     		str	r1, [r0, #0]
 423:../libraries/CC3000_Host_Driver/wlan.c **** 	
 424:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 425:../libraries/CC3000_Host_Driver/wlan.c **** }
 476              		.loc 1 425 0
 477 00bc 0846     		mov	r0, r1
 478 00be 05B0     		add	sp, sp, #20
 479 00c0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 480              	.L57:
 481              		.align	2
 482              	.L56:
 483 00c4 00000000 		.word	tSLInformation
 484              		.cfi_endproc
 485              	.LFE61:
 487              		.section	.text.wlan_disconnect,"ax",%progbits
 488              		.align	1
 489              		.global	wlan_disconnect
 490              		.thumb
 491              		.thumb_func
 493              	wlan_disconnect:
 494              	.LFB62:
 426:../libraries/CC3000_Host_Driver/wlan.c **** #else
 427:../libraries/CC3000_Host_Driver/wlan.c **** long
 428:../libraries/CC3000_Host_Driver/wlan.c **** wlan_connect(char *ssid, long ssid_len)
 429:../libraries/CC3000_Host_Driver/wlan.c **** {
 430:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 431:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 432:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 433:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char bssid_zero[] = {0, 0, 0, 0, 0, 0};
 434:../libraries/CC3000_Host_Driver/wlan.c **** 	
 435:../libraries/CC3000_Host_Driver/wlan.c **** 	ret  	= EFAIL;
 436:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr  	= tSLInformation.pucTxCommandBuffer;
 437:../libraries/CC3000_Host_Driver/wlan.c **** 	args 	= (ptr + HEADERS_SIZE_CMD);
 438:../libraries/CC3000_Host_Driver/wlan.c **** 	
 439:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in command buffer
 440:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0x0000001c);
 441:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ssid_len);
 442:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0);
 443:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0x00000010 + ssid_len);
 444:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0);
 445:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT16_TO_STREAM(args, 0);
 446:../libraries/CC3000_Host_Driver/wlan.c **** 	
 447:../libraries/CC3000_Host_Driver/wlan.c **** 	// padding shall be zeroed
 448:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, bssid_zero, ETH_ALEN);
 449:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, ssid, ssid_len);
 450:../libraries/CC3000_Host_Driver/wlan.c **** 	
 451:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 452:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_CONNECT, ptr, WLAN_CONNECT_PARAM_LEN + 
 453:../libraries/CC3000_Host_Driver/wlan.c **** 									 ssid_len  - 1);
 454:../libraries/CC3000_Host_Driver/wlan.c **** 	
 455:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 456:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_CONNECT, &ret);
 457:../libraries/CC3000_Host_Driver/wlan.c **** 	errno = ret;
 458:../libraries/CC3000_Host_Driver/wlan.c **** 	
 459:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 460:../libraries/CC3000_Host_Driver/wlan.c **** }
 461:../libraries/CC3000_Host_Driver/wlan.c **** #endif
 462:../libraries/CC3000_Host_Driver/wlan.c **** 
 463:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 464:../libraries/CC3000_Host_Driver/wlan.c **** //
 465:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_disconnect
 466:../libraries/CC3000_Host_Driver/wlan.c **** //!
 467:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    0 disconnected done, other CC3000 already disconnected            
 468:../libraries/CC3000_Host_Driver/wlan.c **** //!
 469:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief      Disconnect connection from AP. 
 470:../libraries/CC3000_Host_Driver/wlan.c **** //!
 471:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa         wlan_connect
 472:../libraries/CC3000_Host_Driver/wlan.c **** //
 473:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 474:../libraries/CC3000_Host_Driver/wlan.c **** 
 475:../libraries/CC3000_Host_Driver/wlan.c **** long
 476:../libraries/CC3000_Host_Driver/wlan.c **** wlan_disconnect()
 477:../libraries/CC3000_Host_Driver/wlan.c **** {
 495              		.loc 1 477 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 8
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 13B5     		push	{r0, r1, r4, lr}
 500              	.LCFI5:
 501              		.cfi_def_cfa_offset 16
 502              		.cfi_offset 0, -16
 503              		.cfi_offset 1, -12
 504              		.cfi_offset 4, -8
 505              		.cfi_offset 14, -4
 478:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 479:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 480:../libraries/CC3000_Host_Driver/wlan.c **** 	
 481:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 482:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 506              		.loc 1 482 0
 507 0002 0A48     		ldr	r0, .L59
 481:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 508              		.loc 1 481 0
 509 0004 4FF0FF33 		mov	r3, #-1
 510 0008 02AC     		add	r4, sp, #8
 511 000a 44F8043D 		str	r3, [r4, #-4]!
 512              	.LVL50:
 483:../libraries/CC3000_Host_Driver/wlan.c **** 	
 484:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_DISCONNECT, ptr, 0);
 513              		.loc 1 484 0
 514 000e 0022     		movs	r2, #0
 482:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 515              		.loc 1 482 0
 516 0010 8168     		ldr	r1, [r0, #8]
 517              	.LVL51:
 518              		.loc 1 484 0
 519 0012 0220     		movs	r0, #2
 520 0014 FFF7FEFF 		bl	hci_command_send
 521              	.LVL52:
 485:../libraries/CC3000_Host_Driver/wlan.c **** 	
 486:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 487:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_DISCONNECT, &ret);
 522              		.loc 1 487 0
 523 0018 2146     		mov	r1, r4
 524 001a 0220     		movs	r0, #2
 525 001c FFF7FEFF 		bl	SimpleLinkWaitEvent
 526              	.LVL53:
 488:../libraries/CC3000_Host_Driver/wlan.c **** 	errno = ret;
 527              		.loc 1 488 0
 528 0020 FFF7FEFF 		bl	__errno
 529              	.LVL54:
 530 0024 0199     		ldr	r1, [sp, #4]
 531 0026 0160     		str	r1, [r0, #0]
 489:../libraries/CC3000_Host_Driver/wlan.c **** 	
 490:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 491:../libraries/CC3000_Host_Driver/wlan.c **** }
 532              		.loc 1 491 0
 533 0028 0846     		mov	r0, r1
 534 002a 1CBD     		pop	{r2, r3, r4, pc}
 535              	.L60:
 536              		.align	2
 537              	.L59:
 538 002c 00000000 		.word	tSLInformation
 539              		.cfi_endproc
 540              	.LFE62:
 542              		.section	.text.wlan_ioctl_set_connection_policy,"ax",%progbits
 543              		.align	1
 544              		.global	wlan_ioctl_set_connection_policy
 545              		.thumb
 546              		.thumb_func
 548              	wlan_ioctl_set_connection_policy:
 549              	.LFB63:
 492:../libraries/CC3000_Host_Driver/wlan.c **** 
 493:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 494:../libraries/CC3000_Host_Driver/wlan.c **** //
 495:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_ioctl_set_connection_policy
 496:../libraries/CC3000_Host_Driver/wlan.c **** //!
 497:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    should_connect_to_open_ap  enable(1), disable(0) connect to any 
 498:../libraries/CC3000_Host_Driver/wlan.c **** //!            available AP. This parameter corresponds to the configuration of 
 499:../libraries/CC3000_Host_Driver/wlan.c **** //!            item # 3 in the brief description.
 500:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    should_use_fast_connect enable(1), disable(0). if enabled, tries 
 501:../libraries/CC3000_Host_Driver/wlan.c **** //!            to connect to the last connected AP. This parameter corresponds 
 502:../libraries/CC3000_Host_Driver/wlan.c **** //!            to the configuration of item # 1 in the brief description.
 503:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    auto_start enable(1), disable(0) auto connect 
 504:../libraries/CC3000_Host_Driver/wlan.c **** //!            after reset and periodically reconnect if needed. This 
 505:../libraries/CC3000_Host_Driver/wlan.c **** //!       	   configuration configures option 2 in the above description.
 506:../libraries/CC3000_Host_Driver/wlan.c **** //!
 507:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return     On success, zero is returned. On error, -1 is returned        
 508:../libraries/CC3000_Host_Driver/wlan.c **** //!
 509:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief      When auto is enabled, the device tries to connect according 
 510:../libraries/CC3000_Host_Driver/wlan.c **** //!              the following policy:
 511:../libraries/CC3000_Host_Driver/wlan.c **** //!              1) If fast connect is enabled and last connection is valid, 
 512:../libraries/CC3000_Host_Driver/wlan.c **** //!                 the device will try to connect to it without the scanning 
 513:../libraries/CC3000_Host_Driver/wlan.c **** //!                 procedure (fast). The last connection will be marked as
 514:../libraries/CC3000_Host_Driver/wlan.c **** //!                 invalid, due to adding/removing profile. 
 515:../libraries/CC3000_Host_Driver/wlan.c **** //!              2) If profile exists, the device will try to connect it 
 516:../libraries/CC3000_Host_Driver/wlan.c **** //!                 (Up to seven profiles).
 517:../libraries/CC3000_Host_Driver/wlan.c **** //!              3) If fast and profiles are not found, and open mode is
 518:../libraries/CC3000_Host_Driver/wlan.c **** //!                 enabled, the device will try to connect to any AP.
 519:../libraries/CC3000_Host_Driver/wlan.c **** //!              * Note that the policy settings are stored in the CC3000 NVMEM.
 520:../libraries/CC3000_Host_Driver/wlan.c **** //!
 521:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa         wlan_add_profile , wlan_ioctl_del_profile 
 522:../libraries/CC3000_Host_Driver/wlan.c **** //
 523:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 524:../libraries/CC3000_Host_Driver/wlan.c **** 
 525:../libraries/CC3000_Host_Driver/wlan.c **** long
 526:../libraries/CC3000_Host_Driver/wlan.c **** wlan_ioctl_set_connection_policy(unsigned long should_connect_to_open_ap, 
 527:../libraries/CC3000_Host_Driver/wlan.c ****                                  unsigned long ulShouldUseFastConnect,
 528:../libraries/CC3000_Host_Driver/wlan.c ****                                  unsigned long ulUseProfiles)
 529:../libraries/CC3000_Host_Driver/wlan.c **** {
 550              		.loc 1 529 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 8
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              	.LVL55:
 555 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 556              	.LCFI6:
 557              		.cfi_def_cfa_offset 32
 558              		.cfi_offset 0, -32
 559              		.cfi_offset 1, -28
 560              		.cfi_offset 2, -24
 561              		.cfi_offset 4, -20
 562              		.cfi_offset 5, -16
 563              		.cfi_offset 6, -12
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566              		.loc 1 529 0
 567 0002 0346     		mov	r3, r0
 530:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 531:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 532:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 533:../libraries/CC3000_Host_Driver/wlan.c **** 	
 534:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 535:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 568              		.loc 1 535 0
 569 0004 0F48     		ldr	r0, .L62
 570              	.LVL56:
 529:../libraries/CC3000_Host_Driver/wlan.c **** {
 571              		.loc 1 529 0
 572 0006 0E46     		mov	r6, r1
 573              		.loc 1 535 0
 574 0008 8568     		ldr	r5, [r0, #8]
 575              	.LVL57:
 536:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (unsigned char *)(ptr + HEADERS_SIZE_CMD);
 537:../libraries/CC3000_Host_Driver/wlan.c **** 	
 538:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in HCI packet structure
 539:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, should_connect_to_open_ap);
 576              		.loc 1 539 0
 577 000a 1946     		mov	r1, r3
 578              	.LVL58:
 529:../libraries/CC3000_Host_Driver/wlan.c **** {
 579              		.loc 1 529 0
 580 000c 1746     		mov	r7, r2
 534:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 581              		.loc 1 534 0
 582 000e 02AC     		add	r4, sp, #8
 583 0010 4FF0FF32 		mov	r2, #-1
 584              	.LVL59:
 585              		.loc 1 539 0
 586 0014 05F10900 		add	r0, r5, #9
 587              	.LVL60:
 534:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 588              		.loc 1 534 0
 589 0018 44F8042D 		str	r2, [r4, #-4]!
 590              	.LVL61:
 591              		.loc 1 539 0
 592 001c FFF7FEFF 		bl	UINT32_TO_STREAM_f
 593              	.LVL62:
 540:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulShouldUseFastConnect);
 594              		.loc 1 540 0
 595 0020 3146     		mov	r1, r6
 596 0022 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 597              	.LVL63:
 541:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulUseProfiles);
 598              		.loc 1 541 0
 599 0026 3946     		mov	r1, r7
 600 0028 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 601              	.LVL64:
 542:../libraries/CC3000_Host_Driver/wlan.c **** 	
 543:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 544:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_SET_CONNECTION_POLICY,
 602              		.loc 1 544 0
 603 002c 2946     		mov	r1, r5
 604 002e 0C22     		movs	r2, #12
 605 0030 0420     		movs	r0, #4
 606 0032 FFF7FEFF 		bl	hci_command_send
 607              	.LVL65:
 545:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, WLAN_SET_CONNECTION_POLICY_PARAMS_LEN);
 546:../libraries/CC3000_Host_Driver/wlan.c **** 	
 547:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 548:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_SET_CONNECTION_POLICY, &ret);
 608              		.loc 1 548 0
 609 0036 0420     		movs	r0, #4
 610 0038 2146     		mov	r1, r4
 611 003a FFF7FEFF 		bl	SimpleLinkWaitEvent
 612              	.LVL66:
 549:../libraries/CC3000_Host_Driver/wlan.c **** 	
 550:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 551:../libraries/CC3000_Host_Driver/wlan.c **** }
 613              		.loc 1 551 0
 614 003e 0198     		ldr	r0, [sp, #4]
 615 0040 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 616              	.L63:
 617 0042 00BF     		.align	2
 618              	.L62:
 619 0044 00000000 		.word	tSLInformation
 620              		.cfi_endproc
 621              	.LFE63:
 623              		.section	.text.wlan_add_profile,"ax",%progbits
 624              		.align	1
 625              		.global	wlan_add_profile
 626              		.thumb
 627              		.thumb_func
 629              	wlan_add_profile:
 630              	.LFB64:
 552:../libraries/CC3000_Host_Driver/wlan.c **** 
 553:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 554:../libraries/CC3000_Host_Driver/wlan.c **** //
 555:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_add_profile
 556:../libraries/CC3000_Host_Driver/wlan.c **** //!
 557:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulSecType  WLAN_SEC_UNSEC,WLAN_SEC_WEP,WLAN_SEC_WPA,WLAN_SEC_WPA2
 558:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ucSsid    ssid  SSID up to 32 bytes
 559:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulSsidLen ssid length
 560:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ucBssid   bssid  6 bytes
 561:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulPriority ulPriority profile priority. Lowest priority:0.
 562:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulPairwiseCipher_Or_TxKeyLen  key length for WEP security
 563:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulGroupCipher_TxKeyIndex  key index
 564:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulKeyMgmt        KEY management 
 565:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ucPf_OrKey       security key
 566:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulPassPhraseLen  security key length for WPA\WPA2
 567:../libraries/CC3000_Host_Driver/wlan.c **** //!
 568:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    On success, zero is returned. On error, -1 is returned        
 569:../libraries/CC3000_Host_Driver/wlan.c **** //!
 570:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief     When auto start is enabled, the device connects to
 571:../libraries/CC3000_Host_Driver/wlan.c **** //!             station from the profiles table. Up to 7 profiles are supported. 
 572:../libraries/CC3000_Host_Driver/wlan.c **** //!             If several profiles configured the device choose the highest 
 573:../libraries/CC3000_Host_Driver/wlan.c **** //!             priority profile, within each priority group, device will choose 
 574:../libraries/CC3000_Host_Driver/wlan.c **** //!             profile based on security policy, signal strength, etc 
 575:../libraries/CC3000_Host_Driver/wlan.c **** //!             parameters. All the profiles are stored in CC3000 NVMEM.
 576:../libraries/CC3000_Host_Driver/wlan.c **** //!
 577:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa        wlan_ioctl_del_profile 
 578:../libraries/CC3000_Host_Driver/wlan.c **** //
 579:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 580:../libraries/CC3000_Host_Driver/wlan.c **** 
 581:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_TINY_DRIVER
 582:../libraries/CC3000_Host_Driver/wlan.c **** long
 583:../libraries/CC3000_Host_Driver/wlan.c **** wlan_add_profile(unsigned long ulSecType, 
 584:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char* ucSsid,
 585:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulSsidLen, 
 586:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char *ucBssid,
 587:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPriority,
 588:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPairwiseCipher_Or_TxKeyLen,
 589:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulGroupCipher_TxKeyIndex,
 590:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulKeyMgmt,
 591:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char* ucPf_OrKey,
 592:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPassPhraseLen)
 593:../libraries/CC3000_Host_Driver/wlan.c **** {
 631              		.loc 1 593 0
 632              		.cfi_startproc
 633              		@ args = 24, pretend = 0, frame = 16
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              	.LVL67:
 636 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 637              	.LCFI7:
 638              		.cfi_def_cfa_offset 36
 639              		.cfi_offset 4, -36
 640              		.cfi_offset 5, -32
 641              		.cfi_offset 6, -28
 642              		.cfi_offset 7, -24
 643              		.cfi_offset 8, -20
 644              		.cfi_offset 9, -16
 645              		.cfi_offset 10, -12
 646              		.cfi_offset 11, -8
 647              		.cfi_offset 14, -4
 648 0004 8346     		mov	fp, r0
 594:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned short arg_len;
 595:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 596:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 597:../libraries/CC3000_Host_Driver/wlan.c **** 	long i = 0;
 598:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 599:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char bssid_zero[] = {0, 0, 0, 0, 0, 0};
 600:../libraries/CC3000_Host_Driver/wlan.c **** 	
 601:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 649              		.loc 1 601 0
 650 0006 7148     		ldr	r0, .L109
 651              	.LVL68:
 593:../libraries/CC3000_Host_Driver/wlan.c **** {
 652              		.loc 1 593 0
 653 0008 85B0     		sub	sp, sp, #20
 654              	.LCFI8:
 655              		.cfi_def_cfa_offset 56
 656              		.loc 1 601 0
 657 000a D0F80890 		ldr	r9, [r0, #8]
 658              	.LVL69:
 593:../libraries/CC3000_Host_Driver/wlan.c **** {
 659              		.loc 1 593 0
 660 000e 0D46     		mov	r5, r1
 661 0010 1446     		mov	r4, r2
 602:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (ptr + HEADERS_SIZE_CMD);
 603:../libraries/CC3000_Host_Driver/wlan.c **** 	
 604:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulSecType);
 662              		.loc 1 604 0
 663 0012 5946     		mov	r1, fp
 664              	.LVL70:
 599:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char bssid_zero[] = {0, 0, 0, 0, 0, 0};
 665              		.loc 1 599 0
 666 0014 0022     		movs	r2, #0
 667              	.LVL71:
 668              		.loc 1 604 0
 669 0016 09F10900 		add	r0, r9, #9
 670              	.LVL72:
 593:../libraries/CC3000_Host_Driver/wlan.c **** {
 671              		.loc 1 593 0
 672 001a 9A46     		mov	sl, r3
 673 001c 0E9F     		ldr	r7, [sp, #56]
 674 001e 0F9E     		ldr	r6, [sp, #60]
 599:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char bssid_zero[] = {0, 0, 0, 0, 0, 0};
 675              		.loc 1 599 0
 676 0020 0292     		str	r2, [sp, #8]
 677 0022 ADF80C20 		strh	r2, [sp, #12]	@ movhi
 678              		.loc 1 604 0
 679 0026 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 680              	.LVL73:
 605:../libraries/CC3000_Host_Driver/wlan.c **** 	
 606:../libraries/CC3000_Host_Driver/wlan.c **** 	// Setup arguments in accordance with the security type
 607:../libraries/CC3000_Host_Driver/wlan.c **** 	switch (ulSecType)
 681              		.loc 1 607 0
 682 002a BBF1030F 		cmp	fp, #3
 683 002e 00F2BE80 		bhi	.L65
 684 0032 DFE80BF0 		tbb	[pc, fp]
 685              	.L69:
 686 0036 02       		.byte	(.L66-.L69)/2
 687 0037 2F       		.byte	(.L67-.L69)/2
 688 0038 76       		.byte	(.L68-.L69)/2
 689 0039 76       		.byte	(.L68-.L69)/2
 690              		.align	1
 691              	.L66:
 608:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 609:../libraries/CC3000_Host_Driver/wlan.c **** 		//OPEN
 610:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_UNSEC:
 611:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 612:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, 0x00000014);
 692              		.loc 1 612 0
 693 003a 1421     		movs	r1, #20
 694 003c FFF7FEFF 		bl	UINT32_TO_STREAM_f
 695              	.LVL74:
 613:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulSsidLen);
 696              		.loc 1 613 0
 697 0040 2146     		mov	r1, r4
 698 0042 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 699              	.LVL75:
 614:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT16_TO_STREAM(args, 0);
 700              		.loc 1 614 0
 701 0046 0021     		movs	r1, #0
 702 0048 FFF7FEFF 		bl	UINT16_TO_STREAM_f
 703              	.LVL76:
 615:../libraries/CC3000_Host_Driver/wlan.c **** 			if(ucBssid)
 704              		.loc 1 615 0
 705 004c BAF1000F 		cmp	sl, #0
 706 0050 07D0     		beq	.L90
 707 0052 0022     		movs	r2, #0
 708              	.LVL77:
 709              	.L71:
 710              	.LBB10:
 616:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 617:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, ucBssid, ETH_ALEN);
 711              		.loc 1 617 0 discriminator 2
 712 0054 1AF80210 		ldrb	r1, [sl, r2]	@ zero_extendqisi2
 713 0058 8154     		strb	r1, [r0, r2]
 714              	.LVL78:
 715 005a 0132     		adds	r2, r2, #1
 716 005c 062A     		cmp	r2, #6
 717 005e F9D1     		bne	.L71
 718 0060 06E0     		b	.L100
 719              	.LVL79:
 720              	.L90:
 721              	.LBE10:
 615:../libraries/CC3000_Host_Driver/wlan.c **** 			if(ucBssid)
 722              		.loc 1 615 0
 723 0062 5346     		mov	r3, sl
 724              	.LVL80:
 725              	.L70:
 726              	.LBB11:
 618:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 619:../libraries/CC3000_Host_Driver/wlan.c **** 			else
 620:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 621:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, bssid_zero, ETH_ALEN);
 727              		.loc 1 621 0 discriminator 2
 728 0064 02A9     		add	r1, sp, #8
 729 0066 5A5C     		ldrb	r2, [r3, r1]	@ zero_extendqisi2
 730 0068 C254     		strb	r2, [r0, r3]
 731              	.LVL81:
 732 006a 0133     		adds	r3, r3, #1
 733 006c 062B     		cmp	r3, #6
 734 006e F9D1     		bne	.L70
 735              	.L100:
 736 0070 0630     		adds	r0, r0, #6
 737              	.LVL82:
 738              	.LBE11:
 622:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 623:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPriority);
 739              		.loc 1 623 0
 740 0072 3946     		mov	r1, r7
 741 0074 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 742              	.LVL83:
 743              	.LBB12:
 624:../libraries/CC3000_Host_Driver/wlan.c **** 			ARRAY_TO_STREAM(args, ucSsid, ulSsidLen);
 744              		.loc 1 624 0
 745 0078 4FF00008 		mov	r8, #0
 746              	.LVL84:
 747              	.L73:
 748              		.loc 1 624 0 is_stmt 0 discriminator 1
 749 007c A045     		cmp	r8, r4
 750 007e 06D0     		beq	.L104
 751              	.L74:
 752              		.loc 1 624 0 discriminator 2
 753 0080 15F80830 		ldrb	r3, [r5, r8]	@ zero_extendqisi2
 754 0084 00F80830 		strb	r3, [r0, r8]
 755 0088 08F10108 		add	r8, r8, #1
 756 008c F6E7     		b	.L73
 757              	.L104:
 758              	.LBE12:
 625:../libraries/CC3000_Host_Driver/wlan.c **** 			
 626:../libraries/CC3000_Host_Driver/wlan.c **** 			arg_len = WLAN_ADD_PROFILE_NOSEC_PARAM_LEN + ulSsidLen;
 759              		.loc 1 626 0 is_stmt 1
 760 008e 08F11800 		add	r0, r8, #24
 761 0092 8AE0     		b	.L103
 762              	.LVL85:
 763              	.L67:
 627:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 628:../libraries/CC3000_Host_Driver/wlan.c **** 		break;
 629:../libraries/CC3000_Host_Driver/wlan.c **** 		
 630:../libraries/CC3000_Host_Driver/wlan.c **** 		//WEP
 631:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WEP:
 632:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 633:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, 0x00000020);
 764              		.loc 1 633 0
 765 0094 2021     		movs	r1, #32
 766 0096 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 767              	.LVL86:
 634:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulSsidLen);
 768              		.loc 1 634 0
 769 009a 2146     		mov	r1, r4
 770 009c FFF7FEFF 		bl	UINT32_TO_STREAM_f
 771              	.LVL87:
 635:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT16_TO_STREAM(args, 0);
 772              		.loc 1 635 0
 773 00a0 0021     		movs	r1, #0
 774 00a2 FFF7FEFF 		bl	UINT16_TO_STREAM_f
 775              	.LVL88:
 636:../libraries/CC3000_Host_Driver/wlan.c **** 			if(ucBssid)
 776              		.loc 1 636 0
 777 00a6 BAF1000F 		cmp	sl, #0
 778 00aa 07D0     		beq	.L91
 779 00ac 0022     		movs	r2, #0
 780              	.LVL89:
 781              	.L76:
 782              	.LBB13:
 637:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 638:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, ucBssid, ETH_ALEN);
 783              		.loc 1 638 0 discriminator 2
 784 00ae 1AF80210 		ldrb	r1, [sl, r2]	@ zero_extendqisi2
 785 00b2 8154     		strb	r1, [r0, r2]
 786              	.LVL90:
 787 00b4 0132     		adds	r2, r2, #1
 788 00b6 062A     		cmp	r2, #6
 789 00b8 F9D1     		bne	.L76
 790 00ba 06E0     		b	.L101
 791              	.LVL91:
 792              	.L91:
 793              	.LBE13:
 636:../libraries/CC3000_Host_Driver/wlan.c **** 			if(ucBssid)
 794              		.loc 1 636 0
 795 00bc 5346     		mov	r3, sl
 796              	.LVL92:
 797              	.L75:
 798              	.LBB14:
 639:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 640:../libraries/CC3000_Host_Driver/wlan.c **** 			else
 641:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 642:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, bssid_zero, ETH_ALEN);
 799              		.loc 1 642 0 discriminator 2
 800 00be 02AA     		add	r2, sp, #8
 801 00c0 995C     		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 802 00c2 C154     		strb	r1, [r0, r3]
 803              	.LVL93:
 804 00c4 0133     		adds	r3, r3, #1
 805 00c6 062B     		cmp	r3, #6
 806 00c8 F9D1     		bne	.L75
 807              	.L101:
 808              	.LBE14:
 643:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 644:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPriority);
 809              		.loc 1 644 0
 810 00ca 3946     		mov	r1, r7
 811 00cc 0630     		adds	r0, r0, #6
 812              	.LVL94:
 813 00ce FFF7FEFF 		bl	UINT32_TO_STREAM_f
 814              	.LVL95:
 645:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, 0x0000000C + ulSsidLen);
 815              		.loc 1 645 0
 816 00d2 04F10C01 		add	r1, r4, #12
 817 00d6 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 818              	.LVL96:
 646:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPairwiseCipher_Or_TxKeyLen);
 819              		.loc 1 646 0
 820 00da 3146     		mov	r1, r6
 821 00dc FFF7FEFF 		bl	UINT32_TO_STREAM_f
 822              	.LVL97:
 647:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulGroupCipher_TxKeyIndex);
 823              		.loc 1 647 0
 824 00e0 1099     		ldr	r1, [sp, #64]
 825 00e2 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 826              	.LVL98:
 827              	.LBB15:
 648:../libraries/CC3000_Host_Driver/wlan.c **** 			ARRAY_TO_STREAM(args, ucSsid, ulSsidLen);
 828              		.loc 1 648 0
 829 00e6 0022     		movs	r2, #0
 830              	.LVL99:
 831              	.L78:
 832              		.loc 1 648 0 is_stmt 0 discriminator 1
 833 00e8 A242     		cmp	r2, r4
 834 00ea 03D0     		beq	.L105
 835              	.L79:
 836              		.loc 1 648 0 discriminator 2
 837 00ec AF5C     		ldrb	r7, [r5, r2]	@ zero_extendqisi2
 838 00ee 8754     		strb	r7, [r0, r2]
 839 00f0 0132     		adds	r2, r2, #1
 840 00f2 F9E7     		b	.L78
 841              	.L105:
 842 00f4 0019     		adds	r0, r0, r4
 843              		.loc 1 648 0
 844 00f6 0022     		movs	r2, #0
 845 00f8 0421     		movs	r1, #4
 846              	.LVL100:
 847              	.L82:
 583:../libraries/CC3000_Host_Driver/wlan.c **** wlan_add_profile(unsigned long ulSecType, 
 848              		.loc 1 583 0 is_stmt 1
 849 00fa 129D     		ldr	r5, [sp, #72]
 850 00fc 8718     		adds	r7, r0, r2
 851 00fe AD18     		adds	r5, r5, r2
 852              	.LVL101:
 853              	.LBE15:
 854              	.LBB16:
 855              	.LBB17:
 649:../libraries/CC3000_Host_Driver/wlan.c **** 			
 650:../libraries/CC3000_Host_Driver/wlan.c **** 			for(i = 0; i < 4; i++)
 651:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 652:../libraries/CC3000_Host_Driver/wlan.c **** 				unsigned char *p = &ucPf_OrKey[i * ulPairwiseCipher_Or_TxKeyLen];
 653:../libraries/CC3000_Host_Driver/wlan.c **** 				
 654:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, p, ulPairwiseCipher_Or_TxKeyLen);
 856              		.loc 1 654 0
 857 0100 0023     		movs	r3, #0
 858              	.LVL102:
 859              	.L80:
 860              		.loc 1 654 0 is_stmt 0 discriminator 1
 861 0102 B342     		cmp	r3, r6
 862 0104 05D0     		beq	.L106
 863              	.L81:
 864              		.loc 1 654 0 discriminator 2
 865 0106 15F803E0 		ldrb	lr, [r5, r3]	@ zero_extendqisi2
 866 010a 07F803E0 		strb	lr, [r7, r3]
 867 010e 0133     		adds	r3, r3, #1
 868 0110 F7E7     		b	.L80
 869              	.L106:
 870              	.LBE17:
 871              	.LBE16:
 650:../libraries/CC3000_Host_Driver/wlan.c **** 			for(i = 0; i < 4; i++)
 872              		.loc 1 650 0 is_stmt 1
 873 0112 0139     		subs	r1, r1, #1
 874 0114 1A44     		add	r2, r2, r3
 875 0116 F0D1     		bne	.L82
 655:../libraries/CC3000_Host_Driver/wlan.c **** 			}		
 656:../libraries/CC3000_Host_Driver/wlan.c **** 			
 657:../libraries/CC3000_Host_Driver/wlan.c **** 			arg_len = WLAN_ADD_PROFILE_WEP_PARAM_LEN + ulSsidLen + 
 876              		.loc 1 657 0
 877 0118 04F1240C 		add	ip, r4, #36
 878 011c 0CEB8300 		add	r0, ip, r3, lsl #2
 879 0120 43E0     		b	.L103
 880              	.LVL103:
 881              	.L68:
 658:../libraries/CC3000_Host_Driver/wlan.c **** 				ulPairwiseCipher_Or_TxKeyLen * 4;
 659:../libraries/CC3000_Host_Driver/wlan.c **** 			
 660:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 661:../libraries/CC3000_Host_Driver/wlan.c **** 		break;
 662:../libraries/CC3000_Host_Driver/wlan.c **** 		
 663:../libraries/CC3000_Host_Driver/wlan.c **** 		//WPA
 664:../libraries/CC3000_Host_Driver/wlan.c **** 		//WPA2
 665:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WPA:
 666:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WPA2:
 667:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 668:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, 0x00000028);
 882              		.loc 1 668 0
 883 0122 2821     		movs	r1, #40
 884 0124 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 885              	.LVL104:
 669:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulSsidLen);
 886              		.loc 1 669 0
 887 0128 2146     		mov	r1, r4
 888 012a FFF7FEFF 		bl	UINT32_TO_STREAM_f
 889              	.LVL105:
 670:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT16_TO_STREAM(args, 0);
 890              		.loc 1 670 0
 891 012e 0021     		movs	r1, #0
 892 0130 FFF7FEFF 		bl	UINT16_TO_STREAM_f
 893              	.LVL106:
 671:../libraries/CC3000_Host_Driver/wlan.c **** 			if(ucBssid)
 894              		.loc 1 671 0
 895 0134 BAF1000F 		cmp	sl, #0
 896 0138 07D0     		beq	.L92
 897 013a 0022     		movs	r2, #0
 898              	.LVL107:
 899              	.L84:
 900              	.LBB18:
 672:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 673:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, ucBssid, ETH_ALEN);
 901              		.loc 1 673 0 discriminator 2
 902 013c 1AF80210 		ldrb	r1, [sl, r2]	@ zero_extendqisi2
 903 0140 8154     		strb	r1, [r0, r2]
 904              	.LVL108:
 905 0142 0132     		adds	r2, r2, #1
 906 0144 062A     		cmp	r2, #6
 907 0146 F9D1     		bne	.L84
 908 0148 06E0     		b	.L102
 909              	.LVL109:
 910              	.L92:
 911              	.LBE18:
 671:../libraries/CC3000_Host_Driver/wlan.c **** 			if(ucBssid)
 912              		.loc 1 671 0
 913 014a 5346     		mov	r3, sl
 914              	.LVL110:
 915              	.L83:
 916              	.LBB19:
 674:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 675:../libraries/CC3000_Host_Driver/wlan.c **** 			else
 676:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 677:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, bssid_zero, ETH_ALEN);
 917              		.loc 1 677 0 discriminator 2
 918 014c 02A9     		add	r1, sp, #8
 919 014e 5A5C     		ldrb	r2, [r3, r1]	@ zero_extendqisi2
 920 0150 C254     		strb	r2, [r0, r3]
 921              	.LVL111:
 922 0152 0133     		adds	r3, r3, #1
 923 0154 062B     		cmp	r3, #6
 924 0156 F9D1     		bne	.L83
 925              	.L102:
 926              	.LBE19:
 678:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 679:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPriority);
 927              		.loc 1 679 0
 928 0158 3946     		mov	r1, r7
 929 015a 0630     		adds	r0, r0, #6
 930              	.LVL112:
 931 015c FFF7FEFF 		bl	UINT32_TO_STREAM_f
 932              	.LVL113:
 680:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPairwiseCipher_Or_TxKeyLen);
 933              		.loc 1 680 0
 934 0160 3146     		mov	r1, r6
 935 0162 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 936              	.LVL114:
 681:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulGroupCipher_TxKeyIndex);
 937              		.loc 1 681 0
 938 0166 1099     		ldr	r1, [sp, #64]
 939 0168 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 940              	.LVL115:
 682:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulKeyMgmt);
 941              		.loc 1 682 0
 942 016c 1199     		ldr	r1, [sp, #68]
 943 016e FFF7FEFF 		bl	UINT32_TO_STREAM_f
 944              	.LVL116:
 683:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, 0x00000008 + ulSsidLen);
 945              		.loc 1 683 0
 946 0172 04F10801 		add	r1, r4, #8
 947 0176 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 948              	.LVL117:
 684:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPassPhraseLen);
 949              		.loc 1 684 0
 950 017a 1399     		ldr	r1, [sp, #76]
 951 017c FFF7FEFF 		bl	UINT32_TO_STREAM_f
 952              	.LVL118:
 953              	.LBB20:
 685:../libraries/CC3000_Host_Driver/wlan.c **** 			ARRAY_TO_STREAM(args, ucSsid, ulSsidLen);
 954              		.loc 1 685 0
 955 0180 0021     		movs	r1, #0
 956              	.LVL119:
 957              	.L86:
 958              		.loc 1 685 0 is_stmt 0 discriminator 1
 959 0182 A142     		cmp	r1, r4
 960 0184 03D0     		beq	.L107
 961              	.L87:
 962              		.loc 1 685 0 discriminator 2
 963 0186 6A5C     		ldrb	r2, [r5, r1]	@ zero_extendqisi2
 964 0188 4254     		strb	r2, [r0, r1]
 965 018a 0131     		adds	r1, r1, #1
 966 018c F9E7     		b	.L86
 967              	.L107:
 968 018e 0019     		adds	r0, r0, r4
 969              		.loc 1 685 0
 970 0190 0023     		movs	r3, #0
 971              	.L88:
 972              	.LBE20:
 973              	.LBB21:
 686:../libraries/CC3000_Host_Driver/wlan.c **** 			ARRAY_TO_STREAM(args, ucPf_OrKey, ulPassPhraseLen);
 974              		.loc 1 686 0 is_stmt 1 discriminator 1
 975 0192 1399     		ldr	r1, [sp, #76]
 976 0194 8B42     		cmp	r3, r1
 977 0196 04D0     		beq	.L108
 978              	.L89:
 979              		.loc 1 686 0 is_stmt 0 discriminator 2
 980 0198 129A     		ldr	r2, [sp, #72]
 981 019a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 982 019c C154     		strb	r1, [r0, r3]
 983 019e 0133     		adds	r3, r3, #1
 984 01a0 F7E7     		b	.L88
 985              	.L108:
 986              	.LBE21:
 687:../libraries/CC3000_Host_Driver/wlan.c **** 			
 688:../libraries/CC3000_Host_Driver/wlan.c **** 			arg_len = WLAN_ADD_PROFILE_WPA_PARAM_LEN + ulSsidLen + ulPassPhraseLen;
 987              		.loc 1 688 0 is_stmt 1
 988 01a2 04F12C08 		add	r8, r4, #44
 989 01a6 08EB0300 		add	r0, r8, r3
 990              	.LVL120:
 991              	.L103:
 992 01aa 1FFA80F8 		uxth	r8, r0
 993              	.LVL121:
 994              	.L65:
 689:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 690:../libraries/CC3000_Host_Driver/wlan.c **** 		
 691:../libraries/CC3000_Host_Driver/wlan.c **** 		break;
 692:../libraries/CC3000_Host_Driver/wlan.c **** 	}    
 693:../libraries/CC3000_Host_Driver/wlan.c **** 	
 694:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 695:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_ADD_PROFILE,
 995              		.loc 1 695 0
 996 01ae 4946     		mov	r1, r9
 997 01b0 5FFA88F2 		uxtb	r2, r8
 998 01b4 0520     		movs	r0, #5
 999 01b6 FFF7FEFF 		bl	hci_command_send
 1000              	.LVL122:
 696:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, arg_len);
 697:../libraries/CC3000_Host_Driver/wlan.c **** 	
 698:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 699:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_ADD_PROFILE, &ret);
 1001              		.loc 1 699 0
 1002 01ba 0520     		movs	r0, #5
 1003 01bc 01A9     		add	r1, sp, #4
 1004 01be FFF7FEFF 		bl	SimpleLinkWaitEvent
 1005              	.LVL123:
 700:../libraries/CC3000_Host_Driver/wlan.c **** 	
 701:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 702:../libraries/CC3000_Host_Driver/wlan.c **** }
 1006              		.loc 1 702 0
 1007 01c2 0198     		ldr	r0, [sp, #4]
 1008 01c4 05B0     		add	sp, sp, #20
 1009 01c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1010              	.L110:
 1011 01ca 00BF     		.align	2
 1012              	.L109:
 1013 01cc 00000000 		.word	tSLInformation
 1014              		.cfi_endproc
 1015              	.LFE64:
 1017              		.section	.text.wlan_ioctl_del_profile,"ax",%progbits
 1018              		.align	1
 1019              		.global	wlan_ioctl_del_profile
 1020              		.thumb
 1021              		.thumb_func
 1023              	wlan_ioctl_del_profile:
 1024              	.LFB65:
 703:../libraries/CC3000_Host_Driver/wlan.c **** #else
 704:../libraries/CC3000_Host_Driver/wlan.c **** long
 705:../libraries/CC3000_Host_Driver/wlan.c **** wlan_add_profile(unsigned long ulSecType, 
 706:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char* ucSsid,
 707:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulSsidLen, 
 708:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char *ucBssid,
 709:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPriority,
 710:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPairwiseCipher_Or_TxKeyLen,
 711:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulGroupCipher_TxKeyIndex,
 712:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulKeyMgmt,
 713:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char* ucPf_OrKey,
 714:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPassPhraseLen)
 715:../libraries/CC3000_Host_Driver/wlan.c **** {
 716:../libraries/CC3000_Host_Driver/wlan.c **** 	return -1;
 717:../libraries/CC3000_Host_Driver/wlan.c **** }
 718:../libraries/CC3000_Host_Driver/wlan.c **** #endif
 719:../libraries/CC3000_Host_Driver/wlan.c **** 
 720:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 721:../libraries/CC3000_Host_Driver/wlan.c **** //
 722:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_ioctl_del_profile
 723:../libraries/CC3000_Host_Driver/wlan.c **** //!
 724:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    index   number of profile to delete
 725:../libraries/CC3000_Host_Driver/wlan.c **** //!
 726:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    On success, zero is returned. On error, -1 is returned        
 727:../libraries/CC3000_Host_Driver/wlan.c **** //!
 728:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief     Delete WLAN profile 
 729:../libraries/CC3000_Host_Driver/wlan.c **** //!
 730:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note      In order to delete all stored profile, set index to 255.
 731:../libraries/CC3000_Host_Driver/wlan.c **** //!
 732:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa        wlan_add_profile 
 733:../libraries/CC3000_Host_Driver/wlan.c **** //
 734:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 735:../libraries/CC3000_Host_Driver/wlan.c **** 
 736:../libraries/CC3000_Host_Driver/wlan.c **** long
 737:../libraries/CC3000_Host_Driver/wlan.c **** wlan_ioctl_del_profile(unsigned long ulIndex)
 738:../libraries/CC3000_Host_Driver/wlan.c **** {
 1025              		.loc 1 738 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 8
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              	.LVL124:
 1030 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1031              	.LCFI9:
 1032              		.cfi_def_cfa_offset 24
 1033              		.cfi_offset 0, -24
 1034              		.cfi_offset 1, -20
 1035              		.cfi_offset 2, -16
 1036              		.cfi_offset 4, -12
 1037              		.cfi_offset 5, -8
 1038              		.cfi_offset 14, -4
 739:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 740:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 741:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 742:../libraries/CC3000_Host_Driver/wlan.c **** 	
 743:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1039              		.loc 1 743 0
 1040 0002 0B4B     		ldr	r3, .L112
 738:../libraries/CC3000_Host_Driver/wlan.c **** {
 1041              		.loc 1 738 0
 1042 0004 0146     		mov	r1, r0
 1043              		.loc 1 743 0
 1044 0006 9D68     		ldr	r5, [r3, #8]
 1045              	.LVL125:
 744:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (unsigned char *)(ptr + HEADERS_SIZE_CMD);
 745:../libraries/CC3000_Host_Driver/wlan.c **** 	
 746:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in HCI packet structure
 747:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulIndex);
 748:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1046              		.loc 1 748 0
 1047 0008 02AC     		add	r4, sp, #8
 747:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulIndex);
 1048              		.loc 1 747 0
 1049 000a 05F10900 		add	r0, r5, #9
 1050              	.LVL126:
 1051 000e FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1052              	.LVL127:
 1053              		.loc 1 748 0
 1054 0012 4FF0FF30 		mov	r0, #-1
 1055 0016 44F8040D 		str	r0, [r4, #-4]!
 1056              	.LVL128:
 749:../libraries/CC3000_Host_Driver/wlan.c **** 	
 750:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 751:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_DEL_PROFILE,
 1057              		.loc 1 751 0
 1058 001a 2946     		mov	r1, r5
 1059 001c 0422     		movs	r2, #4
 1060 001e 0620     		movs	r0, #6
 1061 0020 FFF7FEFF 		bl	hci_command_send
 1062              	.LVL129:
 752:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, WLAN_DEL_PROFILE_PARAMS_LEN);
 753:../libraries/CC3000_Host_Driver/wlan.c **** 	
 754:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 755:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_DEL_PROFILE, &ret);
 1063              		.loc 1 755 0
 1064 0024 0620     		movs	r0, #6
 1065 0026 2146     		mov	r1, r4
 1066 0028 FFF7FEFF 		bl	SimpleLinkWaitEvent
 1067              	.LVL130:
 756:../libraries/CC3000_Host_Driver/wlan.c **** 	
 757:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 758:../libraries/CC3000_Host_Driver/wlan.c **** }
 1068              		.loc 1 758 0
 1069 002c 0198     		ldr	r0, [sp, #4]
 1070 002e 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 1071              	.L113:
 1072              		.align	2
 1073              	.L112:
 1074 0030 00000000 		.word	tSLInformation
 1075              		.cfi_endproc
 1076              	.LFE65:
 1078              		.section	.text.wlan_ioctl_get_scan_results,"ax",%progbits
 1079              		.align	1
 1080              		.global	wlan_ioctl_get_scan_results
 1081              		.thumb
 1082              		.thumb_func
 1084              	wlan_ioctl_get_scan_results:
 1085              	.LFB66:
 759:../libraries/CC3000_Host_Driver/wlan.c **** 
 760:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 761:../libraries/CC3000_Host_Driver/wlan.c **** //
 762:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_ioctl_get_scan_results
 763:../libraries/CC3000_Host_Driver/wlan.c **** //!
 764:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param[in]    scan_timeout   parameter not supported
 765:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param[out]   ucResults  scan results (_wlan_full_scan_results_args_t)
 766:../libraries/CC3000_Host_Driver/wlan.c **** //!
 767:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    On success, zero is returned. On error, -1 is returned        
 768:../libraries/CC3000_Host_Driver/wlan.c **** //!
 769:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    Gets entry from scan result table.
 770:../libraries/CC3000_Host_Driver/wlan.c **** //!            The scan results are returned one by one, and each entry 
 771:../libraries/CC3000_Host_Driver/wlan.c **** //!            represents a single AP found in the area. The following is a 
 772:../libraries/CC3000_Host_Driver/wlan.c **** //!            format of the scan result: 
 773:../libraries/CC3000_Host_Driver/wlan.c **** //!        	 - 4 Bytes: number of networks found
 774:../libraries/CC3000_Host_Driver/wlan.c **** //!          - 4 Bytes: The status of the scan: 0 - aged results,
 775:../libraries/CC3000_Host_Driver/wlan.c **** //!                     1 - results valid, 2 - no results
 776:../libraries/CC3000_Host_Driver/wlan.c **** //!          - 42 bytes: Result entry, where the bytes are arranged as  follows:
 777:../libraries/CC3000_Host_Driver/wlan.c **** //!              
 778:../libraries/CC3000_Host_Driver/wlan.c **** //!          				- 1 bit isValid - is result valid or not
 779:../libraries/CC3000_Host_Driver/wlan.c **** //!         				- 7 bits rssi - RSSI value;	 
 780:../libraries/CC3000_Host_Driver/wlan.c **** //!                 - 2 bits: securityMode - security mode of the AP:
 781:../libraries/CC3000_Host_Driver/wlan.c **** //!                           0 - Open, 1 - WEP, 2 WPA, 3 WPA2
 782:../libraries/CC3000_Host_Driver/wlan.c **** //!         				- 6 bits: SSID name length
 783:../libraries/CC3000_Host_Driver/wlan.c **** //!         				- 2 bytes: the time at which the entry has entered into 
 784:../libraries/CC3000_Host_Driver/wlan.c **** //!                            scans result table
 785:../libraries/CC3000_Host_Driver/wlan.c **** //!         				- 32 bytes: SSID name
 786:../libraries/CC3000_Host_Driver/wlan.c **** //!                 - 6 bytes:	BSSID 
 787:../libraries/CC3000_Host_Driver/wlan.c **** //!
 788:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note      scan_timeout, is not supported on this version.
 789:../libraries/CC3000_Host_Driver/wlan.c **** //!
 790:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa        wlan_ioctl_set_scan_params 
 791:../libraries/CC3000_Host_Driver/wlan.c **** //
 792:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 793:../libraries/CC3000_Host_Driver/wlan.c **** 
 794:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_TINY_DRIVER
 795:../libraries/CC3000_Host_Driver/wlan.c **** long
 796:../libraries/CC3000_Host_Driver/wlan.c **** wlan_ioctl_get_scan_results(unsigned long ulScanTimeout,
 797:../libraries/CC3000_Host_Driver/wlan.c ****                             unsigned char *ucResults)
 798:../libraries/CC3000_Host_Driver/wlan.c **** {
 1086              		.loc 1 798 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 1090              	.LVL131:
 799:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 800:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 801:../libraries/CC3000_Host_Driver/wlan.c **** 	
 802:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1091              		.loc 1 802 0
 1092 0000 0A4A     		ldr	r2, .L115
 798:../libraries/CC3000_Host_Driver/wlan.c **** {
 1093              		.loc 1 798 0
 1094 0002 38B5     		push	{r3, r4, r5, lr}
 1095              	.LCFI10:
 1096              		.cfi_def_cfa_offset 16
 1097              		.cfi_offset 3, -16
 1098              		.cfi_offset 4, -12
 1099              		.cfi_offset 5, -8
 1100              		.cfi_offset 14, -4
 1101              		.loc 1 802 0
 1102 0004 9468     		ldr	r4, [r2, #8]
 1103              	.LVL132:
 798:../libraries/CC3000_Host_Driver/wlan.c **** {
 1104              		.loc 1 798 0
 1105 0006 0346     		mov	r3, r0
 1106 0008 0D46     		mov	r5, r1
 803:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (ptr + HEADERS_SIZE_CMD);
 804:../libraries/CC3000_Host_Driver/wlan.c **** 	
 805:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in temporary command buffer
 806:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulScanTimeout);
 1107              		.loc 1 806 0
 1108 000a 04F10900 		add	r0, r4, #9
 1109              	.LVL133:
 1110 000e 1946     		mov	r1, r3
 1111              	.LVL134:
 1112 0010 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1113              	.LVL135:
 807:../libraries/CC3000_Host_Driver/wlan.c **** 	
 808:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 809:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_GET_SCAN_RESULTS,
 1114              		.loc 1 809 0
 1115 0014 2146     		mov	r1, r4
 1116 0016 0422     		movs	r2, #4
 1117 0018 0720     		movs	r0, #7
 1118 001a FFF7FEFF 		bl	hci_command_send
 1119              	.LVL136:
 810:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, WLAN_GET_SCAN_RESULTS_PARAMS_LEN);
 811:../libraries/CC3000_Host_Driver/wlan.c **** 	
 812:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 813:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_GET_SCAN_RESULTS, ucResults);
 1120              		.loc 1 813 0
 1121 001e 0720     		movs	r0, #7
 1122 0020 2946     		mov	r1, r5
 1123 0022 FFF7FEFF 		bl	SimpleLinkWaitEvent
 1124              	.LVL137:
 814:../libraries/CC3000_Host_Driver/wlan.c **** 	
 815:../libraries/CC3000_Host_Driver/wlan.c **** 	return(0);
 816:../libraries/CC3000_Host_Driver/wlan.c **** }
 1125              		.loc 1 816 0
 1126 0026 0020     		movs	r0, #0
 1127 0028 38BD     		pop	{r3, r4, r5, pc}
 1128              	.L116:
 1129 002a 00BF     		.align	2
 1130              	.L115:
 1131 002c 00000000 		.word	tSLInformation
 1132              		.cfi_endproc
 1133              	.LFE66:
 1135              		.section	.text.wlan_ioctl_set_scan_params,"ax",%progbits
 1136              		.align	1
 1137              		.global	wlan_ioctl_set_scan_params
 1138              		.thumb
 1139              		.thumb_func
 1141              	wlan_ioctl_set_scan_params:
 1142              	.LFB67:
 817:../libraries/CC3000_Host_Driver/wlan.c **** #endif
 818:../libraries/CC3000_Host_Driver/wlan.c **** 
 819:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 820:../libraries/CC3000_Host_Driver/wlan.c **** //
 821:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_ioctl_set_scan_params
 822:../libraries/CC3000_Host_Driver/wlan.c **** //!
 823:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    uiEnable - start/stop application scan: 
 824:../libraries/CC3000_Host_Driver/wlan.c **** //!            1 = start scan with default interval value of 10 min. 
 825:../libraries/CC3000_Host_Driver/wlan.c **** //!            in order to set a different scan interval value apply the value 
 826:../libraries/CC3000_Host_Driver/wlan.c **** //!            in milliseconds. minimum 1 second. 0=stop). Wlan reset
 827:../libraries/CC3000_Host_Driver/wlan.c **** //!           (wlan_stop() wlan_start()) is needed when changing scan interval
 828:../libraries/CC3000_Host_Driver/wlan.c **** //!            value. Saved: No
 829:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiMinDwellTime   minimum dwell time value to be used for each 
 830:../libraries/CC3000_Host_Driver/wlan.c **** //!           channel, in milliseconds. Saved: yes
 831:../libraries/CC3000_Host_Driver/wlan.c **** //!           Recommended Value: 100 (Default: 20)
 832:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiMaxDwellTime    maximum dwell time value to be used for each
 833:../libraries/CC3000_Host_Driver/wlan.c **** //!           channel, in milliseconds. Saved: yes
 834:../libraries/CC3000_Host_Driver/wlan.c **** //!           Recommended Value: 100 (Default: 30)
 835:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiNumOfProbeRequests  max probe request between dwell time. 
 836:../libraries/CC3000_Host_Driver/wlan.c **** //!           Saved: yes. Recommended Value: 5 (Default:2)
 837:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiChannelMask  bitwise, up to 13 channels (0x1fff). 
 838:../libraries/CC3000_Host_Driver/wlan.c **** //!           Saved: yes. Default: 0x7ff
 839:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiRSSIThreshold   RSSI threshold. Saved: yes (Default: -80)
 840:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiSNRThreshold    NSR threshold. Saved: yes (Default: 0)
 841:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiDefaultTxPower  probe Tx power. Saved: yes (Default: 205)
 842:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   aiIntervalList    pointer to array with 16 entries (16 channels) 
 843:../libraries/CC3000_Host_Driver/wlan.c **** //!           each entry (unsigned long) holds timeout between periodic scan 
 844:../libraries/CC3000_Host_Driver/wlan.c **** //!           (connection scan) - in millisecond. Saved: yes. Default 2000ms.
 845:../libraries/CC3000_Host_Driver/wlan.c **** //!
 846:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    On success, zero is returned. On error, -1 is returned        
 847:../libraries/CC3000_Host_Driver/wlan.c **** //!
 848:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    start and stop scan procedure. Set scan parameters. 
 849:../libraries/CC3000_Host_Driver/wlan.c **** //!
 850:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note     uiDefaultTxPower, is not supported on this version.
 851:../libraries/CC3000_Host_Driver/wlan.c **** //!
 852:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa        wlan_ioctl_get_scan_results 
 853:../libraries/CC3000_Host_Driver/wlan.c **** //
 854:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 855:../libraries/CC3000_Host_Driver/wlan.c **** 
 856:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_TINY_DRIVER
 857:../libraries/CC3000_Host_Driver/wlan.c **** long
 858:../libraries/CC3000_Host_Driver/wlan.c **** wlan_ioctl_set_scan_params(unsigned long uiEnable, unsigned long uiMinDwellTime,
 859:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long uiMaxDwellTime,
 860:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long uiNumOfProbeRequests,
 861:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long uiChannelMask,long iRSSIThreshold,
 862:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long uiSNRThreshold,
 863:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long uiDefaultTxPower,
 864:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long *aiIntervalList)
 865:../libraries/CC3000_Host_Driver/wlan.c **** {
 1143              		.loc 1 865 0
 1144              		.cfi_startproc
 1145              		@ args = 20, pretend = 0, frame = 8
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              	.LVL138:
 1148 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1149              	.LCFI11:
 1150              		.cfi_def_cfa_offset 40
 1151              		.cfi_offset 0, -40
 1152              		.cfi_offset 1, -36
 1153              		.cfi_offset 2, -32
 1154              		.cfi_offset 4, -28
 1155              		.cfi_offset 5, -24
 1156              		.cfi_offset 6, -20
 1157              		.cfi_offset 7, -16
 1158              		.cfi_offset 8, -12
 1159              		.cfi_offset 9, -8
 1160              		.cfi_offset 14, -4
 1161              		.loc 1 865 0
 1162 0004 9946     		mov	r9, r3
 866:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned long  uiRes;
 867:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 868:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 869:../libraries/CC3000_Host_Driver/wlan.c **** 	
 870:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1163              		.loc 1 870 0
 1164 0006 1A4B     		ldr	r3, .L120
 1165              	.LVL139:
 865:../libraries/CC3000_Host_Driver/wlan.c **** {
 1166              		.loc 1 865 0
 1167 0008 0746     		mov	r7, r0
 1168              		.loc 1 870 0
 1169 000a 9C68     		ldr	r4, [r3, #8]
 1170              	.LVL140:
 865:../libraries/CC3000_Host_Driver/wlan.c **** {
 1171              		.loc 1 865 0
 1172 000c 0E46     		mov	r6, r1
 871:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (ptr + HEADERS_SIZE_CMD);
 872:../libraries/CC3000_Host_Driver/wlan.c **** 	
 873:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in temporary command buffer
 874:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 36);
 1173              		.loc 1 874 0
 1174 000e 04F10900 		add	r0, r4, #9
 1175              	.LVL141:
 1176 0012 2421     		movs	r1, #36
 1177              	.LVL142:
 865:../libraries/CC3000_Host_Driver/wlan.c **** {
 1178              		.loc 1 865 0
 1179 0014 9046     		mov	r8, r2
 1180 0016 0E9D     		ldr	r5, [sp, #56]
 1181              		.loc 1 874 0
 1182 0018 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1183              	.LVL143:
 875:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiEnable);
 1184              		.loc 1 875 0
 1185 001c 3946     		mov	r1, r7
 1186 001e FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1187              	.LVL144:
 876:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiMinDwellTime);
 1188              		.loc 1 876 0
 1189 0022 3146     		mov	r1, r6
 1190 0024 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1191              	.LVL145:
 877:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiMaxDwellTime);
 1192              		.loc 1 877 0
 1193 0028 4146     		mov	r1, r8
 1194 002a FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1195              	.LVL146:
 878:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiNumOfProbeRequests);
 1196              		.loc 1 878 0
 1197 002e 4946     		mov	r1, r9
 1198 0030 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1199              	.LVL147:
 879:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiChannelMask);
 1200              		.loc 1 879 0
 1201 0034 0A99     		ldr	r1, [sp, #40]
 1202 0036 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1203              	.LVL148:
 880:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, iRSSIThreshold);
 1204              		.loc 1 880 0
 1205 003a 0B99     		ldr	r1, [sp, #44]
 1206 003c FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1207              	.LVL149:
 881:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiSNRThreshold);
 1208              		.loc 1 881 0
 1209 0040 0C99     		ldr	r1, [sp, #48]
 1210 0042 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1211              	.LVL150:
 882:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiDefaultTxPower);
 1212              		.loc 1 882 0
 1213 0046 0D99     		ldr	r1, [sp, #52]
 1214 0048 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1215              	.LVL151:
 1216 004c 0021     		movs	r1, #0
 1217              	.L118:
 1218              	.LBB22:
 883:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, aiIntervalList, sizeof(unsigned long) * 
 1219              		.loc 1 883 0 discriminator 2
 1220 004e 6A5C     		ldrb	r2, [r5, r1]	@ zero_extendqisi2
 1221 0050 4254     		strb	r2, [r0, r1]
 1222 0052 0131     		adds	r1, r1, #1
 1223 0054 4029     		cmp	r1, #64
 1224 0056 FAD1     		bne	.L118
 1225              	.LBE22:
 884:../libraries/CC3000_Host_Driver/wlan.c **** 									SL_SET_SCAN_PARAMS_INTERVAL_LIST_SIZE);
 885:../libraries/CC3000_Host_Driver/wlan.c **** 	
 886:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 887:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_SET_SCANPARAM,
 1226              		.loc 1 887 0
 1227 0058 2146     		mov	r1, r4
 1228 005a 6422     		movs	r2, #100
 1229 005c 0320     		movs	r0, #3
 1230 005e FFF7FEFF 		bl	hci_command_send
 1231              	.LVL152:
 888:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, WLAN_SET_SCAN_PARAMS_LEN);
 889:../libraries/CC3000_Host_Driver/wlan.c **** 	
 890:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 891:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_SET_SCANPARAM, &uiRes);
 1232              		.loc 1 891 0
 1233 0062 0320     		movs	r0, #3
 1234 0064 01A9     		add	r1, sp, #4
 1235 0066 FFF7FEFF 		bl	SimpleLinkWaitEvent
 1236              	.LVL153:
 892:../libraries/CC3000_Host_Driver/wlan.c **** 	
 893:../libraries/CC3000_Host_Driver/wlan.c **** 	return(uiRes);
 894:../libraries/CC3000_Host_Driver/wlan.c **** }
 1237              		.loc 1 894 0
 1238 006a 0198     		ldr	r0, [sp, #4]
 1239 006c BDE8FE83 		pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
 1240              	.L121:
 1241              		.align	2
 1242              	.L120:
 1243 0070 00000000 		.word	tSLInformation
 1244              		.cfi_endproc
 1245              	.LFE67:
 1247              		.section	.text.wlan_set_event_mask,"ax",%progbits
 1248              		.align	1
 1249              		.global	wlan_set_event_mask
 1250              		.thumb
 1251              		.thumb_func
 1253              	wlan_set_event_mask:
 1254              	.LFB68:
 895:../libraries/CC3000_Host_Driver/wlan.c **** #endif
 896:../libraries/CC3000_Host_Driver/wlan.c **** 
 897:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 898:../libraries/CC3000_Host_Driver/wlan.c **** //
 899:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_set_event_mask
 900:../libraries/CC3000_Host_Driver/wlan.c **** //!
 901:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    mask   mask option:
 902:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_UNSOL_CONNECT connect event
 903:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_UNSOL_DISCONNECT disconnect event
 904:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_ASYNC_SIMPLE_CONFIG_DONE  smart config done
 905:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_UNSOL_INIT init done
 906:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_UNSOL_DHCP dhcp event report
 907:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_ASYNC_PING_REPORT ping report
 908:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_KEEPALIVE keepalive
 909:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_TX_COMPLETE - disable information on end of transmission
 910:../libraries/CC3000_Host_Driver/wlan.c **** //!   	  Saved: no.
 911:../libraries/CC3000_Host_Driver/wlan.c **** //!
 912:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    On success, zero is returned. On error, -1 is returned        
 913:../libraries/CC3000_Host_Driver/wlan.c **** //!
 914:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    Mask event according to bit mask. In case that event is 
 915:../libraries/CC3000_Host_Driver/wlan.c **** //!            masked (1), the device will not send the masked event to host. 
 916:../libraries/CC3000_Host_Driver/wlan.c **** //
 917:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 918:../libraries/CC3000_Host_Driver/wlan.c **** 
 919:../libraries/CC3000_Host_Driver/wlan.c **** long
 920:../libraries/CC3000_Host_Driver/wlan.c **** wlan_set_event_mask(unsigned long ulMask)
 921:../libraries/CC3000_Host_Driver/wlan.c **** {
 1255              		.loc 1 921 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 8
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              	.LVL154:
 1260 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1261              	.LCFI12:
 1262              		.cfi_def_cfa_offset 24
 1263              		.cfi_offset 0, -24
 1264              		.cfi_offset 1, -20
 1265              		.cfi_offset 2, -16
 1266              		.cfi_offset 4, -12
 1267              		.cfi_offset 5, -8
 1268              		.cfi_offset 14, -4
 922:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 923:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 924:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 925:../libraries/CC3000_Host_Driver/wlan.c **** 	
 926:../libraries/CC3000_Host_Driver/wlan.c **** 	
 927:../libraries/CC3000_Host_Driver/wlan.c **** 	if ((ulMask & HCI_EVNT_WLAN_TX_COMPLETE) == HCI_EVNT_WLAN_TX_COMPLETE)
 1269              		.loc 1 927 0
 1270 0002 48F20802 		movw	r2, #32776
 1271 0006 48F20801 		movw	r1, #32776
 1272 000a 0240     		ands	r2, r2, r0
 1273 000c 8A42     		cmp	r2, r1
 921:../libraries/CC3000_Host_Driver/wlan.c **** {
 1274              		.loc 1 921 0
 1275 000e 0346     		mov	r3, r0
 1276 0010 1349     		ldr	r1, .L127
 1277              		.loc 1 927 0
 1278 0012 0BD1     		bne	.L123
 928:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 929:../libraries/CC3000_Host_Driver/wlan.c **** 		tSLInformation.InformHostOnTxComplete = 0;
 1279              		.loc 1 929 0
 1280 0014 0020     		movs	r0, #0
 1281              	.LVL155:
 930:../libraries/CC3000_Host_Driver/wlan.c **** 		
 931:../libraries/CC3000_Host_Driver/wlan.c **** 		// Since an event is a virtual event - i.e. it is not coming from CC3000
 932:../libraries/CC3000_Host_Driver/wlan.c **** 		// there is no need to send anything to the device if it was an only event
 933:../libraries/CC3000_Host_Driver/wlan.c **** 		if (ulMask == HCI_EVNT_WLAN_TX_COMPLETE)
 1282              		.loc 1 933 0
 1283 0016 9342     		cmp	r3, r2
 929:../libraries/CC3000_Host_Driver/wlan.c **** 		tSLInformation.InformHostOnTxComplete = 0;
 1284              		.loc 1 929 0
 1285 0018 81F84000 		strb	r0, [r1, #64]
 1286              		.loc 1 933 0
 1287 001c 1FD0     		beq	.L124
 934:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 935:../libraries/CC3000_Host_Driver/wlan.c **** 			return 0;
 936:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 937:../libraries/CC3000_Host_Driver/wlan.c **** 		
 938:../libraries/CC3000_Host_Driver/wlan.c **** 		ulMask &= ~HCI_EVNT_WLAN_TX_COMPLETE;
 1288              		.loc 1 938 0
 1289 001e 23F40044 		bic	r4, r3, #32768
 1290 0022 24F00805 		bic	r5, r4, #8
 1291              	.LVL156:
 939:../libraries/CC3000_Host_Driver/wlan.c **** 		ulMask |= HCI_EVNT_WLAN_UNSOL_BASE;
 1292              		.loc 1 939 0
 1293 0026 45F40043 		orr	r3, r5, #32768
 1294              	.LVL157:
 1295 002a 02E0     		b	.L125
 1296              	.LVL158:
 1297              	.L123:
 940:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 941:../libraries/CC3000_Host_Driver/wlan.c **** 	else
 942:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 943:../libraries/CC3000_Host_Driver/wlan.c **** 		tSLInformation.InformHostOnTxComplete = 1;
 1298              		.loc 1 943 0
 1299 002c 0120     		movs	r0, #1
 1300              	.LVL159:
 1301 002e 81F84000 		strb	r0, [r1, #64]
 1302              	.L125:
 944:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 945:../libraries/CC3000_Host_Driver/wlan.c **** 	
 946:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 947:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1303              		.loc 1 947 0
 1304 0032 0B49     		ldr	r1, .L127
 946:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1305              		.loc 1 946 0
 1306 0034 4FF0FF32 		mov	r2, #-1
 1307              		.loc 1 947 0
 1308 0038 8D68     		ldr	r5, [r1, #8]
 1309              	.LVL160:
 946:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1310              		.loc 1 946 0
 1311 003a 02AC     		add	r4, sp, #8
 948:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (unsigned char *)(ptr + HEADERS_SIZE_CMD);
 949:../libraries/CC3000_Host_Driver/wlan.c **** 	
 950:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in HCI packet structure
 951:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulMask);
 1312              		.loc 1 951 0
 1313 003c 1946     		mov	r1, r3
 1314 003e 05F10900 		add	r0, r5, #9
 1315              	.LVL161:
 946:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1316              		.loc 1 946 0
 1317 0042 44F8042D 		str	r2, [r4, #-4]!
 1318              	.LVL162:
 1319              		.loc 1 951 0
 1320 0046 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1321              	.LVL163:
 952:../libraries/CC3000_Host_Driver/wlan.c **** 	
 953:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 954:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_EVENT_MASK,
 1322              		.loc 1 954 0
 1323 004a 2946     		mov	r1, r5
 1324 004c 0422     		movs	r2, #4
 1325 004e 0820     		movs	r0, #8
 1326 0050 FFF7FEFF 		bl	hci_command_send
 1327              	.LVL164:
 955:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, WLAN_SET_MASK_PARAMS_LEN);
 956:../libraries/CC3000_Host_Driver/wlan.c **** 	
 957:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 958:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_EVENT_MASK, &ret);
 1328              		.loc 1 958 0
 1329 0054 0820     		movs	r0, #8
 1330 0056 2146     		mov	r1, r4
 1331 0058 FFF7FEFF 		bl	SimpleLinkWaitEvent
 1332              	.LVL165:
 959:../libraries/CC3000_Host_Driver/wlan.c **** 	
 960:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 1333              		.loc 1 960 0
 1334 005c 0198     		ldr	r0, [sp, #4]
 1335              	.LVL166:
 1336              	.L124:
 961:../libraries/CC3000_Host_Driver/wlan.c **** }
 1337              		.loc 1 961 0
 1338 005e 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 1339              	.L128:
 1340              		.align	2
 1341              	.L127:
 1342 0060 00000000 		.word	tSLInformation
 1343              		.cfi_endproc
 1344              	.LFE68:
 1346              		.section	.text.wlan_ioctl_statusget,"ax",%progbits
 1347              		.align	1
 1348              		.global	wlan_ioctl_statusget
 1349              		.thumb
 1350              		.thumb_func
 1352              	wlan_ioctl_statusget:
 1353              	.LFB69:
 962:../libraries/CC3000_Host_Driver/wlan.c **** 
 963:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 964:../libraries/CC3000_Host_Driver/wlan.c **** //
 965:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_ioctl_statusget
 966:../libraries/CC3000_Host_Driver/wlan.c **** //!
 967:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param none 
 968:../libraries/CC3000_Host_Driver/wlan.c **** //!
 969:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    WLAN_STATUS_DISCONNECTED, WLAN_STATUS_SCANING, 
 970:../libraries/CC3000_Host_Driver/wlan.c **** //!             STATUS_CONNECTING or WLAN_STATUS_CONNECTED      
 971:../libraries/CC3000_Host_Driver/wlan.c **** //!
 972:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    get wlan status: disconnected, scanning, connecting or connected
 973:../libraries/CC3000_Host_Driver/wlan.c **** //
 974:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 975:../libraries/CC3000_Host_Driver/wlan.c **** 
 976:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_TINY_DRIVER
 977:../libraries/CC3000_Host_Driver/wlan.c **** long
 978:../libraries/CC3000_Host_Driver/wlan.c **** wlan_ioctl_statusget(void)
 979:../libraries/CC3000_Host_Driver/wlan.c **** {
 1354              		.loc 1 979 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 8
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358 0000 13B5     		push	{r0, r1, r4, lr}
 1359              	.LCFI13:
 1360              		.cfi_def_cfa_offset 16
 1361              		.cfi_offset 0, -16
 1362              		.cfi_offset 1, -12
 1363              		.cfi_offset 4, -8
 1364              		.cfi_offset 14, -4
 980:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 981:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 982:../libraries/CC3000_Host_Driver/wlan.c **** 	
 983:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 984:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1365              		.loc 1 984 0
 1366 0002 0848     		ldr	r0, .L130
 983:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1367              		.loc 1 983 0
 1368 0004 4FF0FF33 		mov	r3, #-1
 1369 0008 02AC     		add	r4, sp, #8
 1370 000a 44F8043D 		str	r3, [r4, #-4]!
 1371              	.LVL167:
 1372              		.loc 1 984 0
 1373 000e 8168     		ldr	r1, [r0, #8]
 1374              	.LVL168:
 985:../libraries/CC3000_Host_Driver/wlan.c **** 	
 986:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_STATUSGET,
 1375              		.loc 1 986 0
 1376 0010 0022     		movs	r2, #0
 1377 0012 0920     		movs	r0, #9
 1378 0014 FFF7FEFF 		bl	hci_command_send
 1379              	.LVL169:
 987:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, 0);
 988:../libraries/CC3000_Host_Driver/wlan.c **** 	
 989:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 990:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_STATUSGET, &ret);
 1380              		.loc 1 990 0
 1381 0018 0920     		movs	r0, #9
 1382 001a 2146     		mov	r1, r4
 1383 001c FFF7FEFF 		bl	SimpleLinkWaitEvent
 1384              	.LVL170:
 991:../libraries/CC3000_Host_Driver/wlan.c **** 	
 992:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);    
 993:../libraries/CC3000_Host_Driver/wlan.c **** }
 1385              		.loc 1 993 0
 1386 0020 0198     		ldr	r0, [sp, #4]
 1387 0022 1CBD     		pop	{r2, r3, r4, pc}
 1388              	.L131:
 1389              		.align	2
 1390              	.L130:
 1391 0024 00000000 		.word	tSLInformation
 1392              		.cfi_endproc
 1393              	.LFE69:
 1395              		.section	.text.wlan_smart_config_start,"ax",%progbits
 1396              		.align	1
 1397              		.global	wlan_smart_config_start
 1398              		.thumb
 1399              		.thumb_func
 1401              	wlan_smart_config_start:
 1402              	.LFB70:
 994:../libraries/CC3000_Host_Driver/wlan.c **** #endif
 995:../libraries/CC3000_Host_Driver/wlan.c **** 
 996:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 997:../libraries/CC3000_Host_Driver/wlan.c **** //
 998:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_smart_config_start
 999:../libraries/CC3000_Host_Driver/wlan.c **** //!
1000:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    algoEncryptedFlag indicates whether the information is encrypted
1001:../libraries/CC3000_Host_Driver/wlan.c **** //!
1002:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   On success, zero is returned. On error, -1 is returned        
1003:../libraries/CC3000_Host_Driver/wlan.c **** //!
1004:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief   Start to acquire device profile. The device acquire its own 
1005:../libraries/CC3000_Host_Driver/wlan.c **** //!           profile, if profile message is found. The acquired AP information
1006:../libraries/CC3000_Host_Driver/wlan.c **** //!           is stored in CC3000 EEPROM only in case AES128 encryption is used.
1007:../libraries/CC3000_Host_Driver/wlan.c **** //!           In case AES128 encryption is not used, a profile is created by 
1008:../libraries/CC3000_Host_Driver/wlan.c **** //!           CC3000 internally.
1009:../libraries/CC3000_Host_Driver/wlan.c **** //!
1010:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note    An asynchronous event - Smart Config Done will be generated as soon
1011:../libraries/CC3000_Host_Driver/wlan.c **** //!           as the process finishes successfully.
1012:../libraries/CC3000_Host_Driver/wlan.c **** //!
1013:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa      wlan_smart_config_set_prefix , wlan_smart_config_stop
1014:../libraries/CC3000_Host_Driver/wlan.c **** //
1015:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1016:../libraries/CC3000_Host_Driver/wlan.c **** 
1017:../libraries/CC3000_Host_Driver/wlan.c **** long
1018:../libraries/CC3000_Host_Driver/wlan.c **** wlan_smart_config_start(unsigned long algoEncryptedFlag)
1019:../libraries/CC3000_Host_Driver/wlan.c **** {
 1403              		.loc 1 1019 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 8
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              	.LVL171:
 1408 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1409              	.LCFI14:
 1410              		.cfi_def_cfa_offset 24
 1411              		.cfi_offset 0, -24
 1412              		.cfi_offset 1, -20
 1413              		.cfi_offset 4, -16
 1414              		.cfi_offset 5, -12
 1415              		.cfi_offset 6, -8
 1416              		.cfi_offset 14, -4
1020:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
1021:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
1022:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
1023:../libraries/CC3000_Host_Driver/wlan.c **** 	
1024:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
1025:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1417              		.loc 1 1025 0
 1418 0002 0C4B     		ldr	r3, .L133
1019:../libraries/CC3000_Host_Driver/wlan.c **** {
 1419              		.loc 1 1019 0
 1420 0004 0146     		mov	r1, r0
 1421              		.loc 1 1025 0
 1422 0006 9D68     		ldr	r5, [r3, #8]
 1423              	.LVL172:
1024:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1424              		.loc 1 1024 0
 1425 0008 4FF0FF36 		mov	r6, #-1
1026:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (unsigned char *)(ptr + HEADERS_SIZE_CMD);
1027:../libraries/CC3000_Host_Driver/wlan.c **** 	
1028:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in HCI packet structure
1029:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, algoEncryptedFlag);
1030:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1426              		.loc 1 1030 0
 1427 000c 02AC     		add	r4, sp, #8
1029:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, algoEncryptedFlag);
 1428              		.loc 1 1029 0
 1429 000e 05F10900 		add	r0, r5, #9
 1430              	.LVL173:
1024:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1431              		.loc 1 1024 0
 1432 0012 0196     		str	r6, [sp, #4]
 1433              	.LVL174:
1029:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, algoEncryptedFlag);
 1434              		.loc 1 1029 0
 1435 0014 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1436              	.LVL175:
 1437              		.loc 1 1030 0
 1438 0018 44F8046D 		str	r6, [r4, #-4]!
 1439              	.LVL176:
1031:../libraries/CC3000_Host_Driver/wlan.c **** 	
1032:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_START, ptr, 
 1440              		.loc 1 1032 0
 1441 001c 2946     		mov	r1, r5
 1442 001e 0422     		movs	r2, #4
 1443 0020 0A20     		movs	r0, #10
 1444 0022 FFF7FEFF 		bl	hci_command_send
 1445              	.LVL177:
1033:../libraries/CC3000_Host_Driver/wlan.c **** 									 WLAN_SMART_CONFIG_START_PARAMS_LEN);
1034:../libraries/CC3000_Host_Driver/wlan.c **** 	
1035:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
1036:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_START, &ret);
 1446              		.loc 1 1036 0
 1447 0026 0A20     		movs	r0, #10
 1448 0028 2146     		mov	r1, r4
 1449 002a FFF7FEFF 		bl	SimpleLinkWaitEvent
 1450              	.LVL178:
1037:../libraries/CC3000_Host_Driver/wlan.c **** 	
1038:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);    
1039:../libraries/CC3000_Host_Driver/wlan.c **** }
 1451              		.loc 1 1039 0
 1452 002e 0198     		ldr	r0, [sp, #4]
 1453 0030 7CBD     		pop	{r2, r3, r4, r5, r6, pc}
 1454              	.L134:
 1455 0032 00BF     		.align	2
 1456              	.L133:
 1457 0034 00000000 		.word	tSLInformation
 1458              		.cfi_endproc
 1459              	.LFE70:
 1461              		.section	.text.wlan_smart_config_stop,"ax",%progbits
 1462              		.align	1
 1463              		.global	wlan_smart_config_stop
 1464              		.thumb
 1465              		.thumb_func
 1467              	wlan_smart_config_stop:
 1468              	.LFB71:
1040:../libraries/CC3000_Host_Driver/wlan.c **** 
1041:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1042:../libraries/CC3000_Host_Driver/wlan.c **** //
1043:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_smart_config_stop
1044:../libraries/CC3000_Host_Driver/wlan.c **** //!
1045:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    algoEncryptedFlag indicates whether the information is encrypted
1046:../libraries/CC3000_Host_Driver/wlan.c **** //!
1047:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   On success, zero is returned. On error, -1 is returned        
1048:../libraries/CC3000_Host_Driver/wlan.c **** //!
1049:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief   Stop the acquire profile procedure 
1050:../libraries/CC3000_Host_Driver/wlan.c **** //!
1051:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa      wlan_smart_config_start , wlan_smart_config_set_prefix
1052:../libraries/CC3000_Host_Driver/wlan.c **** //
1053:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1054:../libraries/CC3000_Host_Driver/wlan.c **** 
1055:../libraries/CC3000_Host_Driver/wlan.c **** long
1056:../libraries/CC3000_Host_Driver/wlan.c **** wlan_smart_config_stop(void)
1057:../libraries/CC3000_Host_Driver/wlan.c **** {
 1469              		.loc 1 1057 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 8
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 1473 0000 13B5     		push	{r0, r1, r4, lr}
 1474              	.LCFI15:
 1475              		.cfi_def_cfa_offset 16
 1476              		.cfi_offset 0, -16
 1477              		.cfi_offset 1, -12
 1478              		.cfi_offset 4, -8
 1479              		.cfi_offset 14, -4
1058:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
1059:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
1060:../libraries/CC3000_Host_Driver/wlan.c **** 	
1061:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
1062:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1480              		.loc 1 1062 0
 1481 0002 0848     		ldr	r0, .L136
1061:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1482              		.loc 1 1061 0
 1483 0004 4FF0FF33 		mov	r3, #-1
 1484 0008 02AC     		add	r4, sp, #8
 1485 000a 44F8043D 		str	r3, [r4, #-4]!
 1486              	.LVL179:
 1487              		.loc 1 1062 0
 1488 000e 8168     		ldr	r1, [r0, #8]
 1489              	.LVL180:
1063:../libraries/CC3000_Host_Driver/wlan.c **** 	
1064:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_STOP, ptr, 0);
 1490              		.loc 1 1064 0
 1491 0010 0022     		movs	r2, #0
 1492 0012 0B20     		movs	r0, #11
 1493 0014 FFF7FEFF 		bl	hci_command_send
 1494              	.LVL181:
1065:../libraries/CC3000_Host_Driver/wlan.c **** 	
1066:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
1067:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_STOP, &ret);
 1495              		.loc 1 1067 0
 1496 0018 0B20     		movs	r0, #11
 1497 001a 2146     		mov	r1, r4
 1498 001c FFF7FEFF 		bl	SimpleLinkWaitEvent
 1499              	.LVL182:
1068:../libraries/CC3000_Host_Driver/wlan.c **** 	
1069:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);    
1070:../libraries/CC3000_Host_Driver/wlan.c **** }
 1500              		.loc 1 1070 0
 1501 0020 0198     		ldr	r0, [sp, #4]
 1502 0022 1CBD     		pop	{r2, r3, r4, pc}
 1503              	.L137:
 1504              		.align	2
 1505              	.L136:
 1506 0024 00000000 		.word	tSLInformation
 1507              		.cfi_endproc
 1508              	.LFE71:
 1510              		.section	.text.wlan_smart_config_set_prefix,"ax",%progbits
 1511              		.align	1
 1512              		.global	wlan_smart_config_set_prefix
 1513              		.thumb
 1514              		.thumb_func
 1516              	wlan_smart_config_set_prefix:
 1517              	.LFB72:
1071:../libraries/CC3000_Host_Driver/wlan.c **** 
1072:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1073:../libraries/CC3000_Host_Driver/wlan.c **** //
1074:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_smart_config_set_prefix
1075:../libraries/CC3000_Host_Driver/wlan.c **** //!
1076:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   newPrefix  3 bytes identify the SSID prefix for the Smart Config. 
1077:../libraries/CC3000_Host_Driver/wlan.c **** //!
1078:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   On success, zero is returned. On error, -1 is returned        
1079:../libraries/CC3000_Host_Driver/wlan.c **** //!
1080:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief   Configure station ssid prefix. The prefix is used internally 
1081:../libraries/CC3000_Host_Driver/wlan.c **** //!           in CC3000. It should always be TTT.
1082:../libraries/CC3000_Host_Driver/wlan.c **** //!
1083:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note    The prefix is stored in CC3000 NVMEM
1084:../libraries/CC3000_Host_Driver/wlan.c **** //!
1085:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa      wlan_smart_config_start , wlan_smart_config_stop
1086:../libraries/CC3000_Host_Driver/wlan.c **** //
1087:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1088:../libraries/CC3000_Host_Driver/wlan.c **** 
1089:../libraries/CC3000_Host_Driver/wlan.c **** long
1090:../libraries/CC3000_Host_Driver/wlan.c **** wlan_smart_config_set_prefix(char* cNewPrefix)
1091:../libraries/CC3000_Host_Driver/wlan.c **** {
 1518              		.loc 1 1091 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 8
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              	.LVL183:
 1523 0000 07B5     		push	{r0, r1, r2, lr}
 1524              	.LCFI16:
 1525              		.cfi_def_cfa_offset 16
 1526              		.cfi_offset 0, -16
 1527              		.cfi_offset 1, -12
 1528              		.cfi_offset 2, -8
 1529              		.cfi_offset 14, -4
1092:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
1093:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
1094:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
1095:../libraries/CC3000_Host_Driver/wlan.c **** 	
1096:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
1097:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1530              		.loc 1 1097 0
 1531 0002 0D4A     		ldr	r2, .L141
1096:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1532              		.loc 1 1096 0
 1533 0004 4FF0FF33 		mov	r3, #-1
 1534 0008 0193     		str	r3, [sp, #4]
 1535              	.LVL184:
 1536              		.loc 1 1097 0
 1537 000a 9168     		ldr	r1, [r2, #8]
 1538              	.LVL185:
1098:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (ptr + HEADERS_SIZE_CMD);
1099:../libraries/CC3000_Host_Driver/wlan.c **** 	
1100:../libraries/CC3000_Host_Driver/wlan.c **** 	if (cNewPrefix == NULL)
 1539              		.loc 1 1100 0
 1540 000c 90B1     		cbz	r0, .L140
1101:../libraries/CC3000_Host_Driver/wlan.c **** 		return ret;
1102:../libraries/CC3000_Host_Driver/wlan.c **** 	else	// with the new Smart Config, prefix must be TTT
1103:../libraries/CC3000_Host_Driver/wlan.c **** 	{
1104:../libraries/CC3000_Host_Driver/wlan.c **** 		*cNewPrefix = 'T';
 1541              		.loc 1 1104 0
 1542 000e 5423     		movs	r3, #84
1105:../libraries/CC3000_Host_Driver/wlan.c **** 		*(cNewPrefix + 1) = 'T';
 1543              		.loc 1 1105 0
 1544 0010 4370     		strb	r3, [r0, #1]
1104:../libraries/CC3000_Host_Driver/wlan.c **** 		*cNewPrefix = 'T';
 1545              		.loc 1 1104 0
 1546 0012 0370     		strb	r3, [r0, #0]
1106:../libraries/CC3000_Host_Driver/wlan.c **** 		*(cNewPrefix + 2) = 'T';
 1547              		.loc 1 1106 0
 1548 0014 8370     		strb	r3, [r0, #2]
 1549              	.LVL186:
 1550              	.LBB23:
1107:../libraries/CC3000_Host_Driver/wlan.c **** 	}
1108:../libraries/CC3000_Host_Driver/wlan.c **** 	
1109:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, cNewPrefix, SL_SIMPLE_CONFIG_PREFIX_LENGTH);
 1551              		.loc 1 1109 0
 1552 0016 4B72     		strb	r3, [r1, #9]
 1553              	.LVL187:
 1554 0018 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 1555 001a 8A72     		strb	r2, [r1, #10]
 1556              	.LVL188:
 1557 001c 8078     		ldrb	r0, [r0, #2]	@ zero_extendqisi2
 1558              	.LVL189:
 1559              	.LBE23:
1110:../libraries/CC3000_Host_Driver/wlan.c **** 	
1111:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_SET_PREFIX, ptr, 
 1560              		.loc 1 1111 0
 1561 001e 0322     		movs	r2, #3
 1562              	.LBB24:
1109:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, cNewPrefix, SL_SIMPLE_CONFIG_PREFIX_LENGTH);
 1563              		.loc 1 1109 0
 1564 0020 C872     		strb	r0, [r1, #11]
 1565              	.LVL190:
 1566              	.LBE24:
 1567              		.loc 1 1111 0
 1568 0022 0C20     		movs	r0, #12
 1569 0024 FFF7FEFF 		bl	hci_command_send
 1570              	.LVL191:
1112:../libraries/CC3000_Host_Driver/wlan.c **** 									 SL_SIMPLE_CONFIG_PREFIX_LENGTH);
1113:../libraries/CC3000_Host_Driver/wlan.c **** 	
1114:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
1115:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_SET_PREFIX, &ret);
 1571              		.loc 1 1115 0
 1572 0028 0C20     		movs	r0, #12
 1573 002a 01A9     		add	r1, sp, #4
 1574 002c FFF7FEFF 		bl	SimpleLinkWaitEvent
 1575              	.LVL192:
1116:../libraries/CC3000_Host_Driver/wlan.c **** 	
1117:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);    
 1576              		.loc 1 1117 0
 1577 0030 0198     		ldr	r0, [sp, #4]
 1578 0032 00E0     		b	.L139
 1579              	.LVL193:
 1580              	.L140:
1101:../libraries/CC3000_Host_Driver/wlan.c **** 		return ret;
 1581              		.loc 1 1101 0
 1582 0034 1846     		mov	r0, r3
 1583              	.LVL194:
 1584              	.L139:
1118:../libraries/CC3000_Host_Driver/wlan.c **** }
 1585              		.loc 1 1118 0
 1586 0036 0EBD     		pop	{r1, r2, r3, pc}
 1587              	.L142:
 1588              		.align	2
 1589              	.L141:
 1590 0038 00000000 		.word	tSLInformation
 1591              		.cfi_endproc
 1592              	.LFE72:
 1594              		.section	.text.wlan_smart_config_process,"ax",%progbits
 1595              		.align	1
 1596              		.global	wlan_smart_config_process
 1597              		.thumb
 1598              		.thumb_func
 1600              	wlan_smart_config_process:
 1601              	.LFB73:
1119:../libraries/CC3000_Host_Driver/wlan.c **** 
1120:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1121:../libraries/CC3000_Host_Driver/wlan.c **** //
1122:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_smart_config_process
1123:../libraries/CC3000_Host_Driver/wlan.c **** //!
1124:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   none 
1125:../libraries/CC3000_Host_Driver/wlan.c **** //!
1126:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   On success, zero is returned. On error, -1 is returned        
1127:../libraries/CC3000_Host_Driver/wlan.c **** //!
1128:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief   process the acquired data and store it as a profile. The acquired 
1129:../libraries/CC3000_Host_Driver/wlan.c **** //!           AP information is stored in CC3000 EEPROM encrypted.
1130:../libraries/CC3000_Host_Driver/wlan.c **** //!           The encrypted data is decrypted and stored as a profile.
1131:../libraries/CC3000_Host_Driver/wlan.c **** //!           behavior is as defined by connection policy.
1132:../libraries/CC3000_Host_Driver/wlan.c **** //
1133:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1134:../libraries/CC3000_Host_Driver/wlan.c **** 
1135:../libraries/CC3000_Host_Driver/wlan.c **** 
1136:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_UNENCRYPTED_SMART_CONFIG
1137:../libraries/CC3000_Host_Driver/wlan.c **** long
1138:../libraries/CC3000_Host_Driver/wlan.c **** wlan_smart_config_process()
1139:../libraries/CC3000_Host_Driver/wlan.c **** {
 1602              		.loc 1 1139 0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
 1606 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1607              	.LCFI17:
 1608              		.cfi_def_cfa_offset 24
 1609              		.cfi_offset 4, -24
 1610              		.cfi_offset 5, -20
 1611              		.cfi_offset 6, -16
 1612              		.cfi_offset 7, -12
 1613              		.cfi_offset 8, -8
 1614              		.cfi_offset 14, -4
1140:../libraries/CC3000_Host_Driver/wlan.c **** 	signed long	returnValue;
1141:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned long ssidLen, keyLen;
1142:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *decKeyPtr;
1143:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ssidPtr;
1144:../libraries/CC3000_Host_Driver/wlan.c **** 	
1145:../libraries/CC3000_Host_Driver/wlan.c **** 	// read the key from EEPROM - fileID 12
1146:../libraries/CC3000_Host_Driver/wlan.c **** 	returnValue = aes_read_key(key);
 1615              		.loc 1 1146 0
 1616 0004 3148     		ldr	r0, .L155
1139:../libraries/CC3000_Host_Driver/wlan.c **** {
 1617              		.loc 1 1139 0
 1618 0006 86B0     		sub	sp, sp, #24
 1619              	.LCFI18:
 1620              		.cfi_def_cfa_offset 48
 1621              		.loc 1 1146 0
 1622 0008 FFF7FEFF 		bl	aes_read_key
 1623              	.LVL195:
1147:../libraries/CC3000_Host_Driver/wlan.c **** 	
1148:../libraries/CC3000_Host_Driver/wlan.c **** 	if (returnValue != 0)
 1624              		.loc 1 1148 0
 1625 000c 0546     		mov	r5, r0
 1626 000e 0028     		cmp	r0, #0
 1627 0010 58D1     		bne	.L144
1149:../libraries/CC3000_Host_Driver/wlan.c **** 		return returnValue;
1150:../libraries/CC3000_Host_Driver/wlan.c **** 	
1151:../libraries/CC3000_Host_Driver/wlan.c **** 	// read the received data from fileID #13 and parse it according to the followings:
1152:../libraries/CC3000_Host_Driver/wlan.c **** 	// 1) SSID LEN - not encrypted
1153:../libraries/CC3000_Host_Driver/wlan.c **** 	// 2) SSID - not encrypted
1154:../libraries/CC3000_Host_Driver/wlan.c **** 	// 3) KEY LEN - not encrypted. always 32 bytes long
1155:../libraries/CC3000_Host_Driver/wlan.c **** 	// 4) Security type - not encrypted
1156:../libraries/CC3000_Host_Driver/wlan.c **** 	// 5) KEY - encrypted together with true key length as the first byte in KEY
1157:../libraries/CC3000_Host_Driver/wlan.c **** 	//	 to elaborate, there are two corner cases:
1158:../libraries/CC3000_Host_Driver/wlan.c **** 	//		1) the KEY is 32 bytes long. In this case, the first byte does not represent KEY length
1159:../libraries/CC3000_Host_Driver/wlan.c **** 	//		2) the KEY is 31 bytes long. In this case, the first byte represent KEY length and equals 31
1160:../libraries/CC3000_Host_Driver/wlan.c **** 	returnValue = nvmem_read(NVMEM_SHARED_MEM_FILEID, SMART_CONFIG_PROFILE_SIZE, 0, profileArray);
 1628              		.loc 1 1160 0
 1629 0012 2F4E     		ldr	r6, .L155+4
 1630 0014 2A46     		mov	r2, r5
 1631 0016 0D20     		movs	r0, #13
 1632              	.LVL196:
 1633 0018 4321     		movs	r1, #67
 1634 001a 3346     		mov	r3, r6
 1635 001c FFF7FEFF 		bl	nvmem_read
 1636              	.LVL197:
1161:../libraries/CC3000_Host_Driver/wlan.c **** 	
1162:../libraries/CC3000_Host_Driver/wlan.c **** 	if (returnValue != 0)
 1637              		.loc 1 1162 0
 1638 0020 0546     		mov	r5, r0
 1639 0022 0028     		cmp	r0, #0
 1640 0024 4ED1     		bne	.L144
 1641              	.LVL198:
1163:../libraries/CC3000_Host_Driver/wlan.c **** 		return returnValue;
1164:../libraries/CC3000_Host_Driver/wlan.c **** 	
1165:../libraries/CC3000_Host_Driver/wlan.c **** 	ssidPtr = &profileArray[1];
1166:../libraries/CC3000_Host_Driver/wlan.c **** 	
1167:../libraries/CC3000_Host_Driver/wlan.c **** 	ssidLen = profileArray[0];
 1642              		.loc 1 1167 0
 1643 0026 3778     		ldrb	r7, [r6, #0]	@ zero_extendqisi2
 1644              	.LVL199:
1168:../libraries/CC3000_Host_Driver/wlan.c **** 	
1169:../libraries/CC3000_Host_Driver/wlan.c **** 	decKeyPtr = &profileArray[profileArray[0] + 3];
1170:../libraries/CC3000_Host_Driver/wlan.c **** 	
1171:../libraries/CC3000_Host_Driver/wlan.c **** 	aes_decrypt(decKeyPtr, key);
 1645              		.loc 1 1171 0
 1646 0028 2849     		ldr	r1, .L155
1169:../libraries/CC3000_Host_Driver/wlan.c **** 	decKeyPtr = &profileArray[profileArray[0] + 3];
 1647              		.loc 1 1169 0
 1648 002a 07F10308 		add	r8, r7, #3
 1649 002e 08EB0604 		add	r4, r8, r6
 1650              	.LVL200:
 1651              		.loc 1 1171 0
 1652 0032 2046     		mov	r0, r4
 1653              	.LVL201:
 1654 0034 FFF7FEFF 		bl	aes_decrypt
 1655              	.LVL202:
1172:../libraries/CC3000_Host_Driver/wlan.c **** 	if (profileArray[profileArray[0] + 1] > 16)
 1656              		.loc 1 1172 0
 1657 0038 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 1658 003a F618     		adds	r6, r6, r3
 1659 003c 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 1660 003e 1028     		cmp	r0, #16
 1661 0040 04D9     		bls	.L145
1173:../libraries/CC3000_Host_Driver/wlan.c **** 		aes_decrypt((unsigned char *)(decKeyPtr + 16), key);
 1662              		.loc 1 1173 0
 1663 0042 04F11000 		add	r0, r4, #16
 1664 0046 2149     		ldr	r1, .L155
 1665 0048 FFF7FEFF 		bl	aes_decrypt
 1666              	.LVL203:
 1667              	.L145:
1174:../libraries/CC3000_Host_Driver/wlan.c **** 	
1175:../libraries/CC3000_Host_Driver/wlan.c **** 	if (*(unsigned char *)(decKeyPtr +31) != 0)
 1668              		.loc 1 1175 0
 1669 004c E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 1670 004e 204A     		ldr	r2, .L155+4
 1671 0050 21B1     		cbz	r1, .L146
1176:../libraries/CC3000_Host_Driver/wlan.c **** 	{
1177:../libraries/CC3000_Host_Driver/wlan.c **** 		if (*decKeyPtr == 31)
 1672              		.loc 1 1177 0
 1673 0052 12F80830 		ldrb	r3, [r2, r8]	@ zero_extendqisi2
 1674 0056 1F2B     		cmp	r3, #31
 1675 0058 04D1     		bne	.L152
 1676 005a 01E0     		b	.L153
 1677              	.L146:
1178:../libraries/CC3000_Host_Driver/wlan.c **** 		{
1179:../libraries/CC3000_Host_Driver/wlan.c **** 			keyLen = 31;
1180:../libraries/CC3000_Host_Driver/wlan.c **** 			decKeyPtr++;
1181:../libraries/CC3000_Host_Driver/wlan.c **** 		}
1182:../libraries/CC3000_Host_Driver/wlan.c **** 		else
1183:../libraries/CC3000_Host_Driver/wlan.c **** 		{
1184:../libraries/CC3000_Host_Driver/wlan.c **** 			keyLen = 32;
1185:../libraries/CC3000_Host_Driver/wlan.c **** 		}
1186:../libraries/CC3000_Host_Driver/wlan.c **** 	}
1187:../libraries/CC3000_Host_Driver/wlan.c **** 	else
1188:../libraries/CC3000_Host_Driver/wlan.c **** 	{
1189:../libraries/CC3000_Host_Driver/wlan.c **** 		keyLen = *decKeyPtr;
 1678              		.loc 1 1189 0
 1679 005c 12F80830 		ldrb	r3, [r2, r8]	@ zero_extendqisi2
 1680              	.L153:
 1681              	.LVL204:
1190:../libraries/CC3000_Host_Driver/wlan.c **** 		decKeyPtr++;
 1682              		.loc 1 1190 0
 1683 0060 0134     		adds	r4, r4, #1
 1684              	.LVL205:
 1685 0062 00E0     		b	.L147
 1686              	.LVL206:
 1687              	.L152:
1184:../libraries/CC3000_Host_Driver/wlan.c **** 			keyLen = 32;
 1688              		.loc 1 1184 0
 1689 0064 2023     		movs	r3, #32
 1690              	.L147:
 1691              	.LVL207:
1191:../libraries/CC3000_Host_Driver/wlan.c **** 	}
1192:../libraries/CC3000_Host_Driver/wlan.c **** 	
1193:../libraries/CC3000_Host_Driver/wlan.c **** 	// add a profile
1194:../libraries/CC3000_Host_Driver/wlan.c **** 	switch (profileArray[profileArray[0] + 2])
 1692              		.loc 1 1194 0
 1693 0066 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 1694 0068 1118     		adds	r1, r2, r0
 1695 006a 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 1696 006c 032A     		cmp	r2, #3
 1697 006e 29D8     		bhi	.L144
 1698 0070 DFE802F0 		tbb	[pc, r2]
 1699              	.L151:
 1700 0074 02       		.byte	(.L148-.L151)/2
 1701 0075 0E       		.byte	(.L149-.L151)/2
 1702 0076 19       		.byte	(.L150-.L151)/2
 1703 0077 19       		.byte	(.L150-.L151)/2
 1704              		.align	1
 1705              	.L148:
1195:../libraries/CC3000_Host_Driver/wlan.c **** 	{
1196:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_UNSEC://None
1197:../libraries/CC3000_Host_Driver/wlan.c **** 	 	{
1198:../libraries/CC3000_Host_Driver/wlan.c **** 			returnValue = wlan_add_profile(profileArray[profileArray[0] + 2], 	// security type
 1706              		.loc 1 1198 0
 1707 0078 0020     		movs	r0, #0
 1708 007a 0125     		movs	r5, #1
 1709              	.LVL208:
 1710 007c 0095     		str	r5, [sp, #0]
 1711 007e 0190     		str	r0, [sp, #4]
 1712 0080 0290     		str	r0, [sp, #8]
 1713 0082 0390     		str	r0, [sp, #12]
 1714 0084 0490     		str	r0, [sp, #16]
 1715 0086 0590     		str	r0, [sp, #20]
 1716 0088 1249     		ldr	r1, .L155+8
 1717              	.LVL209:
 1718 008a 3A46     		mov	r2, r7
 1719 008c 0346     		mov	r3, r0
 1720              	.LVL210:
 1721 008e 16E0     		b	.L154
 1722              	.LVL211:
 1723              	.L149:
1199:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidPtr,		 					// SSID
1200:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidLen, 							// SSID length
1201:../libraries/CC3000_Host_Driver/wlan.c **** 																		 NULL, 							// BSSID
1202:../libraries/CC3000_Host_Driver/wlan.c **** 																		 1,								// Priority
1203:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0, 0, 0, 0, 0);
1204:../libraries/CC3000_Host_Driver/wlan.c **** 			
1205:../libraries/CC3000_Host_Driver/wlan.c **** 			break;
1206:../libraries/CC3000_Host_Driver/wlan.c **** 	 	}
1207:../libraries/CC3000_Host_Driver/wlan.c **** 		
1208:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WEP://WEP
1209:../libraries/CC3000_Host_Driver/wlan.c **** 		{
1210:../libraries/CC3000_Host_Driver/wlan.c **** 			returnValue = wlan_add_profile(profileArray[profileArray[0] + 2], 	// security type
 1724              		.loc 1 1210 0
 1725 0090 0120     		movs	r0, #1
 1726 0092 8DE80900 		stmia	sp, {r0, r3}
 1727 0096 0023     		movs	r3, #0
 1728              	.LVL212:
 1729 0098 0293     		str	r3, [sp, #8]
 1730 009a 0393     		str	r3, [sp, #12]
 1731 009c 0494     		str	r4, [sp, #16]
 1732 009e 0593     		str	r3, [sp, #20]
 1733 00a0 0C49     		ldr	r1, .L155+8
 1734              	.LVL213:
 1735 00a2 3A46     		mov	r2, r7
 1736 00a4 0BE0     		b	.L154
 1737              	.LVL214:
 1738              	.L150:
1211:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidPtr, 							// SSID
1212:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidLen, 							// SSID length
1213:../libraries/CC3000_Host_Driver/wlan.c **** 																		 NULL, 							// BSSID
1214:../libraries/CC3000_Host_Driver/wlan.c **** 																		 1,								// Priority
1215:../libraries/CC3000_Host_Driver/wlan.c **** 																		 keyLen,							// KEY length
1216:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0, 								// KEY index
1217:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0,
1218:../libraries/CC3000_Host_Driver/wlan.c **** 																		 decKeyPtr,						// KEY
1219:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0);
1220:../libraries/CC3000_Host_Driver/wlan.c **** 			
1221:../libraries/CC3000_Host_Driver/wlan.c **** 			break;
1222:../libraries/CC3000_Host_Driver/wlan.c **** 		}
1223:../libraries/CC3000_Host_Driver/wlan.c **** 		
1224:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WPA://WPA
1225:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WPA2://WPA2
1226:../libraries/CC3000_Host_Driver/wlan.c **** 		{
1227:../libraries/CC3000_Host_Driver/wlan.c **** 			returnValue = wlan_add_profile(WLAN_SEC_WPA2, 	// security type
 1739              		.loc 1 1227 0
 1740 00a6 0120     		movs	r0, #1
 1741 00a8 1821     		movs	r1, #24
 1742 00aa 1E22     		movs	r2, #30
 1743 00ac 0225     		movs	r5, #2
 1744              	.LVL215:
 1745 00ae 8DE82700 		stmia	sp, {r0, r1, r2, r5}
 1746 00b2 0849     		ldr	r1, .L155+8
 1747              	.LVL216:
 1748 00b4 0593     		str	r3, [sp, #20]
 1749 00b6 0494     		str	r4, [sp, #16]
 1750 00b8 0320     		movs	r0, #3
 1751 00ba 3A46     		mov	r2, r7
 1752 00bc 0023     		movs	r3, #0
 1753              	.LVL217:
 1754              	.L154:
 1755 00be FFF7FEFF 		bl	wlan_add_profile
 1756              	.LVL218:
 1757 00c2 0546     		mov	r5, r0
 1758              	.LVL219:
 1759              	.L144:
1228:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidPtr,
1229:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidLen,
1230:../libraries/CC3000_Host_Driver/wlan.c **** 																		 NULL, 							// BSSID
1231:../libraries/CC3000_Host_Driver/wlan.c **** 																		 1,								// Priority
1232:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0x18,							// PairwiseCipher
1233:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0x1e, 							// GroupCipher
1234:../libraries/CC3000_Host_Driver/wlan.c **** 																		 2,								// KEY management
1235:../libraries/CC3000_Host_Driver/wlan.c **** 																		 decKeyPtr,						// KEY
1236:../libraries/CC3000_Host_Driver/wlan.c **** 																		 keyLen);							// KEY length
1237:../libraries/CC3000_Host_Driver/wlan.c **** 			
1238:../libraries/CC3000_Host_Driver/wlan.c **** 			break;
1239:../libraries/CC3000_Host_Driver/wlan.c **** 		}
1240:../libraries/CC3000_Host_Driver/wlan.c **** 	}
1241:../libraries/CC3000_Host_Driver/wlan.c **** 	
1242:../libraries/CC3000_Host_Driver/wlan.c **** 	return returnValue;
1243:../libraries/CC3000_Host_Driver/wlan.c **** }
 1760              		.loc 1 1243 0
 1761 00c4 2846     		mov	r0, r5
 1762 00c6 06B0     		add	sp, sp, #24
 1763 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1764              	.L156:
 1765              		.align	2
 1766              	.L155:
 1767 00cc 00000000 		.word	key
 1768 00d0 00000000 		.word	profileArray
 1769 00d4 01000000 		.word	profileArray+1
 1770              		.cfi_endproc
 1771              	.LFE73:
 1773              		.comm	profileArray,67,1
 1774              		.comm	key,16,1
 1775              		.comm	tSLInformation,68,4
 1776              		.text
 1777              	.Letext0:
 1778              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 1779              		.file 3 "../libraries/CC3000_Host_Driver/cc3000_common.h"
 1780              		.file 4 "/Users/zac/code/spark/cc3000-patch-programmer/inc/cc3000_spi.h"
 1781              		.file 5 "/Users/zac/code/spark/cc3000-patch-programmer/libraries/CMSIS/Include/core_cm3.h"
 1782              		.file 6 "../libraries/CC3000_Host_Driver/hci.h"
 1783              		.file 7 "../libraries/CC3000_Host_Driver/evnt_handler.h"
 1784              		.file 8 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 1785              		.file 9 "../libraries/CC3000_Host_Driver/security.h"
 1786              		.file 10 "../libraries/CC3000_Host_Driver/nvmem.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 wlan.c
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:19     .text.SpiReceiveHandler:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:24     .text.SpiReceiveHandler:0000000000000000 SpiReceiveHandler
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:46     .text.SpiReceiveHandler:000000000000000c $d
                            *COM*:0000000000000044 tSLInformation
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:51     .text.wlan_init:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:56     .text.wlan_init:0000000000000000 wlan_init
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:104    .text.wlan_init:0000000000000024 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:109    .text.wlan_start:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:114    .text.wlan_start:0000000000000000 wlan_start
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:246    .text.wlan_start:0000000000000088 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:253    .text.wlan_stop:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:258    .text.wlan_stop:0000000000000000 wlan_stop
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:301    .text.wlan_stop:0000000000000028 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:306    .text.wlan_connect:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:311    .text.wlan_connect:0000000000000000 wlan_connect
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:483    .text.wlan_connect:00000000000000c4 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:488    .text.wlan_disconnect:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:493    .text.wlan_disconnect:0000000000000000 wlan_disconnect
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:538    .text.wlan_disconnect:000000000000002c $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:543    .text.wlan_ioctl_set_connection_policy:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:548    .text.wlan_ioctl_set_connection_policy:0000000000000000 wlan_ioctl_set_connection_policy
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:619    .text.wlan_ioctl_set_connection_policy:0000000000000044 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:624    .text.wlan_add_profile:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:629    .text.wlan_add_profile:0000000000000000 wlan_add_profile
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:686    .text.wlan_add_profile:0000000000000036 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:690    .text.wlan_add_profile:000000000000003a $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1013   .text.wlan_add_profile:00000000000001cc $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1018   .text.wlan_ioctl_del_profile:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1023   .text.wlan_ioctl_del_profile:0000000000000000 wlan_ioctl_del_profile
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1074   .text.wlan_ioctl_del_profile:0000000000000030 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1079   .text.wlan_ioctl_get_scan_results:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1084   .text.wlan_ioctl_get_scan_results:0000000000000000 wlan_ioctl_get_scan_results
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1131   .text.wlan_ioctl_get_scan_results:000000000000002c $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1136   .text.wlan_ioctl_set_scan_params:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1141   .text.wlan_ioctl_set_scan_params:0000000000000000 wlan_ioctl_set_scan_params
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1243   .text.wlan_ioctl_set_scan_params:0000000000000070 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1248   .text.wlan_set_event_mask:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1253   .text.wlan_set_event_mask:0000000000000000 wlan_set_event_mask
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1342   .text.wlan_set_event_mask:0000000000000060 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1347   .text.wlan_ioctl_statusget:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1352   .text.wlan_ioctl_statusget:0000000000000000 wlan_ioctl_statusget
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1391   .text.wlan_ioctl_statusget:0000000000000024 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1396   .text.wlan_smart_config_start:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1401   .text.wlan_smart_config_start:0000000000000000 wlan_smart_config_start
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1457   .text.wlan_smart_config_start:0000000000000034 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1462   .text.wlan_smart_config_stop:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1467   .text.wlan_smart_config_stop:0000000000000000 wlan_smart_config_stop
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1506   .text.wlan_smart_config_stop:0000000000000024 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1511   .text.wlan_smart_config_set_prefix:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1516   .text.wlan_smart_config_set_prefix:0000000000000000 wlan_smart_config_set_prefix
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1590   .text.wlan_smart_config_set_prefix:0000000000000038 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1595   .text.wlan_smart_config_process:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1600   .text.wlan_smart_config_process:0000000000000000 wlan_smart_config_process
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1700   .text.wlan_smart_config_process:0000000000000074 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1704   .text.wlan_smart_config_process:0000000000000078 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc7sTOGO.s:1767   .text.wlan_smart_config_process:00000000000000cc $d
                            *COM*:0000000000000010 key
                            *COM*:0000000000000043 profileArray
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.94ea818a60f77b04fe5add16507b1dca
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:0000000000000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:0000000000000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:0000000000000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:0000000000000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:0000000000000000 wm4.stddef.h.235.fb53403984550eba259277227435d55a
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:0000000000000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:0000000000000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:0000000000000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:0000000000000000 wm4.cc3000_common.h.58.c968e6f087d13da99b8c4c23daaad62a
                           .group:0000000000000000 wm4.wlan.h.50.c5375bd1ff0b62d103425d9a2fb7a26e
                           .group:0000000000000000 wm4.hci.h.36.c53403a55b478473c6d08326a2c2336c
                           .group:0000000000000000 wm4.platform_config.h.13.537ea5f27be1e1b5a05f1a7b76278f84
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.64.07c104f22a887098a9ccb01471e84bcc
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.31.2ee3219a25ef4ced658f2fe9d8cd94aa
                           .group:0000000000000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.platform_config.h.40.7acc7b4edf71863be31619c6a2d65803
                           .group:0000000000000000 wm4.hw_config.h.45.70fd431154434a3dd8dba02a13e78227
                           .group:0000000000000000 wm4.cc3000_spi.h.23.1c29ffde27bc0db6b69332f529b4950f
                           .group:0000000000000000 wm4.socket.h.36.41be4fe54cda6cd3756b284824563e42
                           .group:0000000000000000 wm4.nvmem.h.36.ee544af6426a64366cdb46d882de9ae2
                           .group:0000000000000000 wm4.security.h.36.98bbd60412404fdd1becbd443773c316
                           .group:0000000000000000 wm4.evnt_handler.h.36.be99e6836a9f57d146a5dafeb0edb1e6

UNDEFINED SYMBOLS
hci_unsolicited_event_handler
SpiOpen
hci_command_send
SimpleLinkWaitEvent
wlan_tx_buffer
SpiClose
UINT32_TO_STREAM_f
UINT16_TO_STREAM_f
__errno
aes_read_key
nvmem_read
aes_decrypt
